/*! SifrrStater v0.0.5 - sifrr project | MIT licensed | https://github.com/sifrr/sifrr-elements */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("@sifrr/dom"),require("@sifrr/storage")):"function"==typeof define&&define.amd?define(["@sifrr/dom","@sifrr/storage"],e):(t=t||self).SifrrStater=e(t.Sifrr.Dom,t.Sifrr.Storage)}(this,function(t,e){"use strict";function s(t,e){return e||(e=t.slice(0)),Object.freeze(Object.defineProperties(t,{raw:{value:Object.freeze(e)}}))}t=t&&t.hasOwnProperty("default")?t.default:t,e=e&&e.hasOwnProperty("default")?e.default:e;function i(){const t=s(['<style media="screen">\n  ',"\n  slot::slotted(*) {\n    ${this.options ? this.options.style : ''}\n  }\n  :host {\n    padding-bottom: ${this.options && this.options.showUnderline ? '3px' : '0'};\n  }\n</style>\n<slot>\n</slot>\n<div class=\"underline\"></div>"],['<style media="screen">\n  ',"\n  slot::slotted(*) {\n    \\${this.options ? this.options.style : ''}\n  }\n  :host {\n    padding-bottom: \\${this.options && this.options.showUnderline ? '3px' : '0'};\n  }\n</style>\n<slot>\n</slot>\n<div class=\"underline\"></div>"]);return i=function(){return t},t}const n=t.template(i(),":host{width:100%;position:relative;overflow-x:auto;box-sizing:border-box}:host,slot{display:block}slot{min-width:100%}slot::slotted(*){float:left;text-align:center;vertical-align:middle;opacity:.7;cursor:pointer}slot::slotted(.active){opacity:1}slot::slotted(:hover){opacity:.9}.underline{position:absolute;bottom:0;height:3px;background:#fff}");t.register(class extends t.Element{static get template(){return n}static observedAttrs(){return["options"]}onConnect(){this._connected=!0,this.$("slot").addEventListener("slotchange",this.refresh.bind(this,{})),this.refresh()}onAttributeChange(t,e,s){"options"===t&&(this._attrOptions=JSON.parse(s||"{}"),this._connected&&this.refresh())}refresh(t){this._options=Object.assign({content:this,slot:this.$("slot"),showUnderline:!0,line:this.$(".underline"),container:null},this._options,t),this.options=Object.assign({},this._options,this._attrOptions),this.options.menus=this.options.slot.assignedNodes().filter(t=>1===t.nodeType),!this.options.menus||this.options.menus.length<1||(this.setProps(),this.active=this.active||0)}setProps(){if(this.options.showUnderline||(this.options.line.style.display="none"),this.setMenuProps(),this.options.container){const e=this.options.container;e.onScrollPercent=this.setScrollPercent.bind(this),t.Event.addListener("update",e,()=>this.active=e.active)}this.setScrollPercent(0)}setMenuProps(){let t=0;this.options.menuProps=[],Array.from(this.options.menus).forEach((e,s)=>{const i=e.getBoundingClientRect().width;this.options.menuProps[s]={width:i,left:t},t+=i,e._click=()=>{this.options.container?this.options.container.active=s:this.active=s}});const e=this.options.menuProps[this.options.menus.length-1];this.options.totalMenuWidth=e.left+e.width,this.$("slot").style.width=this.options.slot.style.width=this.options.totalMenuWidth+1+"px"}setScrollPercent(t){const e=t%1,s=Math.floor(t),i=this.options.menuProps[s].left*(1-e)+(this.options.menuProps[s+1]||{left:0}).left*e,n=this.options.menuProps[s].width*(1-e)+(this.options.menuProps[s+1]||{width:0}).width*e;this.options.line.style.left=i+"px",this.options.line.style.width=n+"px",this.scrollLeft=i+(n-this.clientWidth)/2,0===e&&(this._active=s,this.update())}get active(){return this._active||0}set active(t){this._active=t,this.setScrollPercent(t),this.update()}onUpdate(){if(this.options)for(let t=0,e=this.options.menus.length;t<e;t++)this.options.menus[t].classList[t===this.active?"add":"remove"]("active")}});"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;var o=function(t,e){return t(e={exports:{}},e.exports),e.exports}(function(t,e){
/*! sifrr-animate v0.0.3 - sifrr project | MIT licensed | https://github.com/sifrr/sifrr-animate */
t.exports=function(){const t={};var e=class{constructor(e){const s=e.join("_");return t[s]||(this.setProps(...e),t[s]=this.final.bind(this)),t[s]}setProps(t,e,s,i){let n={x1:t,y1:e,x2:s,y2:i,A:(t,e)=>1-3*e+3*t,B:(t,e)=>3*e-6*t,C:t=>3*t,CalcBezier:(t,e,s)=>((this.A(e,s)*t+this.B(e,s))*t+this.C(e))*t,GetSlope:(t,e,s)=>3*this.A(e,s)*t*t+2*this.B(e,s)*t+this.C(e)};Object.assign(this,n)}final(t){return this.x1==this.y1&&this.x2==this.y2?t:this.CalcBezier(this.GetTForX(t),this.y1,this.y2)}GetTForX(t){let e=t;for(let s=0;s<4;++s){let s=this.GetSlope(e,this.x1,this.x2);if(0==s)return e;let i=this.CalcBezier(e,this.x1,this.x2)-t;e-=i/s}return e}},s={linear:[0,0,1,1],ease:[.25,.1,.25,1],easeIn:[.42,0,1,1],easeOut:[0,0,.58,1],easeInOut:[.42,0,.58,1],spring:[.3642,0,.6358,1]},i=t=>new Promise(e=>setTimeout(e,t));const n=/((?:[+\-*\/]=)?-?\d+\.?\d*)/,o=new Set;window.requestAnimationFrame(function t(e){o.forEach(t=>t(e)),window.requestAnimationFrame(t)});var a=function({target:t,prop:a,from:r,to:l,time:h=300,type:c="spring",onUpdate:d,round:p=!1,delay:u=0}){const f=l.toString().split(n),m=f.length,b=[],g=[],v=[],y=(r||t[a]||"").toString().split(n),x="function"==typeof d;for(let t=0;t<m;t++){const e=Number(y[t])||0;let s=Number(f[t]);if("="===f[t][1])switch(s=Number(f[t].slice(2)),f[t][0]){case"+":s=e+s;break;case"-":s=e-s;break;case"*":s*=e;break;case"/":s=e/s}isNaN(s)||!f[t]?b.push(f[t]):(g.push(e),v.push(s-e))}const w={raw:b};return i(u).then(()=>new Promise((i,n)=>{if(s[c]&&(c=s[c]),Array.isArray(c))c=new e(c);else if("function"!=typeof c)return n(Error("type should be one of "+Object.keys(s).toString()+" or Bezier Array or Function, given "+c));let r;const l=function(e){const s=(e-(r=r||e-17))/h,u=c(s>=1?1:s),f=v.map((t,e)=>{const s=u*t+g[e];return p?Math.round(s):s}),m=String.raw(w,...f);try{t[a]=Number(m)||m,x&&d(t,a,t[a]),s>=1&&i(o.delete(l))}catch(t){o.delete(l),n(t)}};o.add(l)}))};function r({targets:t,target:e,to:s,time:i,type:n,onUpdate:o,round:r,delay:l}){t=t?Array.from(t):[e];let h=s,c=l,d=i;return Promise.all(t.map((t,e)=>("function"==typeof s&&(h=s.call(t,e)),"function"==typeof l&&(c=l.call(t,e)),"function"==typeof i&&(d=i.call(t,e)),function t(e,s,i,l){const h=[];for(let c in s){let d,p;Array.isArray(s[c])?[d,p]=s[c]:p=s[c],"object"!=typeof s[c]||Array.isArray(s[c])?h.push(a({target:e,prop:c,to:p,time:l,type:n,from:d,onUpdate:o,round:r,delay:i})):h.push(t(e[c],s[c],i,l))}return Promise.all(h)}(t,h,c,d))))}return r.types=s,r.wait=i,r.animate=r,r.keyframes=t=>{let e=Promise.resolve(!0);return t.forEach(t=>{Array.isArray(t)&&(e=e.then(()=>Promise.all(t.map(r)))),e=e.then(()=>r(t))}),e},r.loop=t=>t().then(()=>r.loop(t)),r}();
/*! (c) @aadityataparia */});function a(){const t=s(['<style media="screen">\n  ','\n</style>\n<style media="screen">\n  .tabs {\n    width: ${this.totalWidth};\n  }\n  .tabs::slotted(*) {\n    width: ${this.tabWidth};\n  }\n</style>\n<slot class="tabs">\n</slot>'],['<style media="screen">\n  ','\n</style>\n<style media="screen">\n  .tabs {\n    width: \\${this.totalWidth};\n  }\n  .tabs::slotted(*) {\n    width: \\${this.tabWidth};\n  }\n</style>\n<slot class="tabs">\n</slot>']);return a=function(){return t},t}const r=t.template(a(),":host{box-sizing:border-box;width:100%;position:relative;overflow-x:auto;margin:0}.tabs,:host{display:block}.tabs{min-height:1px}.tabs::slotted(*){float:left;max-height:100%;height:100%;overflow-x:hidden;overflow-y:auto;vertical-align:middle;box-sizing:border-box}");t.register(class extends t.Element{static get template(){return r}static observedAttrs(){return["options"]}onConnect(){this._connected=!0,this.refresh(),window.addEventListener("resize",()=>requestAnimationFrame(this.refresh.bind(this))),this.options.slot.addEventListener("slotchange",this.refresh.bind(this,{})),this.setScrollEvent()}onAttributeChange(t,e,s){"options"===t&&(this._attrOptions=JSON.parse(s||"{}"),this._connected&&this.refresh())}refresh(t){this._options=Object.assign({content:this,slot:this.$("slot"),num:1,animation:"spring",animationTime:300,scrollBreakpoint:.3,loop:!1},this._options,t),this.options=Object.assign({},this._options,this._attrOptions),this.options.tabs=this.options.slot.assignedNodes().filter(t=>1===t.nodeType),this.total=this.options.tabs.length,!this.options.tabs||this.options.tabs.length<1||("auto"===this.options.num?(this.tabWidth="auto",this._totalWidth=this.options.tabs.reduce((t,e)=>t+e.getBoundingClientRect().width,0),this.totalWidth=this._totalWidth+"px"):(this._tabWidth=this.getBoundingClientRect().width/this.options.num,this.tabWidth=this._tabWidth+"px",this._totalWidth=this._tabWidth*this.options.tabs.length,this.totalWidth=this._totalWidth+"px",this.active="number"==typeof this._active?this._active:0))}setScrollEvent(){let t,e,s=this;"auto"!==this.options.num&&this.options.content.addEventListener("scroll",function(){e=s.active;const i=s.options.content.scrollLeft/s._tabWidth,n=Math.round(i);s.onScrollPercent(i),clearTimeout(t),t=setTimeout(function(){i-e<-s.options.scrollBreakpoint?s.active=Math.min(n,e-1):i-e>+s.options.scrollBreakpoint?s.active=Math.max(n,e+1):s.active=e},50)})}onScrollPercent(){}get active(){return this._active}set active(t){this._active=this.getTabNumber(t),this.update()}onUpdate(){if(!this.options||"auto"===this.options.num)return;const t=this._active;o({target:this.options.content,to:{scrollLeft:t*this._tabWidth},time:this.options.animationTime,type:"none"===this.options.animation?()=>1:this.options.animation});for(let e=0,s=this.options.tabs.length;e<s;e++){const s=this.options.tabs[e];e===t?(s.onActive&&!s.classList.contains("active")&&s.onActive(),s.classList.add("active")):(s.onInactive&&s.classList.contains("active")&&s.onInactive(),s.classList.remove("active"))}}next(){"auto"===this.options.num?this.options.content.scrollLeft+=this._totalWidth/2:this.active+=1}hasNext(){return this.active!==this.options.tabs.length-this.options.num}prev(){"auto"===this.options.num?this.options.content.scrollLeft-=this._totalWidth/2:this.active-=1}hasPrev(){return 0!==this.active}getTabNumber(t){const e=this.options.tabs.length;if(e<1)return 0;const s=this.options.num;return(t=t<0?t+e:t%e)+s-1>=e&&(t=this.options.loop?t%e:e-s),t}});function l(){const t=s(["<style>\n  ",'\n</style>\n<div id="showHide" _click=${this.showHide}></div>\n<sifrr-tab-header style=\'background: blue; color: white\' data-sifrr-html="true">\n  ${ this.headingHtml() }\n</sifrr-tab-header>\n<sifrr-tab-container style=\'height: calc(100vh - 132px)\' data-sifrr-html="true">\n  ${ this.stateHtml() }\n</sifrr-tab-container>\n<footer>\n  <input _keyup=${this.addTargetOnEnter} id="addTargetInput" type="text" name="addTargetInput" value="" placeholder="Enter css selector query of target">\n  <button _click=${this.addTarget} class="btn3" type="button" name="addTargetButton">Add Taget</button>\n  <button _click=${this.commitAll} class="btn3" type="button" name="commitAll">Commit All</button>\n  <button _click=${this.resetAllToFirstState} class="btn3" type="button" name="resetAll">Reset All</button>\n  <button _click=${this.saveData} class="btn3" type="button" name="saveData">Save Data</button>\n  <button _click=${this.loadData} class="btn3" type="button" name="loadData">Load Data</button>\n  <button _click=${this.clearAll} class="btn3" type="button" name="clearAll">Remove All</button>\n</footer>'],["<style>\n  ",'\n</style>\n<div id="showHide" _click=\\${this.showHide}></div>\n<sifrr-tab-header style=\'background: blue; color: white\' data-sifrr-html="true">\n  \\${ this.headingHtml() }\n</sifrr-tab-header>\n<sifrr-tab-container style=\'height: calc(100vh - 132px)\' data-sifrr-html="true">\n  \\${ this.stateHtml() }\n</sifrr-tab-container>\n<footer>\n  <input _keyup=\\${this.addTargetOnEnter} id="addTargetInput" type="text" name="addTargetInput" value="" placeholder="Enter css selector query of target">\n  <button _click=\\${this.addTarget} class="btn3" type="button" name="addTargetButton">Add Taget</button>\n  <button _click=\\${this.commitAll} class="btn3" type="button" name="commitAll">Commit All</button>\n  <button _click=\\${this.resetAllToFirstState} class="btn3" type="button" name="resetAll">Reset All</button>\n  <button _click=\\${this.saveData} class="btn3" type="button" name="saveData">Save Data</button>\n  <button _click=\\${this.loadData} class="btn3" type="button" name="loadData">Load Data</button>\n  <button _click=\\${this.clearAll} class="btn3" type="button" name="clearAll">Remove All</button>\n</footer>']);return l=function(){return t},t}const h=t.template(l(),':host{position:fixed;right:0;top:0;bottom:0;height:100%;max-width:100%;width:320px;z-index:1000;background-color:rgba(0,0,0,.8);transform:translate3d(100%,0,0);transition:all .2s ease}:host(.show){transform:translateZ(0)}*{box-sizing:border-box}#showHide{position:fixed;left:-30px;top:0;bottom:0;width:30px;height:30px;margin-top:5px;background-color:#00f;z-index:2}.stateContainer{padding-left:10px;margin-left:10px;border-left:1px solid #fff;position:relative}.stateContainer.off{opacity:.5}.stateContainer .dotC{position:absolute;top:0;left:-10px;width:20px;height:100%;cursor:pointer}.stateContainer .dotC .dot{position:absolute;top:50%;left:10px;width:10px;height:10px;transform:translate3d(-50%,-50%,0);background-color:#fff;border-radius:50%}.stateContainer .delete{position:absolute;top:0;right:0;padding:4px;background-color:rgba(0,0,0,.7);color:#fff;cursor:pointer}.state{white-space:pre-wrap;max-height:90px;overflow:hidden;background-color:hsla(0,0%,100%,.97);padding:5px;margin-bottom:5px;position:relative;cursor:pointer}.state:hover:after{content:"\\\\\\/";position:absolute;bottom:0;left:0;width:100%;background-color:rgba(0,0,0,.7);text-align:center;color:#fff}.state.open{max-height:none}.state.open:hover:after{content:"\\/\\\\"}.key{color:red}.string{color:green}.boolean,.null,.number{color:#00f}footer{position:absolute;bottom:0}input{width:calc(100% - 6px)}.btn3,input{margin:3px;padding:3px}.btn3{width:calc(33% - 8px);background:#fff}');t.Event.add("click"),t.Event.add("keyup");class c extends t.Element{static get template(){return h}onConnect(){let s=this;this.storage=new e({name:"sifrr-stater"+window.location.href}),t.Event.addListener("click",".state",function(t,e){e.classList.contains("open")?e.classList.remove("open"):e.classList.add("open")}),t.Event.addListener("click",".dotC",function(t,e,i){s.toState(parseInt(i.dataset.target),parseInt(i.dataset.stateIndex))}),t.Event.addListener("click",".delete",function(t,e){s.deleteState(parseInt(e.dataset.target),parseInt(e.dataset.stateIndex))}),t.Event.addListener("click",".commit",function(t,e){const i=parseInt(e.parentNode.dataset.target);s.commit(i)}),t.Event.addListener("click",".reset",function(t,e){const i=parseInt(e.parentNode.dataset.target);s.resetToFirstState(i)}),t.Event.addListener("click",".remove",function(t,e){const i=parseInt(e.parentNode.dataset.target);s.removeTarget(i)})}showHide(){this.classList.contains("show")?this.classList.remove("show"):this.classList.add("show")}addTargetOnEnter(t){"Enter"===t.key&&this.addTarget()}headingHtml(){return this.state.queries.map(t=>"<span>".concat(t,"</span>")).join("")}stateHtml(){let t=this;return this.state.states.map((e,s)=>'<div data-target="'.concat(s,'">\n      <button class="btn3 commit" type="button" name="commit">Commit</button>\n      <button class="btn3 reset" type="button" name="reset">Reset</button>\n      <button class="btn3 remove" type="button" name="remove">Remove</button>\n      ').concat(e.map((e,i)=>'<div class="stateContainer '.concat(i<=t.state.activeStates[s]?"on":"off",'">\n                           <div class="dotC" data-target="').concat(s,'" data-state-index="').concat(i,'"><div class="dot"></div></div>\n                           <div class="state">').concat(c.prettyJSON(e),'</div>\n                           <div class="delete" data-target="').concat(s,'" data-state-index="').concat(i,'">X</div>\n                           </div>')).join(""),"</div>")).join("")}addTarget(t){"string"!=typeof t&&(t=this.$("#addTargetInput").value);let e=window.document.querySelector(t);if(!e.isSifrr)return window.console.log("Invalid Sifrr Element.",e),!1;if(!e.state)return window.console.log("Sifrr Element has no state.",e),!1;const s=e.onStateChange,i=this;e.onStateChange=function(){i.addState(this,this.state),s.call(this)};let n=this.state.targets.indexOf(e);n>-1||(this.state.targets.push(e),this.state.queries.push(t),n=this.state.targets.indexOf(e),this.state.states[n]=[JSON.parse(JSON.stringify(e.state))],this.state.activeStates[n]=0,this.update())}removeTarget(t){const{index:e}=this.getTarget(t);e>-1&&(this.state.targets.splice(e,1),this.state.queries.splice(e,1),this.state.states.splice(e,1),this.state.activeStates.splice(e,1),this.update())}addState(t,e){const{index:s}=this.getTarget(t);if(s>-1){const t=this.state.activeStates[s],i=JSON.stringify(e);i!==JSON.stringify(this.state.states[s][t])&&(this.state.states[s].splice(t+1,0,JSON.parse(i)),this.state.activeStates[s]=t+1,this.update())}}deleteState(t,e){const{index:s}=this.getTarget(t);this.state.states[s].splice(e,1),e<this.state.activeStates[s]?this.state.activeStates[s]-=1:e==this.state.activeStates[s]&&(this.state.activeStates[s]-=1,this.toState(s,this.state.activeStates[s])),this.update()}commit(t){const{index:e}=this.getTarget(t),s=this.state.states[e][this.state.states[e].length-1];this.state.states[e]=[s],this.state.activeStates[e]=0,this.update()}commitAll(){const t=this;this.state.targets.forEach(e=>t.commit(e)),this.update()}toState(t,e){const{index:s,target:i}=this.getTarget(t);this.state.activeStates[s]=e,i.state=this.state.states[s][e],this.update()}resetToFirstState(t){const{index:e,target:s}=this.getTarget(t);this.toState(s,0,!1),this.state.states[e]=[this.state.states[e][0]],this.update()}resetAllToFirstState(){const t=this;this.state.targets.forEach(e=>t.resetToFirstState(e)),this.update()}clear(t){const{index:e}=this.getTarget(t);this.state.activeStates[e]=-1,this.state.states[e]=[],this.update()}clearAll(){const t=this;this.state.targets.forEach(e=>t.clear(e)),this.update()}saveData(){const t=this;this.storage.clear().then(()=>{t.state.queries.forEach((e,s)=>{const i={active:t.state.activeStates[s],states:t.state.states[s]};t.storage.set(e,i)})})}loadData(){const t=this;this.storage.all().then(e=>{let s=0;for(let i in e)t.addTarget(i),t.clear(s),e[i].states.forEach(e=>t.addState(s,e)),t.toState(s,e[i].active),s++})}getTarget(t){let e;return Number.isInteger(t)?(e=t,t=this.state.targets[e]):e=this.state.targets.indexOf(t),{index:e,target:t}}static prettyJSON(t){return(t=(t=JSON.stringify(t,null,4)).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")).replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+-]?\d+)?)/g,function(t){let e="number";return/:$/.test(t)?'<span class="'+(e="key")+'">'+t+"</span>":(/^"/.test(t)?e="string":/true|false/.test(t)?e="boolean":/null/.test(t)&&(e="null"),'<span class="'+e+'">'+t+"</span>")})}}return c.defaultState={targets:[],states:[],queries:[],activeStates:[]},t.register(c),c});
/*! (c) @aadityataparia */
