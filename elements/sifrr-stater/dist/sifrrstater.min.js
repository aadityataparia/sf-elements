/*! SifrrStater v0.0.4 - sifrr project | MIT licensed | https://github.com/sifrr/sifrr */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("@sifrr/dom")):"function"==typeof define&&define.amd?define(["@sifrr/dom"],e):(t=t||self).SifrrStater=e(t.Sifrr.Dom)}(this,function(t){"use strict";t=t&&t.hasOwnProperty("default")?t.default:t;function e(){const t=(a=["<style>\n  ",'\n</style>\n<div id="showHide" $click={{this.showHide}}></div>\n<sifrr-tabs options=\'{"tabHeight": "calc(100vh - 132px)"}\' data-sifrr-html="true">\n  {{ this.headingHtml() }}\n  {{ this.stateHtml() }}\n</sifrr-tabs>\n<footer>\n  <input $keyup={{this.addTargetOnEnter}} id="addTargetInput" type="text" name="addTargetInput" value="" placeholder="Enter css selector query of target">\n  <button $click={{this.addTarget}} class="btn3" type="button" name="addTargetButton">Add Taget</button>\n  <button $click={{this.commitAll}} class="btn3" type="button" name="commitAll">Commit All</button>\n  <button $click={{this.resetAllToFirstState}} class="btn3" type="button" name="resetAll">Reset All</button>\n  <button $click={{this.saveData}} class="btn3" type="button" name="saveData">Save Data</button>\n  <button $click={{this.loadData}} class="btn3" type="button" name="loadData">Load Data</button>\n  <button $click={{this.clearAll}} class="btn3" type="button" name="clearAll">Remove All</button>\n</footer>'],n||(n=a.slice(0)),Object.freeze(Object.defineProperties(a,{raw:{value:Object.freeze(n)}})));var a,n;return e=function(){return t},t}const a=Sifrr.Dom.template(e(),":host {\n  position: fixed;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  height: 100%;\n  max-width: 100%;\n  width: 320px;\n  z-index: 1000;\n  background-color: rgba(0, 0, 0, 0.8);\n  transform: translate3d(100%, 0, 0);\n  transition: all 0.2s ease; }\n\n:host(.show) {\n  transform: translate3d(0, 0, 0); }\n\n* {\n  box-sizing: border-box; }\n\n#showHide {\n  position: fixed;\n  left: -30px;\n  top: 0;\n  bottom: 0;\n  width: 30px;\n  height: 30px;\n  margin-top: 5px;\n  background-color: blue;\n  z-index: 2; }\n\n.stateContainer {\n  padding-left: 10px;\n  margin-left: 10px;\n  border-left: 1px solid white;\n  position: relative; }\n\n.stateContainer.off {\n  opacity: 0.5; }\n\n.stateContainer .dotC {\n  position: absolute;\n  top: 0;\n  left: -10px;\n  width: 20px;\n  height: 100%;\n  cursor: pointer; }\n\n.stateContainer .dotC .dot {\n  position: absolute;\n  top: 50%;\n  left: 10px;\n  width: 10px;\n  height: 10px;\n  transform: translate3d(-50%, -50%, 0);\n  background-color: white;\n  border-radius: 50%; }\n\n.stateContainer .delete {\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 4px;\n  background-color: rgba(0, 0, 0, 0.7);\n  color: white;\n  cursor: pointer; }\n\n.state {\n  white-space: pre-wrap;\n  max-height: 90px;\n  overflow: hidden;\n  background-color: rgba(255, 255, 255, 0.97);\n  padding: 5px;\n  margin-bottom: 5px;\n  position: relative;\n  cursor: pointer; }\n\n.state:hover::after {\n  content: '\\\\\\/';\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  background-color: rgba(0, 0, 0, 0.7);\n  text-align: center;\n  color: white; }\n\n.state.open {\n  max-height: none; }\n\n.state.open:hover::after {\n  content: '\\/\\\\'; }\n\n.key {\n  color: red; }\n\n.string {\n  color: green; }\n\n.number, .null, .boolean {\n  color: blue; }\n\nfooter {\n  position: absolute;\n  bottom: 0; }\n\ninput {\n  margin: 3px;\n  width: calc(100% - 6px);\n  padding: 3px; }\n\n.btn3 {\n  margin: 3px;\n  width: calc(33% - 8px);\n  padding: 3px;\n  background: white; }\n");Sifrr.Dom.Event.add("click"),Sifrr.Dom.Event.add("keyup");class n extends Sifrr.Dom.Element{static get template(){return a}onConnect(){let t=this;this.storage=new Sifrr.Storage({name:window.location.href}),Sifrr.Dom.Event.addListener("click",".state",function(t,e){e.classList.contains("open")?e.classList.remove("open"):e.classList.add("open")}),Sifrr.Dom.Event.addListener("click",".dotC",function(e,a,n){t.toState(parseInt(n.dataset.target),parseInt(n.dataset.stateIndex))}),Sifrr.Dom.Event.addListener("click",".delete",function(e,a){t.deleteState(parseInt(a.dataset.target),parseInt(a.dataset.stateIndex))}),Sifrr.Dom.Event.addListener("click",".commit",function(e,a){const n=parseInt(a.parentNode.dataset.target);t.commit(n)}),Sifrr.Dom.Event.addListener("click",".reset",function(e,a){const n=parseInt(a.parentNode.dataset.target);t.resetToFirstState(n)}),Sifrr.Dom.Event.addListener("click",".remove",function(e,a){const n=parseInt(a.parentNode.dataset.target);t.removeTarget(n)}),Sifrr.Dom.Element.onStateChange=function(e){t.addState(e,e.state)}}showHide(){this.classList.contains("show")?this.classList.remove("show"):this.classList.add("show")}addTargetOnEnter(t){"Enter"===t.key&&this.addTarget()}headingHtml(){return this.state.queries.map(t=>'<li slot="heading">'.concat(t,"</li>")).join("")}stateHtml(){let t=this;return this.state.states.map((e,a)=>'<div data-target="'.concat(a,'" slot="tab">\n      <button class="btn3 commit" type="button" name="commit">Commit</button>\n      <button class="btn3 reset" type="button" name="reset">Reset</button>\n      <button class="btn3 remove" type="button" name="remove">Remove</button>\n      ').concat(e.map((e,s)=>'<div class="stateContainer '.concat(s<=t.state.activeStates[a]?"on":"off",'">\n                           <div class="dotC" data-target="').concat(a,'" data-state-index="').concat(s,'"><div class="dot"></div></div>\n                           <div class="state">').concat(n.prettyJSON(e),'</div>\n                           <div class="delete" data-target="').concat(a,'" data-state-index="').concat(s,'">X</div>\n                           </div>')).join(""),"</div>")).join("")}addTarget(t){"string"!=typeof t&&(t=this.$("#addTargetInput").value);const e=window.document.querySelector(t);if(!e.isSifrr)return console.log("Invalid Sifrr Element.",e),!1;if(!e.state)return console.log("Sifrr Element has no state.",e),!1;let a=this.state.targets.indexOf(e);a>-1||(this.state.targets.push(e),this.state.queries.push(t),a=this.state.targets.indexOf(e),this.state.states[a]=[JSON.parse(JSON.stringify(e.state))],this.state.activeStates[a]=0,this.update())}removeTarget(t){const{index:e,target:a}=this.getTarget(t);e>-1&&(this.state.targets.splice(e,1),this.state.queries.splice(e,1),this.state.states.splice(e,1),this.state.activeStates.splice(e,1),this.update())}addState(t,e){const{index:a,target:n}=this.getTarget(t);if(a>-1){const t=this.state.activeStates[a],n=JSON.stringify(e);n!==JSON.stringify(this.state.states[a][t])&&(this.state.states[a].splice(t+1,0,JSON.parse(n)),this.state.activeStates[a]=t+1,this.update())}}deleteState(t,e){const{index:a,target:n}=this.getTarget(t);this.state.states[a].splice(e,1),e<this.state.activeStates[a]?this.state.activeStates[a]-=1:e==this.state.activeStates[a]&&(this.state.activeStates[a]-=1,this.toState(a,this.state.activeStates[a])),this.update()}commit(t){const{index:e,target:a}=this.getTarget(t),n=this.state.states[e][this.state.states[e].length-1];this.state.states[e]=[n],this.state.activeStates[e]=0,this.update()}commitAll(){const t=this;this.state.targets.forEach(e=>t.commit(e)),this.update()}toState(t,e){const{index:a,target:n}=this.getTarget(t);this.state.activeStates[a];this.state.activeStates[a]=e,n.state=this.state.states[a][e],this.update()}resetToFirstState(t){const{index:e,target:a}=this.getTarget(t);this.toState(a,0,!1),this.state.states[e]=[this.state.states[e][0]],this.update()}resetAllToFirstState(){const t=this;this.state.targets.forEach(e=>t.resetToFirstState(e)),this.update()}clear(t){const{index:e}=this.getTarget(t);this.state.activeStates[e]=-1,this.state.states[e]=[],this.update()}clearAll(){const t=this;this.state.targets.forEach(e=>t.clear(e)),this.update()}saveData(){const t=this;this.storage.clear().then(()=>{t.state.queries.forEach((e,a)=>{const n={active:t.state.activeStates[a],states:t.state.states[a]};t.storage.insert(e,n)})})}loadData(){const t=this;this.storage.data().then(e=>{let a=0;for(let n in e)t.addTarget(n),t.clear(a),e[n].states.forEach(e=>t.addState(a,e)),t.toState(a,e[n].active),a++})}getTarget(t){let e;return Number.isInteger(t)?(e=t,t=this.state.targets[e]):e=this.state.targets.indexOf(t),{index:e,target:t}}static prettyJSON(t){return(t=(t=JSON.stringify(t,null,4)).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")).replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g,function(t){var e="number";return/:$/.test(t)?'<span class="'+(e="key")+'">'+t+"</span>":(/^"/.test(t)?e="string":/true|false/.test(t)?e="boolean":/null/.test(t)&&(e="null"),'<span class="'+e+'">'+t+"</span>")})}}return n.defaultState={targets:[],states:[],queries:[],activeStates:[]},window&&t.register(n,{extends:"picture"}),n});
/*! (c) @aadityataparia */
