/*! SifrrTabHeader v0.0.5 - sifrr project | MIT licensed | https://github.com/sifrr/sifrr-elements */
!function(t,s){"object"==typeof exports&&"undefined"!=typeof module?module.exports=s(require("@sifrr/dom")):"function"==typeof define&&define.amd?define(["@sifrr/dom"],s):(t=t||self).SifrrTabHeader=s(t.Sifrr.Dom)}(this,function(t){"use strict";function s(){const t=(e=['<style media="screen">\n  ',"\n  slot::slotted(*) {\n    ${this.options ? this.options.style : ''}\n  }\n</style>\n<slot>\n</slot>\n<div class=\"underline\"></div>"],(i=['<style media="screen">\n  ',"\n  slot::slotted(*) {\n    \\${this.options ? this.options.style : ''}\n  }\n</style>\n<slot>\n</slot>\n<div class=\"underline\"></div>"])||(i=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(i)}})));var e,i;return s=function(){return t},t}const e=(t=t&&t.hasOwnProperty("default")?t.default:t).template(s(),":host{line-height:24px;width:100%;position:relative;overflow-x:auto;box-sizing:border-box}:host,slot{display:block}slot{min-width:100%}slot::slotted(*){float:left;text-align:center;padding:8px;opacity:.8;cursor:pointer}slot::slotted(.active){opacity:1}slot::slotted(:hover){opacity:1}.underline{position:absolute;bottom:0;left:0;height:3px;background:#fff}");class i extends t.Element{static get template(){return e}static observedAttrs(){return["options"]}onConnect(){this._connected=!0,this.$("slot").addEventListener("slotchange",this.refresh.bind(this,{})),this.refresh()}onAttributeChange(t,s,e){"options"===t&&(this._attrOptions=JSON.parse(e||"{}"),this._connected&&this.refresh())}refresh(t={}){this.options=Object.assign({content:this,slot:this.$("slot"),showUnderline:!0,line:this.$(".underline"),container:null},this.options,t,this._attrOptions),this.options.menus=this.options.slot.assignedNodes().filter(t=>1===t.nodeType),!this.options.menus||this.options.menus.length<1||(this.setProps(),this.active=this.active||0)}setProps(){if(this.options.showUnderline||(this.options.line.style.display="none"),this.setMenuProps(),this.options.container){const s=this.options.container;s.onScrollPercent=this.setScrollPercent.bind(this),t.Event.addListener("update",s,()=>this.active=s.active)}}setMenuProps(){let t=0;this.options.menuProps=[],Array.from(this.options.menus).forEach((s,e)=>{this.options.menuProps[e]={width:s.offsetWidth,left:t},t+=s.offsetWidth,s._click=()=>{this.options.container?this.options.container.active=e:this.active=e}});const s=this.options.menuProps[this.options.menus.length-1];this.options.totalMenuWidth=s.left+s.width,this.options.slot.style.width=s.left+s.width+1*this.options.menuProps.length+"px";const e=this.options.menuProps[this.active];this.options.line.style.left=e.left+"px",this.options.line.style.width=e.width+"px",this.setScrollPercent(0)}setScrollPercent(t){const s=t%1,e=Math.floor(t),i=this.options.menuProps[e].left*(1-s)+(this.options.menuProps[e+1]||{left:0}).left*s,o=this.options.menuProps[e].width*(1-s)+(this.options.menuProps[e+1]||{width:0}).width*s;this.options.line.style.left=i+"px",this.options.line.style.width=o+"px",this.scrollLeft=i+(o-this.clientWidth)/2,0===s&&(this._active=e,this.update())}get active(){return this._active||0}set active(t){this._active=t,this.setScrollPercent(t),this.update()}onUpdate(){this.options&&function(t,s,e){for(let i=0,o=t.length;i<o;i++)i===e||t[i]===e?t[i].classList.add(s):t[i].classList.remove(s)}(this.options.menus,"active",this.active)}}return t.register(i),i});
/*! (c) @aadityataparia */
