/*! SifrrLazyImg v0.0.4 - sifrr project | MIT licensed | https://github.com/sifrr/sifrr-elements */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("@sifrr/dom")):"function"==typeof define&&define.amd?define(["@sifrr/dom"],t):(e=e||self).SifrrLazyImg=t(e.Sifrr.Dom)}(this,function(e){"use strict";function t(e,t){e.dataset[t]&&(e.setAttribute(t,e.dataset[t]),e.removeAttribute("data-".concat(t)))}e=e&&e.hasOwnProperty("default")?e.default:e;class r extends(Sifrr.Dom.Element.extends(HTMLImageElement)){static get observer(){return this._observer=this._observer||new IntersectionObserver(this.onVisible,{rootMargin:this.rootMargin}),this._observer}static onVisible(e){e.forEach(e=>{e.isIntersecting&&(!function(e){r.observer.unobserve(e),e.beforeLoad(),t(e,"src"),t(e,"srcset"),e.afterLoad()}(e.target),this.unobserve(e.target))})}onConnect(){this.reload()}reload(){this.constructor.observer.observe(this)}beforeLoad(){}afterLoad(){}onDisconnect(){this.constructor.observer.unobserve(this)}}return r.rootMargin="0px 0px 200px 0px",e.register(r,{extends:"img"}),r});
/*! (c) @aadityataparia */
