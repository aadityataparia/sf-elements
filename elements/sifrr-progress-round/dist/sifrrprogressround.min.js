/*! SifrrProgressRound v0.0.5 - sifrr project | MIT licensed | https://github.com/sifrr/sifrr-elements */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("@sifrr/dom")):"function"==typeof define&&define.amd?define(["@sifrr/dom"],e):(t=t||self).SifrrProgressRound=e(t.Sifrr.Dom)}(this,function(t){"use strict";t=t&&t.hasOwnProperty("default")?t.default:t;const e='<svg xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="xMinYMin meet" width="100%" height="100%" viewBox="0 0 60 60"> <circle cx="30" cy="30" r="28" fill="none" stroke="rgba(255, 255, 255, 0.6)" stroke-width="${this.state[\'stroke-width\']}"/> <circle id="top" cx="30" cy="30" r="28" fill="none" stroke="${this.state.stroke}" stroke-width="${this.state[\'stroke-width\']}" stroke-dasharray="188.5" stroke-dashoffset="${(100 - this.state.progress) / 100 * 188.5}"/> </svg> ';var s=":host{display:inline-block}svg{transform:rotate(-90deg)}";class r extends t.Element{static get template(){return t.template("<style>".concat(s,"</style>").concat(e))}static syncedAttrs(){return["progress","stroke","stroke-width"]}onAttributeChange(t,e,s){"progress"!==t&&"stroke"!==t&&"stroke-width"!==t||(this.state={[t]:Number(s)})}}return r.defaultState={progress:0,"stroke-width":2,stroke:"#fff"},t.register(r),r});
/*! (c) @aadityataparia */
