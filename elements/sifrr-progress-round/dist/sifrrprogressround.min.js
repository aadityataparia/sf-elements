/*! SifrrProgressRound v0.0.4 - sifrr project | MIT licensed | https://github.com/sifrr/sifrr-elements */
!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r(require("@sifrr/dom")):"function"==typeof define&&define.amd?define(["@sifrr/dom"],r):(e=e||self).SifrrProgressRound=r(e.Sifrr.Dom)}(this,function(e){"use strict";e=e&&e.hasOwnProperty("default")?e.default:e;const r='<style media="screen"> * {\n    box-sizing: border-box;\n  }\n\n  .circle {\n    position: relative;\n    border: 2px solid rgba(255, 255, 255, 0.6);\n    padding: 0;\n    margin: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n  }\n\n  .left-half, .bar, .f50-bar {\n    position: absolute;\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    top: 0;\n    left: 0;\n  }\n\n  .left-half {\n    width: calc(100% + 4px);\n    height: calc(100% + 4px);\n    margin: -2px;\n    clip-path: polygon(50% 0, 100% 0%, 100% 100%, 50% 100%);\n  }\n\n  .circle.over50 .left-half {\n    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);\n  }\n\n  .bar {\n    clip-path: polygon(0 0, 50% 0, 50% 100%, 0 100%);\n    border: 2px solid #ffffff;\n  }\n\n  .circle.over50 .f50-bar {\n    clip-path: polygon(50% 0, 100% 0%, 100% 100%, 50% 100%);\n    border: 2px solid #ffffff;\n    box-sizing: border-box;\n  }\n\n  .circle:not(.over50) .f50-bar {\n    display: none\n  }\n\n  .circle .bar {\n    transform: rotate(${this.state.progress * 360 / 100}deg)\n  } </style> <div class="circle ${this.state.progress > 50 ? \'over50\' : \'\'}"> <div class="left-half"> <div class="f50-bar"></div> <div class="bar"></div> </div> </div> ';class n extends Sifrr.Dom.Element{static get template(){return e.template(r)}static observedAttrs(){return["progress"]}get progress(){return this._state.progress}set progress(e){return this.state={progress:e}}onAttributeChange(e,r,n){"progress"===e&&(this.state={[e]:n})}}return n.defaultState={progress:0},e.register(n),n});
/*! (c) @aadityataparia */
