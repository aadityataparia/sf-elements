/*! SifrrShowcase v0.0.4 - sifrr project | MIT licensed | https://github.com/sifrr/sifrr-elements */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("@sifrr/dom"),require("@sifrr/storage")):"function"==typeof define&&define.amd?define(["@sifrr/dom","@sifrr/storage"],t):(e=e||self).SifrrShowcase=t(e.Sifrr.Dom,e.Sifrr.Storage)}(this,function(e,t){"use strict";e=e&&e.hasOwnProperty("default")?e.default:e,t=t&&t.hasOwnProperty("default")?t.default:t;"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;var s;(function(t,s){t.exports=function(e){function t(){const e=(s=['\n<style media="screen">\n  ','\n</style>\n<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.6/styles/atom-one-dark.min.css">\n<pre class=\'hljs\'>\n  <code id="highight" data-sifrr-html="true">\n    ${this.htmlValue}\n  </code>\n</pre>\n<textarea class=\'hljs\' _input="${this.input}"></textarea>'],(a=['\n<style media="screen">\n  ','\n</style>\n<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.6/styles/atom-one-dark.min.css">\n<pre class=\'hljs\'>\n  <code id="highight" data-sifrr-html="true">\n    \\${this.htmlValue}\n  </code>\n</pre>\n<textarea class=\'hljs\' _input="\\${this.input}"></textarea>'])||(a=s.slice(0)),Object.freeze(Object.defineProperties(s,{raw:{value:Object.freeze(a)}})));var s,a;return t=function(){return e},e}const s=(e=e&&e.hasOwnProperty("default")?e.default:e).template(t(),":host {\n  display: block;\n  position: relative; }\n\n* {\n  box-sizing: border-box; }\n\n.hljs {\n  width: 100%;\n  height: 100%;\n  font-family: Consolas,Liberation Mono,Courier,monospace;\n  font-size: 14px;\n  line-height: 18px;\n  padding: 8px;\n  margin: 0;\n  position: absolute;\n  white-space: pre-wrap;\n  top: 0;\n  left: 0; }\n\ntextarea {\n  background: transparent !important;\n  z-index: 2;\n  resize: none;\n  text-shadow: 0px 0px 0px rgba(0, 0, 0, 0);\n  border: none;\n  text-fill-color: transparent;\n  -webkit-text-fill-color: transparent; }\n\npre {\n  z-index: 1; }\n");e.Event.add("load");class a extends e.Element{static get template(){return s}onAttributeChange(){this.update()}onConnect(){const e=document.createElement("script");e.src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.6/highlight.min.js",e.onLoad=this.update(),document.body.appendChild(e);const t=this.$("textarea");this.$("textarea").addEventListener("keydown",e=>{let s=e.keyCode||e.which;if(9==s){e.preventDefault();const s=t.selectionStart,a=t.selectionEnd,i="  ",n=2;t.value=t.value.substring(0,s)+i+t.value.substring(a),t.selectionStart=t.selectionEnd=s+n}})}input(){e.Event.trigger(this,"input"),this.update()}get htmlValue(){return window.hljs?hljs.highlight(this.lang,this.value).value:this.value}get value(){return this.$("textarea").value}set value(e){this.$("textarea").value=e,this.update()}get lang(){return this.getAttribute("lang")||"html"}}return window&&e.register(a),a}(e)})(s={exports:{}},s.exports);function a(){const e=(t=['<style media="screen">\n  ',"\n</style>\n",""],s||(s=t.slice(0)),Object.freeze(Object.defineProperties(t,{raw:{value:Object.freeze(s)}})));var t,s;return a=function(){return e},e}const i=e.template(a(),"*{box-sizing:border-box}h1,label,li{font-family:Roboto,Ariel}.container{width:100%;height:100%;display:flex;flex-wrap:nowrap;background-color:#3a3f5a}#sidemenu{width:15%}#sidebar,#sidemenu,#sidemenu>*{height:100%}#sidebar{width:20%}#sidebar>*{height:33.33%}#main{width:65%;height:100%}.flex-column{height:100%;display:flex;flex-wrap:nowrap;flex-direction:column}.box{width:100%;overflow:scroll;border:1px solid #5f616d}#element{padding:20px;height:70%}\n\n${this.state.style}#code{height:30%}#code sifrr-code-editor{height:calc(100% - 48px)!important}h1{color:#ccc;text-align:center}label,li{color:#8f9cb3;font-size:16px;line-height:24px;padding:4px}#error,#urlStatus{color:red}sifrr-code-editor{width:100%;height:calc(100% - 24px);font-size:14px;padding:4px}ul{padding:8px;margin:0}.showcase{list-style-type:none}.showcase span{color:red;float:right}#loader,#saver{color:green;padding:4px;margin:0}button{background:#ccc;border:1px solid grey;color:#3a3f5a;font-size:14px;padding:4px}",'<div class="container"> <div class="flex-column" id="sidemenu"> <div class="box"> <h1>Sifrr Showcase</h1> <p id="loader"></p> <input id="url" type="text" placeholder="Enter url here..." name="url"> <button type="button" name="loadUrl" _click="${this.loadUrl}">Load from url</button> <p id="urlStatus"></p> <button type="button" name="saveFile" _click="${this.saveFile}">Save to File</button> <input type="file" name="file" accept="application/json" _input="${this.loadFile}"> </div> </div> <div class="flex-column" id="sidebar"> <div class="box"> <label for="style">Element CSS Styles</label> <sifrr-code-editor lang="css" data-sifrr-bind="style" value="${this.state.style}"></sifrr-code-editor> </div> <div class="box"> <label for="elState">Element State Function</label> <sifrr-code-editor id="elState" lang="js" data-sifrr-bind="elState" value="${this.state.elState}"></sifrr-code-editor> </div> <div class="box"> <label for="states">Variants</label> <input id="variantName" type="text" name="variantName" value="${this.state.name}" data-sifrr-bind="name"> <button type="button" name="createVariant" _click="${this.createNewVariant}">Create new variant</button> <p id="saver"></p> <style media="screen"> #showcase${this.state.id} {\n          background: #5f616d;\n        } </style> <div id="showcases"> <ul data-sifrr-repeat="${this.allShowcases()}"> <li class="showcase" data-showcase-id="${this.state.id}" id="showcase${this.state.id}">${this.state.name}<span>X</span></li> </ul> </div> </div> </div> <div class="flex-column" id="main"> <div class="box" id="element" data-sifrr-html="true"> ${this.state.code} </div> <div class="box" id="code"> <label for="elementName">Element Name</label> <input type="text" name="elementName" placeholder="Enter element name here..." _input="${this.updateHtml}" value="${this.state.element}"> <label for="customUrl">Custom Url</label> <input type="text" name="customUrl" placeholder="Enter element url here..." value="${this.state.elementUrl}" data-sifrr-bind="elementUrl"> <label for="elementName">Is JS File</label> <select id="isjs" name="isjs" value="${this.state.isjs}" data-sifrr-bind="isjs"> <option value="true">true</option> <option value="false">false</option> </select> <span id="error"></span> <br> <label for="htmlcode">HTML Code</label> <sifrr-code-editor lang="html" data-sifrr-bind="code" value="${this.state.code}"></sifrr-code-editor> </div> </div> </div>');e.Event.add("click");const n={id:1,name:"new",element:"sifrr-placeholder",style:"#element > * {\n  display: block;\n  background-color: white;\n  margin: auto;\n}",code:"<sifrr-placeholder>\n</sifrr-placeholder>",elState:"return {\n\n}",isjs:"true",elementUrl:""},r=new t({name:"sifrr-showcase",version:1}),l=[];class o extends e.Element{static get template(){return i}static observedAttrs(){return["url"]}onConnect(){r.get(["showcases","current"]).then(e=>{Array.isArray(e.showcases)&&e.showcases.length>0?l.push(...e.showcases):l.push(n),this.switchShowcase(e.current||n.id)}),this.$("#loader").textContent="loaded from storage!",e.Event.addListener("click",".showcase",(e,t)=>{if(t.matches(".showcase")){const e=t.dataset.showcaseId;this.switchShowcase(e)}}),e.Event.addListener("click",".showcase span",(e,t)=>{const s=t.parentNode.dataset.showcaseId;this.deleteShowcase(s)})}onUpdate(){let t;this._element===this.state.element&&this._js===this.state.isjs||(e.load(this.state.element,{js:"true"==this.state.isjs,url:this.state.elementUrl?this.state.elementUrl:void 0}).then(()=>this.$("#error").innerText="").catch(e=>this.$("#error").innerText=e.message),this._js=this.state.isjs,this._element=this.state.element);try{t=new Function(this.$("#elState").value).call(this.element())}catch(e){}t&&this.element()&&this.element().isSifrr&&this.element().state!==t&&(this.element().state=t),this.$("#saver").textContent="saving in storage...",this._autoSaver&&clearTimeout(this._autoSaver),this._autoSaver=setTimeout(()=>{delete this._autoSaver,this.saveShowcase().then(()=>{this.$("#saver").textContent="saved in storage!"})},1e3)}onAttributeChange(e,t,s){"url"===e&&(this.url=s)}createNewVariant(){const e=l.length;l[e]=Object.assign({},n,{id:Math.max(...l.map(e=>e.id))+1,name:this.$("#variantName").value}),this.switchShowcase(e)}deleteShowcase(e){l.forEach((t,s)=>{t.id==e&&l.splice(s,1)}),this.update()}saveShowcase(){const e=this.state.id;return l.forEach(t=>{t.id==e&&Object.assign(t,this.state)}),r.set("showcases",l)}switchShowcase(e){this.state=Object.assign({},l.filter(t=>t.id==e)[0]||l[0]),r.set("current",e)}set url(e){this._url=e,this.getAttribute("url")!==e&&this.setAttribute("url",e),this.$("#url").value!==e&&(this.$("#url").value=e),this.loadUrl()}get url(){return this._url}loadUrl(){this._url=this.$("#url").value,window.fetch(this._url).then(e=>e.json()).then(e=>{l.splice(0,l.length),l.push(...e.showcases),this.switchShowcase(e.current),this.$("#loader").textContent="loaded from url!"}).catch(e=>{this.$("#urlStatus").textContent=e.message})}saveFile(){const e=new Blob([JSON.stringify({current:this.state.id,showcases:l})],{type:"application/json"}),t=document.createElement("a");t.href=URL.createObjectURL(e),t.download="showcases",t.click()}loadFile(e,t){const s=t.files[0],a=new FileReader;a.onload=(()=>{const e=JSON.parse(a.result);l.splice(0,l.length),l.push(...e.showcases),this.switchShowcase(e.current),this.$("#loader").textContent="loaded from file!"}),a.readAsText(s)}updateHtml(e,t){const s="<".concat(t.value,"></").concat(t.value,">");this.state={code:s,element:t.value}}element(){return this.$("#element").firstElementChild}allShowcases(){return l}}return o.defaultState=n,window&&e.register(o),o});
/*! (c) @aadityataparia */
