{
  "current": 4,
  "showcases": [{
      "id": 1,
      "element": "sifrr-code-editor",
      "elementUrl": "",
      "isjs": true,
      "variantName": "default - html",
      "variants": [{
          "variantId": 1,
          "variantName": "default - html",
          "style": "#element > * {\n}",
          "code": "<sifrr-code-editor></sifrr-code-editor>",
          "elState": "this.value = '<a>some test.. </a>';\nreturn {\n\n}"
        },
        {
          "variantId": 3,
          "variantName": "js",
          "style": "#element > * {\n  \n}",
          "code": "<sifrr-code-editor lang=\"js\"></sifrr-code-editor>",
          "elState": "this.value = 'var a = \"some value\";';\nreturn {\n\n}"
        },
        {
          "variantId": 4,
          "variantName": "css",
          "style": "#element > * {\n  \n}",
          "code": "<sifrr-code-editor lang=\"css\"></sifrr-code-editor>",
          "elState": "this.value = `element {\n  color: black;\n}\n`;\nreturn {\n\n}"
        },
        {
          "variantId": 5,
          "variantName": "themed",
          "style": "#element > * {\n\n}",
          "code": "<sifrr-code-editor theme=\"a11y-light\"></sifrr-code-editor>",
          "elState": "this.value = '<a>some test.. </a>';\nreturn {\n\n}"
        }
      ],
      "variantId": 1,
      "style": "#element > * {\n}",
      "code": "<sifrr-code-editor></sifrr-code-editor>",
      "elState": "this.value = '<a>some test.. </a>';\nreturn {\n\n}",
      "name": "sifrr-code-editor"
    },
    {
      "name": "sifrr-lazy-picture",
      "variants": [{
        "variantName": "lazy loading",
        "style": "#element > * {\n  background: white;\n  height: 200px;\n  width: 200px;\n  display: block;\n}\n#element > * img {\n  width: 100%;\n  height: 100%;\n}",
        "code": "<div style=\"height: 1000px\"></div>\n<picture is=\"sifrr-lazy-picture\">\n      <source media=\"(min-width: 800px)\" data-srcset=\"https://pbs.twimg.com/profile_images/1057899591708753921/PSpUS-Hp_400x400.jpg\">\n      <img data-src=\"https://static.adweek.com/adweek.com-prod/wp-content/uploads/files/blogs/google-logo-hed-2014.jpg\">\n</picture>",
        "elState": "return {\n\n}"
      }],
      "id": 1,
      "element": "sifrr-lazy-picture",
      "elementUrl": "",
      "isjs": true,
      "variantName": "lazy loading",
      "variantId": 2,
      "style": "#element > * {\n  background: white;\n  height: 200px;\n  width: 200px;\n  display: block;\n}\n#element > * img {\n  width: 100%;\n  height: 100%;\n}",
      "code": "<div style=\"height: 1000px\"></div>\n<picture is=\"sifrr-lazy-picture\">\n      <source media=\"(min-width: 800px)\" data-srcset=\"https://pbs.twimg.com/profile_images/1057899591708753921/PSpUS-Hp_400x400.jpg\">\n      <img data-src=\"https://static.adweek.com/adweek.com-prod/wp-content/uploads/files/blogs/google-logo-hed-2014.jpg\">\n</picture>",
      "elState": "return {\n\n}"
    },
    {
      "name": "sifrr-lazy-img",
      "variants": [{
        "variantId": 1,
        "style": "#element > * {\n  background: white;\n  height: 200px;\n  width: 200px;\n  display: block;\n}",
        "variantName": "lazy loading",
        "code": "<div style=\"height: 1000px\"></div>\n<img is=\"sifrr-lazy-img\" data-src=\"https://static.adweek.com/adweek.com-prod/wp-content/uploads/files/blogs/google-logo-hed-2014.jpg\">"
      }],
      "element": "sifrr-lazy-img",
      "style": "#element > * {\n  background: white;\n  height: 200px;\n  width: 200px;\n  display: block;\n}",
      "variantId": 1,
      "variantName": "lazy loading",
      "code": "<div style=\"height: 1000px\"></div>\n<img is=\"sifrr-lazy-img\" data-src=\"https://static.adweek.com/adweek.com-prod/wp-content/uploads/files/blogs/google-logo-hed-2014.jpg\">"
    },
    {
      "name": "sifrr-tabs",
      "variants": [{
          "variantId": 1,
          "variantName": "with menu and content",
          "style": "#element > * {\n  background-color: white;\n  display: block;\n}",
          "code": "<sifrr-tabs>\n        <li slot='heading'>Heading 1</li>\n        <li slot='heading'>Heading 2 - sdfsdfsdafsdf d sdf af </li>\n        <li slot='heading'>Heading 3 - sdf ssd fdsf sf </li>\n        <li slot='heading'>Heading 4 - vesdfdf d df dfds dsf dsf </li>\n        <div slot='tab'>\n          <p>Tab 1</p>\n          <p>Tab 1</p>\n          <p>Tab 1</p>\n          <p>Tab 1</p>\n          <p>Tab 1</p>\n          <p>Tab 1</p>\n        </div>\n        <div slot='tab'>\n          <p>Tab 2</p>\n          <p>Tab 2</p>\n          <p>Tab 2</p>\n        </div>\n        <div slot='tab'>\n          <p>Tab 3</p>\n        </div>\n        <div slot='tab'>\n          <p>Tab 4</p>\n        </div>\n      </sifrr-tabs>",
          "elState": "return {\n\n}"
        },
        {
          "variantId": 11,
          "variantName": "different menu color / border radius",
          "style": "#element > * {\n  background-color: white;\n  display: block;\n  border-radius: 5px;\n}",
          "code": "<sifrr-tabs options='{ \"background\": \"black\" }'>\n        <li slot='heading'>Heading 1</li>\n        <li slot='heading'>Heading 2 - sdfsdfsdafsdf d sdf af </li>\n        <li slot='heading'>Heading 3 - sdf ssd fdsf sf </li>\n        <li slot='heading'>Heading 4 - vesdfdf d df dfds dsf dsf </li>\n        <div slot='tab'>\n          <p>Tab 1</p>\n          <p>Tab 1</p>\n          <p>Tab 1</p>\n          <p>Tab 1</p>\n          <p>Tab 1</p>\n          <p>Tab 1</p>\n        </div>\n        <div slot='tab'>\n          <p>Tab 2</p>\n          <p>Tab 2</p>\n          <p>Tab 2</p>\n        </div>\n        <div slot='tab'>\n          <p>Tab 3</p>\n        </div>\n        <div slot='tab'>\n          <p>Tab 4</p>\n        </div>\n      </sifrr-tabs>",
          "elState": "return {\n\n}"
        },
        {
          "variantId": 2,
          "variantName": "without menu, with arrows",
          "style": "#element > * {\n  background-color: white;\n  display: block;\n}",
          "code": "<sifrr-tabs options='{ \"showMenu\": false, \"showArrows\": true }'>\n        <div slot='tab'>\n          Tab 1\n        </div>\n        <div slot='tab'>\n          Tab 2\n        </div>\n      </sifrr-tabs>",
          "elState": "return {\n\n}"
        },
        {
          "variantId": 12,
          "variantName": "arrow big area to clickk",
          "style": "#element > * {\n  background-color: white;\n  display: block;\n}",
          "code": "<sifrr-tabs options='{ \"showMenu\": false, \"showArrows\": true, \"arrowWidth\": \"30%\" }'>\n        <div slot='tab'>\n          Tab 1\n        </div>\n        <div slot='tab'>\n          Tab 2\n        </div>\n      </sifrr-tabs>",
          "elState": "return {\n\n}"
        },
        {
          "variantId": 10,
          "variantName": "without menu, with arrows, arrow margin",
          "style": "#element > * {\n  background-color: white;\n  display: block;\n}",
          "code": "<sifrr-tabs options='{ \"showMenu\": false, \"showArrows\": true, \"arrowMargin\": 20 }'>\n        <div slot='tab'>\n          Tab 1\n        </div>\n        <div slot='tab'>\n          Tab 2\n        </div>\n      </sifrr-tabs>",
          "elState": "return {\n\n}"
        },
        {
          "variantId": 3,
          "variantName": "without menu, with arrows, looped",
          "style": "#element > * {\n  background-color: white;\n  display: block;\n}",
          "code": "<sifrr-tabs options='{ \"showMenu\": false, \"showArrows\": true, \"loop\": true }'>\n        <div slot='tab'>\n          Tab 1\n        </div>\n        <div slot='tab'>\n          Tab 2\n        </div>\n        <div slot='tab'>\n          Tab 3\n        </div>\n      </sifrr-tabs>",
          "elState": "return {\n\n}"
        },
        {
          "variantId": 4,
          "variantName": "with multiple tabs (integer) in view",
          "style": "#element > * {\n  background-color: white;\n  display: block;\n}",
          "code": "<sifrr-tabs options='{ \"showMenu\": false, \"showArrows\": true, \"num\": 3 }'>\n        <div slot='tab'>\n          Tab 1\n        </div>\n        <div slot='tab'>\n          Tab 2\n        </div>\n        <div slot='tab'>\n          Tab 3\n        </div>\n        <div slot='tab'>\n          Tab 4\n        </div>\n        <div slot='tab'>\n          Tab 5\n        </div>\n        <div slot='tab'>\n          Tab 6\n        </div>\n      </sifrr-tabs>\n",
          "elState": "return {\n\n}"
        },
        {
          "variantId": 5,
          "variantName": "with multiple tabs in view, looped, and arrow steps more than 1",
          "style": "#element > * {\n  background-color: white;\n  display: block;\n}",
          "code": "<sifrr-tabs options='{ \"showMenu\": false, \"showArrows\": true, \"num\": 3, \"loop\": true, \"step\": 3 }'>\n        <div slot='tab'>\n          Tab 1\n        </div>\n        <div slot='tab'>\n          Tab 2\n        </div>\n        <div slot='tab'>\n          Tab 3\n        </div>\n        <div slot='tab'>\n          Tab 4\n        </div>\n        <div slot='tab'>\n          Tab 5\n        </div>\n        <div slot='tab'>\n          Tab 6\n        </div>\n      </sifrr-tabs>\n",
          "elState": "return {\n\n}"
        },
        {
          "variantId": 6,
          "variantName": "with pre defined tab height",
          "style": "#element > * {\n  background-color: white;\n  display: block;\n}",
          "code": "<sifrr-tabs options='{ \"tabHeight\": \"100px\" }'>\n        <li slot='heading'>Heading 1</li>\n        <li slot='heading'>Heading 2</li>\n        <div slot='tab'>\n          Tab 1\n        </div>\n        <div slot='tab'>\n          Tab 2\n        </div>\n      </sifrr-tabs>",
          "elState": "return {\n\n}"
        },
        {
          "variantId": 7,
          "variantName": "with no animation",
          "style": "#element > * {\n  background-color: white;\n  display: block;\n}",
          "code": "<sifrr-tabs options='{ \"animation\": \"none\" }'>\n        <li slot='heading'>Heading 1</li>\n        <li slot='heading'>Heading 2</li>\n        <div slot='tab'>\n          Tab 1\n        </div>\n        <div slot='tab'>\n          Tab 2\n        </div>\n      </sifrr-tabs>",
          "elState": "return {\n\n}"
        },
        {
          "variantId": 8,
          "variantName": "with arrowMargins",
          "style": "#element > * {\n  background-color: white;\n  display: block;\n}",
          "code": "<sifrr-tabs options='{ \"showMenu\": false, \"showArrows\": true, \"arrowMargin\": 25 }'>\n        <div slot='tab'>\n          Tab 1\n        </div>\n        <div slot='tab'>\n          Tab 2\n        </div>\n      </sifrr-tabs>",
          "elState": "return {\n\n}"
        },
        {
          "variantId": 9,
          "variantName": "images carousel",
          "style": "#element > * {\n  background-color: white;\n  display: block;\n}\n#element > * > img {\n  height: 100%;\n}",
          "code": "<sifrr-tabs options='{ \"showMenu\": false, \"showArrows\": true, \"tabHeight\": \"400px\" }'>\n  <img slot=\"tab\" src=\"https://static.adweek.com/adweek.com-prod/wp-content/uploads/files/blogs/google-logo-hed-2014.jpg\">\n  <img slot=\"tab\" src=\"https://static.adweek.com/adweek.com-prod/wp-content/uploads/files/blogs/google-logo-hed-2014.jpg\">\n  <img slot=\"tab\" src=\"https://static.adweek.com/adweek.com-prod/wp-content/uploads/files/blogs/google-logo-hed-2014.jpg\">\n  <img slot=\"tab\" src=\"https://static.adweek.com/adweek.com-prod/wp-content/uploads/files/blogs/google-logo-hed-2014.jpg\">\n</sifrr-tabs>",
          "elState": "return {\n\n}"
        }
      ],
      "id": 1,
      "element": "sifrr-tabs",
      "elementUrl": "",
      "isjs": true,
      "variantName": "different menu color / border radius",
      "variantId": 11,
      "style": "#element > * {\n  background-color: white;\n  display: block;\n  border-radius: 5px;\n}",
      "code": "<sifrr-tabs options='{ \"background\": \"black\" }'>\n        <li slot='heading'>Heading 1</li>\n        <li slot='heading'>Heading 2 - sdfsdfsdafsdf d sdf af </li>\n        <li slot='heading'>Heading 3 - sdf ssd fdsf sf </li>\n        <li slot='heading'>Heading 4 - vesdfdf d df dfds dsf dsf </li>\n        <div slot='tab'>\n          <p>Tab 1</p>\n          <p>Tab 1</p>\n          <p>Tab 1</p>\n          <p>Tab 1</p>\n          <p>Tab 1</p>\n          <p>Tab 1</p>\n        </div>\n        <div slot='tab'>\n          <p>Tab 2</p>\n          <p>Tab 2</p>\n          <p>Tab 2</p>\n        </div>\n        <div slot='tab'>\n          <p>Tab 3</p>\n        </div>\n        <div slot='tab'>\n          <p>Tab 4</p>\n        </div>\n      </sifrr-tabs>",
      "elState": "return {\n\n}"
    },
    {
      "name": "sifrr-progress-round",
      "variants": [{
          "variantId": 1,
          "variantName": "state",
          "style": "#element > * {\n  height: 200px;\n  width: 200px;\n  display: block;\n  margin: auto;\n}",
          "code": "<sifrr-progress-round></sifrr-progress-round>",
          "elState": "return {\n  progress: 40\n}"
        },
        {
          "variantId": 2,
          "variantName": "attribute",
          "style": "#element > * {\n  height: 200px;\n  width: 200px;\n  display: block;\n  margin: auto;\n}",
          "code": "<sifrr-progress-round progress=\"70\"></sifrr-progress-round>",
          "elState": "return {\n\n}"
        },
        {
          "variantId": 4,
          "variantName": "property",
          "style": "#element > * {\n  height: 200px;\n  width: 200px;\n  display: block;\n  margin: auto;\n}",
          "code": "<sifrr-progress-round></sifrr-progress-round>",
          "elState": "this.progress = 35;\nreturn {\n\n}"
        },
        {
          "variantId": 3,
          "variantName": "with image progress",
          "style": "#element {\n  position: relative;\n}\n\n#element > * {\n  position: absolute;\n  height: 500px;\n  width: 500px;\n  display: block;\n}\n#element > sifrr-progress-round {\n  width: 50px;\n  height: 50px;\n  top: 250px;\n  left: 250px;\n}",
          "code": "<img is=\"sifrr-lazy-img\" data-src=\"https://fetch-progress.anthum.com/30kbps/images/sunrise-baseline.jpg\">\n<sifrr-progress-round progress=\"0\"></sifrr-progress-round>",
          "elState": "this.reload();\nconst progress = this.nextElementSibling;\nconst src = this.dataset.src;\nthis.dataset.src = '';\nthis.beforeLoad = () => {\n  Sifrr.Fetch.get(src, {\n    onProgress: (p) => {\n      progress.progress = p;\n      if (p >= 100) progress.remove();\n    }\n  }).then(r => r.blob()).then(b => {\n    this.src = URL.createObjectURL(b);\n  })\n}"
        }
      ],
      "id": 1,
      "element": "sifrr-progress-round",
      "elementUrl": "",
      "isjs": true,
      "variantName": "property",
      "variantId": 4,
      "style": "#element > * {\n  height: 200px;\n  width: 200px;\n  display: block;\n  margin: auto;\n}",
      "code": "<sifrr-progress-round></sifrr-progress-round>",
      "elState": "this.progress = 35;\nreturn {\n\n}"
    }
  ]
}
