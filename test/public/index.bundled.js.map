{"version":3,"file":"index.bundled.js","sources":["../../node_modules/@sifrr/dom/dist/sifrr.dom.js","../../node_modules/@sifrr/storage/dist/sifrr.storage.js","index.js"],"sourcesContent":["/*! Sifrr.Dom v0.0.1-alpha - sifrr project - 2018/12/26 20:57:42 UTC */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Sifrr = global.Sifrr || {}, global.Sifrr.Dom = factory());\n}(this, (function () { 'use strict';\n\n  const URLExt = {\n    absolute: (base, relative) => {\n      let stack = base.split('/'),\n          parts = relative.split('/');\n      stack.pop();\n      for (let i = 0; i < parts.length; i++) {\n        if (parts[i] == '.') continue;\n        if (parts[i] == '..') stack.pop();else stack.push(parts[i]);\n      }\n      return stack.join('/');\n    },\n    getRoutes: url => {\n      if (url[0] != '/') {\n        url = '/' + url;\n      }\n      let qIndex = url.indexOf('?');\n      if (qIndex != -1) {\n        url = url.substring(0, qIndex);\n      }\n      return url.split('/');\n    }\n  };\n  var url = URLExt;\n\n  const Json = {\n    parse: data => {\n      let ans = {};\n      if (typeof data == 'string') {\n        try {\n          ans = JSON.parse(data);\n        } catch (e) {\n          return data;\n        }\n        return Json.parse(ans);\n      } else if (Array.isArray(data)) {\n        ans = [];\n        data.forEach((v, i) => {\n          ans[i] = Json.parse(v);\n        });\n      } else if (typeof data == 'object') {\n        for (const k in data) {\n          ans[k] = Json.parse(data[k]);\n        }\n      } else {\n        return data;\n      }\n      return ans;\n    },\n    stringify: data => {\n      if (typeof data == 'string') {\n        return data;\n      } else {\n        return JSON.stringify(data);\n      }\n    },\n    shallowEqual: (a, b) => {\n      for (let key in a) {\n        if (!(key in b) || a[key] != b[key]) {\n          return false;\n        }\n      }\n      for (let key in b) {\n        if (!(key in a) || a[key] != b[key]) {\n          return false;\n        }\n      }\n      return true;\n    },\n    deepClone: json => {\n      if (Array.isArray(json)) return json.map(i => Json.deepClone(i));\n      if (typeof json !== 'object' || json === null) return json;\n      let clone = {};\n      for (let key in json) {\n        clone[key] = Json.deepClone(json[key]);\n      }\n      return clone;\n    }\n  };\n  var json = Json;\n\n  function updateAttribute(element, name, newValue) {\n    if (name === 'class') {\n      const fromValue = element.className;\n      if (fromValue != newValue) {\n        if (newValue == 'null' || newValue == 'undefined' || newValue == 'false' || !newValue) {\n          element.className = '';\n        } else {\n          element.className = newValue;\n        }\n      }\n    } else {\n      const fromValue = element.getAttribute(name);\n      if (fromValue != newValue) {\n        if (newValue == 'null' || newValue == 'undefined' || newValue == 'false' || !newValue) {\n          if (fromValue) element.removeAttribute(name);\n        } else {\n          element.setAttribute(name, newValue);\n        }\n      }\n      if ((element.nodeName == 'SELECT' || element.nodeName == 'INPUT') && name == 'value') element.value = newValue;\n    }\n  }\n  var update = {\n    updateAttribute: updateAttribute\n  };\n\n  var constants = {\n    SIFRR_NODE: window.document.createElement('template'),\n    TEXT_NODE: 3,\n    COMMENT_NODE: 8,\n    ELEMENT_NODE: 1\n  };\n\n  const { updateAttribute: updateAttribute$1 } = update;\n  const { shallowEqual } = json;\n  const { TEXT_NODE, COMMENT_NODE } = constants;\n  function makeChildrenEqual(parent, newChildren) {\n    const oldL = parent.childNodes.length,\n          newL = newChildren.length;\n    if (oldL > newL) {\n      let i = oldL;\n      while (i > newL) {\n        parent.removeChild(parent.lastChild);\n        i--;\n      }\n    } else if (oldL < newL) {\n      let i = oldL;\n      while (i < newL) {\n        parent.appendChild(newChildren[i]);\n        i++;\n      }\n    }\n    const l = Math.min(newL, oldL);\n    for (let i = 0, item, head = parent.firstChild; i < l; i++) {\n      item = newChildren[i];\n      head = makeEqual(head, item).nextSibling;\n    }\n  }\n  function makeEqual(oldNode, newNode) {\n    if (newNode === null) return oldNode;\n    if (newNode.type === 'stateChange') {\n      if (!shallowEqual(oldNode.state, newNode.state)) {\n        oldNode.state = newNode.state;\n      }\n      return oldNode;\n    }\n    if (oldNode.nodeName !== newNode.nodeName) {\n      oldNode.replaceWith(newNode);\n      return newNode;\n    }\n    if (oldNode.nodeType === TEXT_NODE || oldNode.nodeType === COMMENT_NODE) {\n      if (oldNode.data !== newNode.data) oldNode.data = newNode.data;\n      return oldNode;\n    }\n    if (newNode.state) oldNode.state = newNode.state;\n    let oldAttrs = oldNode.attributes,\n        newAttrs = newNode.attributes,\n        attr;\n    for (let i = newAttrs.length - 1; i >= 0; --i) {\n      updateAttribute$1(oldNode, newAttrs[i].name, newAttrs[i].value);\n    }\n    for (let j = oldAttrs.length - 1; j >= 0; --j) {\n      attr = oldAttrs[j];\n      if (!newNode.hasAttribute(attr.name) && attr.specified !== false) oldNode.removeAttribute(attr.name);\n    }\n    makeChildrenEqual(oldNode, newNode.childNodes);\n    return oldNode;\n  }\n  var makeequal = {\n    makeEqual: makeEqual,\n    makeChildrenEqual: makeChildrenEqual\n  };\n\n  const TREE_WALKER = window.document.createTreeWalker(document, NodeFilter.SHOW_ALL, null, false);\n  TREE_WALKER.roll = function (n, filter = false) {\n    let node = this.currentNode;\n    while (--n) {\n      if (filter && filter(node)) {\n        node = TREE_WALKER.nextSibling() || TREE_WALKER.parentNode();\n      } else node = TREE_WALKER.nextNode();\n    }\n    return node;\n  };\n  function collect(element, stateMap = element.stateMap, filter) {\n    const refs = [];\n    TREE_WALKER.currentNode = element;\n    stateMap.map(x => refs.push(TREE_WALKER.roll(x.idx, filter)));\n    return refs;\n  }\n  class Ref {\n    constructor(idx, ref) {\n      this.idx = idx;\n      this.ref = ref;\n    }\n  }\n  function create(node, fxn, filter = false) {\n    let indices = [],\n        ref,\n        idx = 0;\n    TREE_WALKER.currentNode = node;\n    while (node) {\n      if (ref = fxn(node)) {\n        indices.push(new Ref(idx + 1, ref));\n        idx = 1;\n      } else {\n        idx++;\n      }\n      if (filter && filter(node)) {\n        node = TREE_WALKER.nextSibling() || TREE_WALKER.parentNode();\n      } else node = TREE_WALKER.nextNode();\n    }\n    return indices;\n  }\n  var ref = {\n    walker: TREE_WALKER,\n    collect: collect,\n    create: create,\n    klass: Ref\n  };\n\n  const { makeChildrenEqual: makeChildrenEqual$1 } = makeequal;\n  const { updateAttribute: updateAttribute$2 } = update;\n  const { collect: collect$1, create: create$1 } = ref;\n  const { SIFRR_NODE, TEXT_NODE: TEXT_NODE$1, COMMENT_NODE: COMMENT_NODE$1, ELEMENT_NODE } = constants;\n  function isHtml(el) {\n    return el.dataset && el.dataset.sifrrHtml == 'true' || el.contentEditable == 'true' || el.nodeName == 'TEXTAREA' || el.nodeName == 'STYLE' || el.dataset && el.dataset.sifrrRepeat;\n  }\n  function creator(el) {\n    if (el.nodeType === TEXT_NODE$1) {\n      const x = el.nodeValue;\n      if (x.indexOf('${') > -1) return {\n        html: false,\n        text: x\n      };\n    } else if (el.nodeType === COMMENT_NODE$1 && el.nodeValue.trim()[0] == '$') {\n      return {\n        html: false,\n        text: el.nodeValue.trim()\n      };\n    } else if (el.nodeType === ELEMENT_NODE) {\n      const ref$$1 = {};\n      if (isHtml(el)) {\n        const innerHTML = el.innerHTML;\n        if (innerHTML.indexOf('${') >= 0) {\n          ref$$1.html = true;\n          ref$$1.text = innerHTML.replace(/<!--(.*)-->/g, '$1');\n        }\n      }\n      const attrs = el.attributes || [],\n            l = attrs.length;\n      const attrStateMap = {};\n      for (let i = 0; i < l; i++) {\n        const attribute = attrs[i];\n        if (attribute.value.indexOf('${') >= 0) {\n          attrStateMap[attribute.name] = attribute.value;\n        }\n      }\n      if (Object.keys(attrStateMap).length > 0) ref$$1.attributes = attrStateMap;\n      if (Object.keys(ref$$1).length > 0) return ref$$1;\n    }\n    return 0;\n  }\n  const Parser = {\n    collectRefs: (el, stateMap) => collect$1(el, stateMap, isHtml),\n    createStateMap: element => {\n      let node;\n      if (element.useShadowRoot) node = element.shadowRoot;else node = element;\n      return create$1(node, creator, isHtml);\n    },\n    updateState: element => {\n      if (!element._refs) {\n        return false;\n      }\n      const l = element._refs.length;\n      for (let i = 0; i < l; i++) {\n        const data = element.constructor.stateMap[i].ref;\n        const dom = element._refs[i];\n        if (data.attributes) {\n          for (let key in data.attributes) {\n            const val = Parser.evaluateString(data.attributes[key], element);\n            updateAttribute$2(dom, key, val);\n          }\n        }\n        if (data.html === undefined) continue;\n        const newValue = Parser.evaluateString(data.text, element);\n        if (!newValue) {\n          dom.textContent = '';continue;\n        }\n        if (data.html) {\n          let children;\n          if (Array.isArray(newValue)) {\n            children = newValue;\n          } else if (newValue.nodeType) {\n            children = [newValue];\n          } else {\n            const docFrag = SIFRR_NODE.cloneNode();\n            docFrag.innerHTML = newValue.toString()\n            .replace(/(&lt;)(((?!&gt;).)*)(&gt;)(((?!&lt;).)*)(&lt;)\\/(((?!&gt;).)*)(&gt;)/g, '<$2>$5</$8>')\n            .replace(/(&lt;)(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)(((?!&gt;).)*)(&gt;)/g, '<$2$3>');\n            children = Array.prototype.slice.call(docFrag.content.childNodes);\n          }\n          if (children.length < 1) dom.textContent = '';else makeChildrenEqual$1(dom, children);\n        } else {\n          if (dom.nodeValue != newValue) {\n            dom.nodeValue = newValue;\n          }\n        }\n      }\n      element.onStateChange(element.state);\n    },\n    twoWayBind: e => {\n      const target = e.path ? e.path[0] : e.target;\n      if (!target.dataset.sifrrBind) return;\n      const value = target.value === undefined ? target.innerHTML : target.value;\n      let state = {};\n      state[target.dataset.sifrrBind] = value;\n      target.getRootNode().host.state = state;\n    },\n    evaluateString: (string, element) => {\n      if (string.indexOf('${') < 0) return string;\n      string = string.trim();\n      if (string.match(/^\\${([^{}$]|{([^{}$])*})*}$/)) return replacer(string);\n      return replacer('`' + string + '`');\n      function replacer(match) {\n        if (match[0] == '$') match = match.slice(2, -1);\n        let f;\n        if (match.indexOf('return ') >= 0) {\n          f = new Function(match).bind(element);\n        } else {\n          f = new Function('return ' + match).bind(element);\n        }\n        return f();\n      }\n    }\n  };\n  var parser = Parser;\n\n  var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  var sifrr_fetch = createCommonjsModule(function (module, exports) {\n    (function (global, factory) {\n      module.exports = factory();\n    })(commonjsGlobal, function () {\n      class Request {\n        constructor(type, url, options) {\n          this.type = type;\n          this._options = options;\n          this._url = url;\n        }\n        get response() {\n          return window.fetch(this.url, this.options).then(resp => {\n            let contentType = resp.headers.get('content-type');\n            if (contentType && contentType.includes('application/json')) {\n              resp = resp.json();\n            }\n            if (resp.ok) {\n              return resp;\n            } else {\n              let error = Error(resp.statusText);\n              error.response = resp;\n              throw error;\n            }\n          });\n        }\n        get url() {\n          let params = delete this._options.params;\n          if (params && Object.keys(params).length > 0) {\n            return this._url + '?' + Object.keys(params).map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k])).join('&');\n          } else {\n            return this._url;\n          }\n        }\n        get options() {\n          return Object.assign(this._options, {\n            method: this.type,\n            headers: Object.assign({\n              'accept': 'application/json'\n            }, this._options.headers || {}),\n            mode: 'cors',\n            redirect: 'follow'\n          });\n        }\n      }\n      var request = Request;\n      class SifrrFetch {\n        static get(url, options = {}) {\n          return new request('GET', url, options).response;\n        }\n        static post(url, options = {}) {\n          return new request('POST', url, options).response;\n        }\n        static put(url, options = {}) {\n          return new request('PUT', url, options).response;\n        }\n        static delete(url, options = {}) {\n          return new request('DELETE', url, options).response;\n        }\n        static file(url, options = {}) {\n          options.headers = options.headers || {};\n          options.headers.accept = options.headers.accept || '*/*';\n          return new request('GET', url, options).response;\n        }\n      }\n      var sifrr_fetch = SifrrFetch;\n      return sifrr_fetch;\n    });\n  });\n\n  class Loader {\n    constructor(elemName, config = {}) {\n      if (this.constructor.all[elemName]) return this.constructor.all[elemName].instance;\n      this.elementName = elemName;\n      this.config = config;\n      this.constructor.urls[elemName] = this.htmlUrl;\n    }\n    get html() {\n      const me = this;\n      return sifrr_fetch.file(this.htmlUrl).then(resp => resp.text()).then(file => new window.DOMParser().parseFromString(file, 'text/html')).then(html => {\n        Loader.add(me.elementName, { instance: me, template: html.querySelector('template') });\n        return html;\n      });\n    }\n    get htmlUrl() {\n      return this.config.url || `${this.config.baseUrl || '/'}elements/${this.elementName.split('-').join('/')}.html`;\n    }\n    executeScripts() {\n      return this.html.then(file => {\n        file.querySelectorAll('script').forEach(script => {\n          const fxn = new Function(script.text).bind(window);\n          fxn();\n        });\n      });\n    }\n    static add(elemName, instance) {\n      Loader._all[elemName] = instance;\n    }\n    static get all() {\n      return Loader._all;\n    }\n  }\n  Loader._all = {};\n  Loader.urls = {};\n  var loader = Loader;\n\n  const { collect: collect$2, create: create$2 } = ref;\n  const { SIFRR_NODE: SIFRR_NODE$1 } = constants;\n  function creator$1(node) {\n    if (node.nodeType !== 3) {\n      if (node.attributes !== undefined) {\n        const attrs = Array.from(node.attributes),\n              l = attrs.length;\n        const ret = [];\n        for (let i = 0; i < l; i++) {\n          const avalue = attrs[i].value;\n          if (avalue[0] === '$') {\n            ret.push({\n              name: attrs[i].name,\n              text: avalue.slice(2, -1)\n            });\n          }\n        }\n        if (ret.length > 0) return ret;\n      }\n      return 0;\n    } else {\n      let nodeData = node.nodeValue;\n      if (nodeData[0] === '$') {\n        node.nodeValue = '';\n        return nodeData.slice(2, -1);\n      }\n      return 0;\n    }\n  }\n  function updateState(simpleEl) {\n    const doms = simpleEl._refs,\n          refs = simpleEl.stateMap,\n          l = refs.length;\n    const newState = simpleEl.state,\n          oldState = simpleEl._oldState;\n    for (let i = 0; i < l; i++) {\n      const data = refs[i].ref,\n            dom = doms[i];\n      if (Array.isArray(data)) {\n        const l = data.length;\n        for (let i = 0; i < l; i++) {\n          const attr = data[i];\n          if (oldState[attr.text] !== newState[attr.text]) {\n            if (attr.name === 'class') dom.className = newState[attr.text] || '';else dom.setAttribute(attr.name, newState[attr.text]);\n          }\n        }\n      } else {\n        if (oldState[data] != newState[data]) dom.nodeValue = newState[data];\n      }\n    }\n  }\n  function SimpleElement(content, defaultState) {\n    if (typeof content === 'string') {\n      SIFRR_NODE$1.innerHTML = content;\n      content = SIFRR_NODE$1.content.firstElementChild || SIFRR_NODE$1.content.firstChild;\n    }\n    if (content.isSifrr && content.isSifrr()) return content;\n    content.stateMap = create$2(content, creator$1);\n    content._refs = collect$2(content, content.stateMap);\n    Object.defineProperty(content, 'state', {\n      get: () => content._state,\n      set: v => {\n        content._oldState = Object.assign({}, content._state);\n        content._state = Object.assign(content._state || {}, v);\n        updateState(content);\n      }\n    });\n    if (defaultState) content.state = defaultState;\n    content.sifrrClone = function (deep) {\n      const clone = content.cloneNode(deep);\n      clone.stateMap = content.stateMap;\n      clone._refs = collect$2(clone, content.stateMap);\n      Object.defineProperty(clone, 'state', {\n        get: () => clone._state,\n        set: v => {\n          clone._oldState = Object.assign({}, clone._state);\n          clone._state = Object.assign(clone._state || {}, v);\n          updateState(clone);\n        }\n      });\n      if (content.state) clone.state = content.state;\n      return clone;\n    };\n    return content;\n  }\n  var simpleelement = SimpleElement;\n\n  class Element extends window.HTMLElement {\n    static get observedAttributes() {\n      return ['data-sifrr-state'].concat(this.observedAttrs());\n    }\n    static observedAttrs() {\n      return [];\n    }\n    static get template() {\n      return loader.all[this.elementName].template;\n    }\n    static get stateMap() {\n      this._stateMap = this._stateMap || parser.createStateMap(this.template.content);\n      return this._stateMap;\n    }\n    static get elementName() {\n      return this.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    }\n    static onStateChange() {}\n    constructor() {\n      super();\n      this._state = Object.assign({}, this.constructor.defaultState, this.state);\n      const content = this.constructor.template.content.cloneNode(true);\n      this._refs = parser.collectRefs(content, this.constructor.stateMap);\n      this.useShadowRoot = this.constructor.template.dataset.sr === 'false' ? false : !!window.document.head.attachShadow && this.constructor.useShadowRoot;\n      if (this.useShadowRoot) {\n        this.attachShadow({\n          mode: 'open'\n        });\n        this.shadowRoot.appendChild(content);\n        this.shadowRoot.addEventListener('change', parser.twoWayBind);\n      } else this.appendChild(content);\n    }\n    connectedCallback() {\n      if (!this.hasAttribute('data-sifrr-state')) this.updateState();\n      this.onConnect();\n    }\n    onConnect() {}\n    disconnectedCallback() {\n      if (this.useShadowRoot) this.shadowRoot.removeEventListener('change', parser.twoWayBind);\n      this.onDisconnect();\n    }\n    onDisconnect() {}\n    attributeChangedCallback(attrName, oldVal, newVal) {\n      if (attrName === 'data-sifrr-state') {\n        this.state = json.parse(newVal);\n      }\n      this.onAttributeChange(attrName, oldVal, newVal);\n    }\n    onAttributeChange() {}\n    get state() {\n      return this._state;\n    }\n    set state(v) {\n      Object.assign(this._state, v);\n      this.updateState();\n    }\n    updateState() {\n      parser.updateState(this);\n      this.constructor.onStateChange(this);\n    }\n    onStateChange() {}\n    isSifrr(name = null) {\n      if (name) return name === this.constructor.elementName;else return true;\n    }\n    sifrrClone(deep) {\n      const clone = this.cloneNode(deep);\n      clone.state = this.state;\n      return clone;\n    }\n    clearState() {\n      this._state = {};\n      this.updateState();\n    }\n    qs(args, sr = true) {\n      if (this.useShadowRoot && sr) return this.shadowRoot.querySelector(args);else return this.querySelector(args);\n    }\n    qsAll(args, sr = true) {\n      if (this.useShadowRoot && sr) return this.shadowRoot.querySelectorAll(args);else return this.querySelectorAll(args);\n    }\n    static addArrayToDom(key, template) {\n      this._arrayToDom = this._arrayToDom || {};\n      this._arrayToDom[key] = simpleelement(template);\n    }\n    arrayToDom(key, newState = this.state[key]) {\n      this._domL = this._domL || {};\n      const oldL = this._domL[key] || 0;\n      const domArray = [];\n      const newL = newState.length;\n      for (let i = 0; i < newL; i++) {\n        if (i < oldL) {\n          domArray.push({ type: 'stateChange', state: newState[i] });\n        } else {\n          const el = this.constructor._arrayToDom[key].sifrrClone(true);\n          el.state = newState[i];\n          domArray.push(el);\n        }\n      }\n      this._domL[key] = newL;\n      return domArray;\n    }\n  }\n  var element = Element;\n\n  const SYNTHETIC_EVENTS = {};\n  const nativeToSyntheticEvent = (e, name) => {\n    return Promise.resolve((() => {\n      let dom = e.path ? e.path[0] : e.target;\n      while (dom) {\n        const eventHandler = dom[`$${name}`];\n        if (eventHandler) {\n          eventHandler(e, dom);\n        }\n        cssMatchEvent(e, name, dom);\n        dom = dom.parentNode || dom.host;\n      }\n    })());\n  };\n  const cssMatchEvent = (e, name, dom) => {\n    function callEach(fxns) {\n      fxns.forEach(fxn => fxn(e, dom));\n    }\n    for (let css in SYNTHETIC_EVENTS[name]) {\n      if (typeof dom.matches === 'function' && dom.matches(css) || dom.nodeType === 9 && css === 'document') callEach(SYNTHETIC_EVENTS[name][css]);\n    }\n  };\n  const Event = {\n    add: name => {\n      if (SYNTHETIC_EVENTS[name]) return false;\n      window.document.addEventListener(name, event => nativeToSyntheticEvent(event, name), { capture: true, passive: true });\n      SYNTHETIC_EVENTS[name] = {};\n      return true;\n    },\n    addListener: (name, css, fxn) => {\n      const fxns = SYNTHETIC_EVENTS[name][css] || [];\n      if (fxns.indexOf(fxn) < 0) fxns.push(fxn);\n      SYNTHETIC_EVENTS[name][css] = fxns;\n      return true;\n    },\n    removeListener: (name, css, fxn) => {\n      const fxns = SYNTHETIC_EVENTS[name][css] || [],\n            i = fxns.indexOf(fxn);\n      if (i >= 0) fxns.splice(i, 1);\n      SYNTHETIC_EVENTS[name][css] = fxns;\n      return true;\n    },\n    trigger: (el, name, options) => {\n      el.dispatchEvent(new window.Event(name, Object.assign({ bubbles: true, composed: true }, options)));\n    }\n  };\n  var event = Event;\n\n  let SifrrDom = {};\n  SifrrDom.elements = {};\n  SifrrDom.Element = element;\n  SifrrDom.Parser = parser;\n  SifrrDom.makeEqual = makeequal;\n  SifrrDom.Loader = loader;\n  SifrrDom.SimpleElement = simpleelement;\n  SifrrDom.Event = event;\n  SifrrDom.register = function (Element) {\n    Element.useShadowRoot = SifrrDom.config.useShadowRoot;\n    const name = Element.elementName;\n    if (!name) {\n      window.console.warn('Error creating Custom Element: No name given.', Element);\n    } else if (window.customElements.get(name)) {\n      window.console.warn(`Error creating Element: ${name} - Custom Element with this name is already defined.`);\n    } else if (name.indexOf('-') < 1) {\n      window.console.warn(`Error creating Element: ${name} - Custom Element name must have one dash '-'`);\n    } else {\n      try {\n        window.customElements.define(name, Element);\n        SifrrDom.elements[name] = Element;\n        return true;\n      } catch (error) {\n        window.console.warn(`Error creating Custom Element: ${name} - ${error}`);\n        return false;\n      }\n    }\n    return false;\n  };\n  SifrrDom.setup = function (config) {\n    SifrrDom.config = Object.assign({\n      baseUrl: '/',\n      useShadowRoot: true\n    }, config);\n    SifrrDom.Event.add('input');\n    SifrrDom.Event.add('change');\n    SifrrDom.Event.addListener('change', 'document', SifrrDom.Parser.twoWayBind);\n    SifrrDom.Event.addListener('input', 'document', SifrrDom.Parser.twoWayBind);\n  };\n  SifrrDom.load = function (elemName, config = { baseUrl: SifrrDom.config.baseUrl }) {\n    return new Promise(res => {\n      let loader$$1 = new SifrrDom.Loader(elemName, config);\n      loader$$1.executeScripts().then(() => res());\n    });\n  };\n  SifrrDom.Url = url;\n  SifrrDom.Json = json;\n  SifrrDom.relativeTo = function (elemName, relativeUrl) {\n    if (typeof elemName === 'string') return SifrrDom.Url.absolute(SifrrDom.Loader.urls[elemName], relativeUrl);\n  };\n  var sifrr_dom = SifrrDom;\n\n  return sifrr_dom;\n\n})));\n/*! (c) @aadityataparia */\n//# sourceMappingURL=sifrr.dom.js.map\n","/*! Sifrr.Storage v0.1.0-alpha2 - sifrr project - 2018/12/18 23:17:44 UTC */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Sifrr = global.Sifrr || {}, global.Sifrr.Storage = factory());\n}(this, (function () { 'use strict';\n\n  class Json {\n    static parse(data) {\n      let ans = {};\n      if (typeof data == 'string') {\n        try {\n          ans = JSON.parse(data);\n        } catch (e) {\n          return data;\n        }\n        return this.parse(ans);\n      } else if (Array.isArray(data)) {\n        ans = [];\n        data.forEach((v, i) => {\n          ans[i] = this.parse(v);\n        });\n      } else if (typeof data == 'object') {\n        for (const k in data) {\n          ans[k] = this.parse(data[k]);\n        }\n      } else {\n        return data;\n      }\n      return ans;\n    }\n    static stringify(data) {\n      if (typeof data == 'string') {\n        return data;\n      } else {\n        return JSON.stringify(data);\n      }\n    }\n  }\n  var json = Json;\n\n  class Storage {\n    constructor(options) {\n      this._options = options;\n    }\n    _parseKeyValue(key, value) {\n      let jsonConstructor = {}.constructor;\n      if (typeof value == 'undefined') {\n        if (Array.isArray(key)) {\n          return key;\n        } else if (typeof key == 'string') {\n          return [key];\n        } else if (key.constructor === jsonConstructor) {\n          return key;\n        }{\n          throw Error('Invalid Key');\n        }\n      } else if (typeof key == 'string') {\n        let ans = {};\n        ans[key] = value;\n        return ans;\n      } else {\n        throw Error('Invalid Key');\n      }\n    }\n    _select(keys) {\n      return this.data().then(data => {\n        let ans = {};\n        keys.forEach(key => ans[key] = data[key]);\n        return ans;\n      });\n    }\n    _upsert(data) {\n      let table = this.table;\n      for (let key in data) {\n        table[key] = data[key];\n      }\n      this.table = table;\n    }\n    _delete(keys) {\n      let table = this.table;\n      keys.forEach(key => delete table[key]);\n      this.table = table;\n    }\n    _clear() {\n      this.table = {};\n    }\n    _isEqual(options, type) {\n      if (this.tableName == options.name + options.version && this.type == type) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    get tableName() {\n      return this.name + this.version;\n    }\n    get name() {\n      return this._options.name;\n    }\n    get version() {\n      return this._options.version;\n    }\n    get description() {\n      return this._options.description;\n    }\n    get type() {\n      return this.constructor.type;\n    }\n    isSupported() {\n      if (typeof window == 'undefined' || typeof document == 'undefined') {\n        return true;\n      } else if (window && typeof this.store != 'undefined') {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    all() {\n      return this.data();\n    }\n    data() {\n      return Promise.resolve(this._parsedData());\n    }\n    select(key) {\n      return Promise.resolve(this._select(this._parseKeyValue(key)));\n    }\n    insert(key, value) {\n      return Promise.resolve(this._upsert(this._parseKeyValue(key, value)));\n    }\n    update(key, value) {\n      return Promise.resolve(this._upsert(this._parseKeyValue(key, value)));\n    }\n    upsert(key, value) {\n      return Promise.resolve(this._upsert(this._parseKeyValue(key, value)));\n    }\n    delete(key) {\n      return Promise.resolve(this._delete(this._parseKeyValue(key)));\n    }\n    deleteAll() {\n      return Promise.resolve(this._clear());\n    }\n    clear() {\n      return Promise.resolve(this._clear());\n    }\n    static stringify(data) {\n      return json.stringify(data);\n    }\n    static parse(data) {\n      return json.parse(data);\n    }\n  }\n  var storage = Storage;\n\n  class IndexedDB extends storage {\n    constructor(options) {\n      super(options);\n    }\n    _parsedData() {\n      return this._tx('readonly', 'getAll').then(result => this.parse(result));\n    }\n    _select(keys) {\n      let ans = {};\n      let promises = [];\n      keys.forEach(key => promises.push(this._tx('readonly', 'get', key).then(r => ans[key] = this.parse(r))));\n      return Promise.all(promises).then(() => ans);\n    }\n    _upsert(data) {\n      let promises = [];\n      for (let key in data) {\n        let promise = this._tx('readonly', 'get', key).then(oldResult => {\n          if (oldResult && oldResult.key == key) {\n            return this._tx('readwrite', 'put', { 'key': key, 'value': data[key] });\n          } else {\n            return this._tx('readwrite', 'add', { 'key': key, 'value': data[key] });\n          }\n        });\n        promises.push(promise);\n      }\n      return Promise.all(promises);\n    }\n    _delete(keys) {\n      let promises = [];\n      keys.forEach(key => promises.push(this._tx('readwrite', 'delete', key)));\n      return Promise.all(promises);\n    }\n    _clear() {\n      return this._tx('readwrite', 'clear');\n    }\n    _tx(scope, fn, params) {\n      let me = this;\n      return this.createStore(me.tableName).then(db => {\n        return new Promise((resolve, reject) => {\n          let tx = db.transaction(me.tableName, scope).objectStore(me.tableName);\n          let request = tx[fn].call(tx, params);\n          request.onsuccess = event => resolve(event.target.result);\n          request.onerror = event => reject(event.error);\n        });\n      });\n    }\n    get store() {\n      return window.indexedDB;\n    }\n    createStore(table) {\n      return new Promise((resolve, reject) => {\n        const request = this.store.open(table, 1);\n        request.onupgradeneeded = event => {\n          let db = event.target.result;\n          db.createObjectStore(table, { keyPath: 'key' });\n        };\n        request.onsuccess = () => resolve(request.result);\n        request.onerror = () => reject(request.error);\n      });\n    }\n    parse(data) {\n      let ans = {};\n      if (Array.isArray(data)) {\n        data.forEach(row => {\n          ans[row.key] = row.value;\n        });\n      } else if (data && data.value) {\n        return data.value;\n      } else {\n        return undefined;\n      }\n      return ans;\n    }\n    static get type() {\n      return 'indexeddb';\n    }\n  }\n  var indexeddb = IndexedDB;\n\n  class WebSQL extends storage {\n    constructor(options) {\n      super(options);\n      this.createStore();\n    }\n    _parsedData() {\n      let me = this;\n      return new Promise(resolve => {\n        this.store.transaction(function (tx) {\n          tx.executeSql(`SELECT * FROM ${me.tableName}`, [], (txn, results) => {\n            resolve(me.parse(results));\n          });\n        });\n      });\n    }\n    _select(keys) {\n      let me = this;\n      let q = keys.map(() => '?').join(', ');\n      return this.execSql(`SELECT key, value FROM ${me.tableName} WHERE key in (${q})`, keys);\n    }\n    _upsert(data) {\n      let table = this.tableName;\n      this.store.transaction(tx => {\n        for (let key in data) {\n          tx.executeSql(`INSERT OR IGNORE INTO ${table}(key, value) VALUES (?, ?)`, [key, data[key]]);\n          tx.executeSql(`UPDATE ${table} SET value = ? WHERE key = ?`, [this.constructor.stringify(data[key]), key]);\n        }\n      });\n    }\n    _delete(keys) {\n      let table = this.tableName;\n      let q = keys.map(() => '?').join(', ');\n      return this.execSql(`DELETE FROM ${table} WHERE key in (${q})`, keys);\n    }\n    _clear() {\n      let table = this.tableName;\n      return this.execSql(`DELETE FROM ${table}`);\n    }\n    get store() {\n      if (typeof window !== 'undefined') {\n        return window.openDatabase('bs', 1, this._options.description, this._options.size);\n      } else {\n        return true;\n      }\n    }\n    createStore() {\n      let table = this.tableName;\n      if (typeof window == 'undefined') return;\n      return this.execSql(`CREATE TABLE IF NOT EXISTS ${table} (key unique, value)`);\n    }\n    execSql(query, args = []) {\n      let me = this;\n      return new Promise(resolve => {\n        me.store.transaction(function (tx) {\n          tx.executeSql(query, args, (txn, results) => {\n            resolve(me.parse(results));\n          });\n        });\n      });\n    }\n    parse(results) {\n      let ans = {};\n      let len = results.rows.length,\n          i;\n      for (i = 0; i < len; i++) {\n        ans[results.rows.item(i).key] = this.constructor.parse(results.rows.item(i).value);\n      }\n      return ans;\n    }\n    static get type() {\n      return 'websql';\n    }\n  }\n  var websql = WebSQL;\n\n  class LocalStorage extends storage {\n    constructor(options) {\n      super(options);\n    }\n    _parsedData() {\n      return this.table;\n    }\n    get table() {\n      return this.constructor.parse(this.store.getItem(this.tableName));\n    }\n    set table(value) {\n      this.store.setItem(this.tableName, this.constructor.stringify(value));\n    }\n    get store() {\n      return window.localStorage;\n    }\n    static get type() {\n      return 'localstorage';\n    }\n  }\n  var localstorage = LocalStorage;\n\n  class Cookies extends storage {\n    constructor(options) {\n      super(options);\n    }\n    _parsedData() {\n      return this.table;\n    }\n    get table() {\n      let result = this.store,\n          ans = {};\n      result = result.split('; ');\n      result.forEach(value => {\n        let [k, v] = value.split('=');\n        if (v) ans[k] = this.constructor.parse(v);\n      });\n      return ans[this.tableName] || {};\n    }\n    set table(value) {\n      document.cookie = `${this.tableName}=${storage.stringify(value)}; path=/`;\n    }\n    get store() {\n      return document.cookie;\n    }\n    static get type() {\n      return 'cookies';\n    }\n  }\n  var cookies = Cookies;\n\n  class JsonStorage extends storage {\n    constructor(options, data = {}) {\n      super(options);\n      this._upsert(this.constructor.parse(data));\n    }\n    _parsedData() {\n      return this._table;\n    }\n    get store() {\n      return this._table;\n    }\n    get table() {\n      return this._table || {};\n    }\n    set table(value) {\n      this._table = value;\n    }\n    static get type() {\n      return 'jsonstorage';\n    }\n  }\n  var jsonstorage = JsonStorage;\n\n  let storages = {};\n  storages[indexeddb.type] = indexeddb;\n  storages[websql.type] = websql;\n  storages[localstorage.type] = localstorage;\n  storages[cookies.type] = cookies;\n  storages[jsonstorage.type] = jsonstorage;\n  var storages_1 = storages;\n\n  class SifrrStorage {\n    constructor(options) {\n      if (typeof options == 'string') options = { priority: [options] };else options = options || {};\n      this._options = Object.assign(this.constructor.defaultOptions, options);\n      return this.storage;\n    }\n    get storage() {\n      let storage = this.supportedStore();\n      if (typeof storage == 'undefined') throw new Error('No available storage supported in this browser');\n      let matchingInstance = this.constructor._matchingInstance(this._options, storage.type);\n      if (matchingInstance) {\n        return matchingInstance;\n      } else {\n        let storageInstance = new storage(this._options);\n        this.constructor._add(storageInstance);\n        return storageInstance;\n      }\n    }\n    get priority() {\n      return this._options.priority.concat(['indexeddb', 'websql', 'localstorage', 'cookies', 'jsonstorage']);\n    }\n    supportedStore() {\n      for (let i = 0; i < this.priority.length; i++) {\n        let store = this.constructor.availableStores[this.priority[i]];\n        if (store && new store(this._options).isSupported()) return store;\n      }\n    }\n    static _matchingInstance(options, type) {\n      let allInstances = this.all,\n          i;\n      let length = allInstances.length;\n      for (i = 0; i < length; i++) {\n        if (allInstances[i]._isEqual(options, type)) return allInstances[i];\n      }\n      return false;\n    }\n    static _add(instance) {\n      this._all = this._all || [];\n      this._all.push(instance);\n    }\n    static get availableStores() {\n      return storages_1;\n    }\n    static get defaultOptions() {\n      return {\n        priority: [],\n        name: 'SifrrStorage',\n        version: 1,\n        description: 'Sifrr Storage',\n        size: 5 * 1024 * 1024\n      };\n    }\n    static get all() {\n      return this._all || [];\n    }\n    static json(data) {\n      return new jsonstorage({}, data);\n    }\n  }\n  var sifrr_storage = SifrrStorage;\n\n  return sifrr_storage;\n\n})));\n/*! (c) @aadityataparia */\n","window.Sifrr = window.Sifrr || {};\nwindow.Sifrr.Dom = require('@sifrr/dom');\nwindow.Sifrr.Storage = require('@sifrr/storage');\n\nconst Sifrr = window.Sifrr;\n\nSifrr.Dom.setup();\nSifrr.Dom.load('sifrr-stater');\nSifrr.Dom.load('sifrr-test');\n"],"names":["module","url","base","relative","stack","split","parts","pop","i","length","push","join","qIndex","indexOf","substring","Json","data","ans","JSON","parse","e","Array","isArray","forEach","v","k","stringify","a","b","key","json","map","deepClone","clone","update","element","name","newValue","fromValue","className","getAttribute","setAttribute","removeAttribute","nodeName","value","constants","window","document","createElement","updateAttribute","updateAttribute$1","shallowEqual","TEXT_NODE","COMMENT_NODE","makeChildrenEqual","parent","newChildren","oldL","childNodes","newL","removeChild","lastChild","appendChild","l","Math","min","item","head","firstChild","makeEqual","nextSibling","oldNode","newNode","type","state","replaceWith","nodeType","attr","oldAttrs","attributes","newAttrs","j","hasAttribute","specified","makeequal","TREE_WALKER","createTreeWalker","NodeFilter","SHOW_ALL","roll","n","filter","node","this","currentNode","parentNode","nextNode","Ref","idx","ref","stateMap","refs","x","fxn","indices","makeChildrenEqual$1","updateAttribute$2","collect","collect$1","create","create$1","SIFRR_NODE","TEXT_NODE$1","COMMENT_NODE$1","ELEMENT_NODE","isHtml","el","dataset","sifrrHtml","contentEditable","sifrrRepeat","creator","nodeValue","trim","ref$$1","innerHTML","html","text","replace","attrs","attrStateMap","attribute","Object","keys","Parser","useShadowRoot","shadowRoot","_refs","constructor","dom","val","evaluateString","undefined","children","docFrag","cloneNode","toString","prototype","slice","call","content","textContent","onStateChange","target","path","sifrrBind","getRootNode","host","string","match","replacer","f","Function","bind","parser","global","self","sifrr_fetch","exports","request","options","_options","_url","fetch","then","resp","contentType","headers","get","includes","ok","error","Error","statusText","response","params","encodeURIComponent","assign","accept","fn","Loader","elemName","config","all","instance","elementName","urls","htmlUrl","me","file","DOMParser","parseFromString","add","template","querySelector","baseUrl","querySelectorAll","script","_all","loader","collect$2","create$2","SIFRR_NODE$1","creator$1","from","ret","avalue","nodeData","updateState","simpleEl","doms","newState","oldState","_oldState","simpleelement","defaultState","firstElementChild","isSifrr","defineProperty","_state","sifrrClone","deep","HTMLElement","concat","observedAttrs","_stateMap","createStateMap","toLowerCase","collectRefs","sr","attachShadow","addEventListener","twoWayBind","onConnect","removeEventListener","onDisconnect","attrName","oldVal","newVal","onAttributeChange","args","_arrayToDom","_domL","domArray","SYNTHETIC_EVENTS","cssMatchEvent","callEach","fxns","css","matches","event","Promise","resolve","eventHandler","nativeToSyntheticEvent","capture","passive","splice","dispatchEvent","Event","bubbles","composed","SifrrDom","Element","SimpleElement","register","customElements","console","warn","define","elements","setup","addListener","load","res","executeScripts","Url","relativeTo","relativeUrl","absolute","factory","storage","jsonConstructor","table","tableName","version","description","store","_parsedData","_select","_parseKeyValue","_upsert","_delete","_clear","indexeddb","_tx","result","promises","r","promise","oldResult","scope","createStore","db","reject","tx","transaction","objectStore","onsuccess","onerror","indexedDB","open","onupgradeneeded","createObjectStore","keyPath","row","websql","executeSql","txn","results","q","execSql","openDatabase","size","query","len","rows","localstorage","getItem","setItem","localStorage","cookies","cookie","jsonstorage","_table","storages","storages_1","priority","defaultOptions","supportedStore","matchingInstance","_matchingInstance","storageInstance","_add","availableStores","isSupported","allInstances","_isEqual","Sifrr","Dom","require$$0","Storage","require$$1"],"mappings":"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"}