{"version":3,"file":"index.bundled.js","sources":["../../node_modules/@sifrr/fetch/dist/sifrr.fetch.js","../../node_modules/@sifrr/dom/dist/sifrr.dom.js","../../node_modules/@sifrr/storage/dist/sifrr.storage.js","index.js"],"sourcesContent":["/*! Sifrr.Fetch v0.0.2-alpha - sifrr project */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Sifrr = global.Sifrr || {}, global.Sifrr.Fetch = factory());\n}(this, (function () { 'use strict';\n\n  class Request {\n    constructor(type, url, options = {}) {\n      this.type = type;\n      this._options = options;\n      this._url = url;\n    }\n    get response() {\n      return window.fetch(this.url, this.options).then(resp => {\n        let contentType = resp.headers.get('content-type');\n        if (resp.ok) {\n          if (contentType && contentType.includes('application/json')) {\n            resp = resp.json();\n          }\n          return resp;\n        } else {\n          let error = Error(resp.statusText);\n          error.response = resp;\n          throw error;\n        }\n      });\n    }\n    get url() {\n      const params = this._options.params;\n      if (params && Object.keys(params).length > 0) {\n        return this._url + '?' + Object.keys(params).map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k])).join('&');\n      } else {\n        return this._url;\n      }\n    }\n    get options() {\n      const options = Object.assign({\n        method: this.type,\n        mode: 'cors',\n        redirect: 'follow'\n      }, this._options);\n      options.headers = Object.assign({\n        'accept': 'application/json'\n      }, this._options.headers || {});\n      if (typeof options.body === 'object') {\n        options.body = JSON.stringify(options.body);\n      }\n      return options;\n    }\n  }\n  var request = Request;\n\n  class SifrrFetch {\n    static get(url, options = {}) {\n      return new request('GET', url, options).response;\n    }\n    static post(url, options = {}) {\n      return new request('POST', url, options).response;\n    }\n    static put(url, options = {}) {\n      return new request('PUT', url, options).response;\n    }\n    static delete(url, options = {}) {\n      return new request('DELETE', url, options).response;\n    }\n    static graphql(url, options = {}) {\n      const {\n        query,\n        variables = {}\n      } = options;\n      delete options.query;\n      delete options.variables;\n      options.headers = options.headers || {};\n      options.headers['Content-Type'] = 'application/json';\n      options.headers['Accept'] = 'application/json';\n      options.body = {\n        query,\n        variables\n      };\n      return new request('POST', url, options).response;\n    }\n    static file(url, options = {}) {\n      options.headers = options.headers || {};\n      options.headers.accept = options.headers.accept || '*/*';\n      return new request('GET', url, options).response;\n    }\n  }\n  var sifrr_fetch = SifrrFetch;\n\n  return sifrr_fetch;\n\n})));\n/*! (c) @aadityataparia */\n//# sourceMappingURL=sifrr.fetch.js.map\n","/*! Sifrr.Dom v0.0.2-alpha - sifrr project | MIT licensed | https://github.com/sifrr/sifrr */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('@sifrr/fetch')) :\n  typeof define === 'function' && define.amd ? define(['@sifrr/fetch'], factory) :\n  (global = global || self, (global.Sifrr = global.Sifrr || {}, global.Sifrr.Dom = factory(global.Sifrr.Fetch)));\n}(this, function (fetch) { 'use strict';\n\n  fetch = fetch && fetch.hasOwnProperty('default') ? fetch['default'] : fetch;\n\n  const URLExt = {\n    absolute: (base, relative) => {\n      let stack = base.split('/'),\n          parts = relative.split('/');\n      stack.pop();\n      for (let i = 0; i < parts.length; i++) {\n        if (parts[i] == '.') continue;\n        if (parts[i] == '..') stack.pop();else stack.push(parts[i]);\n      }\n      return stack.join('/');\n    },\n    getRoutes: url => {\n      if (url[0] != '/') {\n        url = '/' + url;\n      }\n      let qIndex = url.indexOf('?');\n      if (qIndex != -1) {\n        url = url.substring(0, qIndex);\n      }\n      return url.split('/');\n    }\n  };\n  var url = URLExt;\n\n  const Json = {\n    parse: data => {\n      let ans = {};\n      if (typeof data == 'string') {\n        try {\n          ans = JSON.parse(data);\n        } catch (e) {\n          return data;\n        }\n        return Json.parse(ans);\n      } else if (Array.isArray(data)) {\n        ans = [];\n        data.forEach((v, i) => {\n          ans[i] = Json.parse(v);\n        });\n      } else if (typeof data == 'object') {\n        for (const k in data) {\n          ans[k] = Json.parse(data[k]);\n        }\n      } else {\n        return data;\n      }\n      return ans;\n    },\n    stringify: data => {\n      if (typeof data == 'string') {\n        return data;\n      } else {\n        return JSON.stringify(data);\n      }\n    },\n    shallowEqual: (a, b) => {\n      for (let key in a) {\n        if (!(key in b) || a[key] != b[key]) {\n          return false;\n        }\n      }\n      for (let key in b) {\n        if (!(key in a) || a[key] != b[key]) {\n          return false;\n        }\n      }\n      return true;\n    },\n    deepClone: json => {\n      if (Array.isArray(json)) return json.map(i => Json.deepClone(i));\n      if (typeof json !== 'object' || json === null) return json;\n      let clone = {};\n      for (let key in json) {\n        clone[key] = Json.deepClone(json[key]);\n      }\n      return clone;\n    }\n  };\n  var json = Json;\n\n  function updateAttribute(element, name, newValue) {\n    const fromValue = element.getAttribute(name);\n    if (fromValue != newValue) {\n      if (newValue == 'null' || newValue == 'undefined' || newValue == 'false' || !newValue) {\n        if (fromValue) element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, newValue);\n      }\n    }\n    if (name == 'value' && (element.nodeName == 'SELECT' || element.nodeName == 'INPUT')) element.value = newValue;\n  }\n  var update = {\n    updateAttribute\n  };\n\n  const temp = window.document.createElement('template');\n  const sfn = window.document.createElement('sifrr-node');\n  var constants = {\n    SIFRR_NODE: () => sfn.cloneNode(),\n    TEMPLATE: () => temp.cloneNode(),\n    TEXT_NODE: 3,\n    COMMENT_NODE: 8,\n    ELEMENT_NODE: 1\n  };\n\n  const {\n    updateAttribute: updateAttribute$1\n  } = update;\n  const {\n    shallowEqual\n  } = json;\n  const {\n    TEXT_NODE,\n    COMMENT_NODE\n  } = constants;\n  function makeChildrenEqual(parent, newChildren) {\n    const oldL = parent.childNodes.length,\n          newL = newChildren.length;\n    if (oldL > newL) {\n      let i = oldL;\n      while (i > newL) {\n        parent.removeChild(parent.lastChild);\n        i--;\n      }\n    } else if (oldL < newL) {\n      let i = oldL;\n      while (i < newL) {\n        parent.appendChild(newChildren[i]);\n        i++;\n      }\n    }\n    const l = Math.min(newL, oldL);\n    for (let i = 0, item, head = parent.firstChild; i < l; i++) {\n      item = newChildren[i];\n      head = makeEqual(head, item).nextSibling;\n    }\n  }\n  function makeEqual(oldNode, newNode) {\n    if (newNode === null) return oldNode;\n    if (newNode.type === 'stateChange') {\n      if (!shallowEqual(oldNode.state, newNode.state)) {\n        oldNode.state = newNode.state;\n      }\n      return oldNode;\n    }\n    if (oldNode.nodeName !== newNode.nodeName) {\n      oldNode.replaceWith(newNode);\n      return newNode;\n    }\n    if (oldNode.nodeType === TEXT_NODE || oldNode.nodeType === COMMENT_NODE) {\n      if (oldNode.data !== newNode.data) oldNode.data = newNode.data;\n      return oldNode;\n    }\n    if (newNode.state) oldNode.state = newNode.state;\n    let oldAttrs = oldNode.attributes,\n        newAttrs = newNode.attributes,\n        attr;\n    for (let i = newAttrs.length - 1; i >= 0; --i) {\n      updateAttribute$1(oldNode, newAttrs[i].name, newAttrs[i].value);\n    }\n    for (let j = oldAttrs.length - 1; j >= 0; --j) {\n      attr = oldAttrs[j];\n      if (!newNode.hasAttribute(attr.name) && attr.specified !== false) oldNode.removeAttribute(attr.name);\n    }\n    makeChildrenEqual(oldNode, newNode.childNodes);\n    return oldNode;\n  }\n  var makeequal = {\n    makeEqual,\n    makeChildrenEqual\n  };\n\n  const TREE_WALKER = window.document.createTreeWalker(window.document, window.NodeFilter.SHOW_ALL, null, false);\n  TREE_WALKER.roll = function (n, filter = false) {\n    let node = this.currentNode;\n    while (--n) {\n      if (filter && filter(node)) {\n        node = TREE_WALKER.nextSibling() || TREE_WALKER.parentNode();\n      } else node = TREE_WALKER.nextNode();\n    }\n    return node;\n  };\n  function collect(element, stateMap = element.stateMap, filter) {\n    const refs = [];\n    TREE_WALKER.currentNode = element;\n    stateMap.map(x => refs.push(TREE_WALKER.roll(x.idx, filter)));\n    return refs;\n  }\n  class Ref {\n    constructor(idx, ref) {\n      this.idx = idx;\n      this.ref = ref;\n    }\n  }\n  function create(node, fxn, filter = false) {\n    let indices = [],\n        ref,\n        idx = 0;\n    TREE_WALKER.currentNode = node;\n    while (node) {\n      if (ref = fxn(node)) {\n        indices.push(new Ref(idx + 1, ref));\n        idx = 1;\n      } else {\n        idx++;\n      }\n      if (filter && filter(node)) {\n        node = TREE_WALKER.nextSibling() || TREE_WALKER.parentNode();\n      } else node = TREE_WALKER.nextNode();\n    }\n    return indices;\n  }\n  var ref = {\n    walker: TREE_WALKER,\n    collect,\n    create,\n    Ref\n  };\n\n  const {\n    makeChildrenEqual: makeChildrenEqual$1\n  } = makeequal;\n  const {\n    updateAttribute: updateAttribute$2\n  } = update;\n  const {\n    collect: collect$1,\n    create: create$1\n  } = ref;\n  const {\n    TEXT_NODE: TEXT_NODE$1,\n    COMMENT_NODE: COMMENT_NODE$1,\n    ELEMENT_NODE\n  } = constants;\n  const TEMPLATE = constants.TEMPLATE();\n  function isHtml(el) {\n    return el.dataset && el.dataset.sifrrHtml == 'true' || el.contentEditable == 'true' || el.nodeName == 'TEXTAREA' || el.nodeName == 'STYLE' || el.dataset && el.dataset.sifrrRepeat;\n  }\n  function creator(el) {\n    if (el.nodeType === TEXT_NODE$1 || el.nodeType === COMMENT_NODE$1) {\n      const x = el.nodeValue;\n      if (x.indexOf('${') > -1) return {\n        html: false,\n        text: x.trim()\n      };\n    } else if (el.nodeType === ELEMENT_NODE) {\n      const sm = {};\n      if (isHtml(el)) {\n        const innerHTML = el.innerHTML;\n        if (innerHTML.indexOf('${') >= 0) {\n          sm.html = true;\n          sm.text = innerHTML.replace(/<!--(.*)-->/g, '$1');\n        }\n      }\n      const attrs = el.attributes || [],\n            l = attrs.length;\n      const attrStateMap = {\n        events: {}\n      };\n      for (let i = 0; i < l; i++) {\n        const attribute = attrs[i];\n        if (attribute.name[0] === '$') {\n          attrStateMap.events[attribute.name] = attribute.value;\n        } else if (attribute.value.indexOf('${') >= 0) {\n          if (attribute.name === 'style') {\n            const styles = {};\n            attribute.value.split(';').forEach(s => {\n              const [n, v] = s.split(/:(?!\\/\\/)/);\n              if (n && v && v.indexOf('${') >= 0) {\n                styles[n.trim()] = v.trim();\n              }\n            });\n            attrStateMap[attribute.name] = styles;\n          } else {\n            attrStateMap[attribute.name] = attribute.value;\n          }\n        }\n      }\n      if (Object.keys(attrStateMap.events).length === 0) delete attrStateMap.events;\n      if (Object.keys(attrStateMap).length > 0) sm.attributes = attrStateMap;\n      if (Object.keys(sm).length > 0) return sm;\n    }\n    return 0;\n  }\n  const Parser = {\n    collectRefs: (el, stateMap) => collect$1(el, stateMap, isHtml),\n    createStateMap: element => create$1(element, creator, isHtml),\n    update: element => {\n      if (!element._refs) {\n        return false;\n      }\n      const l = element._refs.length;\n      for (let i = 0; i < l; i++) {\n        const data = element.constructor.stateMap[i].ref;\n        const dom = element._refs[i];\n        if (data.attributes) {\n          for (let key in data.attributes) {\n            if (key === 'events') {\n              for (let event in data.attributes.events) {\n                const eventLis = Parser.evaluateString(data.attributes.events[event], element, true);\n                if (data.attributes.events[event].slice(0, 6) === '${this') {\n                  dom[event] = eventLis.bind(element);\n                } else {\n                  dom[event] = eventLis;\n                }\n              }\n            } else if (key === 'style') {\n              for (let k in data.attributes.style) {\n                dom.style[k] = Parser.evaluateString(data.attributes.style[k], element);\n              }\n            } else {\n              const val = Parser.evaluateString(data.attributes[key], element);\n              updateAttribute$2(dom, key, val);\n            }\n          }\n        }\n        if (data.html === undefined) continue;\n        const newValue = Parser.evaluateString(data.text, element);\n        if (!newValue) {\n          dom.textContent = '';\n          continue;\n        }\n        if (data.html) {\n          let children;\n          if (Array.isArray(newValue)) {\n            children = newValue;\n          } else if (newValue.nodeType) {\n            children = [newValue];\n          } else {\n            TEMPLATE.innerHTML = newValue.toString()\n            .replace(/(&lt;)(((?!&gt;).)*)(&gt;)(((?!&lt;).)*)(&lt;)\\/(((?!&gt;).)*)(&gt;)/g, '<$2>$5</$8>')\n            .replace(/(&lt;)(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)(((?!&gt;).)*)(&gt;)/g, '<$2$3>');\n            children = Array.prototype.slice.call(TEMPLATE.content.childNodes);\n          }\n          if (children.length < 1) dom.textContent = '';else makeChildrenEqual$1(dom, children);\n        } else {\n          if (dom.nodeValue != newValue) {\n            dom.nodeValue = newValue;\n          }\n        }\n      }\n    },\n    twoWayBind: e => {\n      const target = e.path ? e.path[0] : e.target;\n      if (!target.dataset.sifrrBind) return;\n      const value = target.value === undefined ? target.innerHTML : target.value;\n      let state = {};\n      let root;\n      if (target._root) {\n        root = target._root;\n      } else {\n        root = target;\n        while (!root.isSifrr) root = root.parentNode || root.host;\n        target._root = root;\n      }\n      state[target.dataset.sifrrBind] = value;\n      root.state = state;\n    },\n    evaluateString: (string, element) => {\n      if (string.indexOf('${') < 0) return string;\n      string = string.trim();\n      if (string.match(/^\\${([^{}$]|{([^{}$])*})*}$/)) return replacer(string);\n      return replacer('`' + string + '`');\n      function replacer(match) {\n        if (match[0] == '$') match = match.slice(2, -1);\n        let f;\n        if (match.indexOf('return ') >= 0) {\n          f = new Function(match).bind(element);\n        } else {\n          f = new Function('return ' + match).bind(element);\n        }\n        return f();\n      }\n    }\n  };\n  var parser = Parser;\n\n  const {\n    TEMPLATE: TEMPLATE$1\n  } = constants;\n  var template = (str, ...extra) => {\n    const tmp = TEMPLATE$1();\n    if (typeof str === 'string') {\n      tmp.innerHTML = str.replace(/{{(.*)}}/g, '${$1}');\n    } else if (str[0] && typeof str[0] === 'string') {\n      str = String.raw(str, ...extra).replace(/{{(.*)}}/g, '${$1}');\n      tmp.innerHTML = str;\n    } else if (str[0]) {\n      Array.from(str).forEach(s => {\n        tmp.appendChild(s);\n      });\n    } else {\n      return str;\n    }\n    return tmp;\n  };\n\n  class Loader {\n    constructor(elemName, url) {\n      if (!fetch) throw Error('Sifrr.Dom.load requires Sifrr.Fetch to work.');\n      if (this.constructor.all[elemName]) return this.constructor.all[elemName].instance;\n      this.elementName = elemName;\n      this.url = url;\n      this.constructor.urls[elemName] = this.htmlUrl;\n    }\n    get html() {\n      const me = this;\n      if (this.constructor.all[this.elementName] && this.constructor.all[this.elementName].html) return this.constructor.all[this.elementName].html;\n      const html = fetch.file(this.htmlUrl).then(resp => resp.text()).then(file => template(file).content).then(html => {\n        Loader._all[me.elementName].template = html.querySelector('template');\n        return html;\n      });\n      Loader.add(me.elementName, {\n        instance: me,\n        html: html\n      });\n      return html;\n    }\n    get js() {\n      const me = this;\n      if (this.constructor.all[this.elementName] && this.constructor.all[this.elementName].js) return this.constructor.all[this.elementName].js;\n      const js = fetch.file(this.jsUrl).then(resp => resp.text());\n      Loader.add(me.elementName, {\n        instance: me,\n        js: js\n      });\n      return js;\n    }\n    get htmlUrl() {\n      return this.url || `${window.Sifrr.Dom.config.baseUrl + '/' || ''}elements/${this.elementName.split('-').join('/')}.html`;\n    }\n    get jsUrl() {\n      return this.url || `${window.Sifrr.Dom.config.baseUrl + '/' || ''}elements/${this.elementName.split('-').join('/')}.js`;\n    }\n    executeScripts(js) {\n      if (!js) {\n        return this.executeHTMLScripts();\n      } else {\n        return this.js.then(script => {\n          new Function(script).bind(window)();\n        }).catch(e => {\n          window.console.error(e);\n          window.console.log(`JS file gave error. Trying to get html file for ${this.elementName}.`);\n          return this.executeHTMLScripts();\n        });\n      }\n    }\n    executeHTMLScripts() {\n      return this.html.then(file => {\n        file.querySelectorAll('script').forEach(script => {\n          if (script.hasAttribute('src')) {\n            window.document.body.appendChild(script);\n          } else {\n            new Function(script.text).bind(window)();\n          }\n        });\n      }).catch(e => {\n        throw e;\n      });\n    }\n    static add(elemName, instance) {\n      Loader._all[elemName] = Object.assign(Loader._all[elemName] || {}, instance);\n    }\n    static get all() {\n      return Loader._all;\n    }\n  }\n  Loader._all = {};\n  Loader.urls = {};\n  var loader = Loader;\n\n  const {\n    collect: collect$2,\n    create: create$2\n  } = ref;\n  function creator$1(node) {\n    if (node.nodeType !== 3) {\n      if (node.attributes !== undefined) {\n        const attrs = Array.from(node.attributes),\n              l = attrs.length;\n        const ret = [];\n        for (let i = 0; i < l; i++) {\n          const avalue = attrs[i].value;\n          if (avalue[0] === '$') {\n            ret.push({\n              name: attrs[i].name,\n              text: avalue.slice(2, -1)\n            });\n          }\n        }\n        if (ret.length > 0) return ret;\n      }\n      return 0;\n    } else {\n      let nodeData = node.nodeValue;\n      if (nodeData[0] === '$') {\n        node.nodeValue = '';\n        return nodeData.slice(2, -1);\n      }\n      return 0;\n    }\n  }\n  function updateState(simpleEl) {\n    const doms = simpleEl._refs,\n          refs = simpleEl.stateMap,\n          l = refs.length;\n    const newState = simpleEl.state,\n          oldState = simpleEl._oldState;\n    for (let i = 0; i < l; i++) {\n      const data = refs[i].ref,\n            dom = doms[i];\n      if (Array.isArray(data)) {\n        const l = data.length;\n        for (let i = 0; i < l; i++) {\n          const attr = data[i];\n          if (oldState[attr.text] !== newState[attr.text]) {\n            if (attr.name === 'class') dom.className = newState[attr.text] || '';else dom.setAttribute(attr.name, newState[attr.text]);\n          }\n        }\n      } else {\n        if (oldState[data] != newState[data]) dom.nodeValue = newState[data];\n      }\n    }\n  }\n  function SimpleElement(content, defaultState) {\n    if (typeof content === 'string') {\n      const templ = template(content);\n      content = templ.content.firstElementChild || templ.content.firstChild;\n      const oldDisplay = content.style.display;\n      content.style.display = 'none';\n      window.document.body.appendChild(content);\n      content.remove();\n      content.style.display = oldDisplay;\n    }\n    if (content.nodeName.indexOf('-') !== -1 || content.getAttribute('is') && content.getAttribute('is').indexOf('-') >= 0 || content.isSifrr && content.isSifrr()) return content;\n    content.stateMap = create$2(content, creator$1);\n    content._refs = collect$2(content, content.stateMap);\n    Object.defineProperty(content, 'state', {\n      get: () => content._state,\n      set: v => {\n        content._oldState = Object.assign({}, content._state);\n        content._state = Object.assign(content._state || {}, v);\n        updateState(content);\n      }\n    });\n    if (defaultState) content.state = defaultState;\n    content.sifrrClone = function (deep) {\n      const clone = content.cloneNode(deep);\n      clone.stateMap = content.stateMap;\n      clone._refs = collect$2(clone, content.stateMap);\n      Object.defineProperty(clone, 'state', {\n        get: () => clone._state,\n        set: v => {\n          clone._oldState = Object.assign({}, clone._state);\n          clone._state = Object.assign(clone._state || {}, v);\n          updateState(clone);\n        }\n      });\n      if (content.state) clone.state = content.state;\n      return clone;\n    };\n    return content;\n  }\n  var simpleelement = SimpleElement;\n\n  function elementClassFactory(baseClass) {\n    return class extends baseClass {\n      static extends(htmlElementClass) {\n        return elementClassFactory(htmlElementClass);\n      }\n      static get observedAttributes() {\n        return ['data-sifrr-state'].concat(this.observedAttrs());\n      }\n      static observedAttrs() {\n        return [];\n      }\n      static get template() {\n        const temp = (loader.all[this.elementName] || {\n          template: false\n        }).template;\n        if (window.ShadyCSS && this.useShadowRoot) window.ShadyCSS.prepareTemplate(temp, this.elementName);\n        return temp;\n      }\n      static get ctemp() {\n        this._ctemp = this._ctemp || this.template;\n        return this._ctemp;\n      }\n      static get stateMap() {\n        this._stateMap = this._stateMap || parser.createStateMap(this.ctemp.content);\n        return this._stateMap;\n      }\n      static get elementName() {\n        return this.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n      }\n      static onStateChange() {}\n      static get useShadowRoot() {\n        return this.useSR;\n      }\n      constructor() {\n        super();\n        if (!this.constructor.ctemp) ; else {\n          if (this.constructor.defaultState || this.state) this._state = Object.assign({}, this.constructor.defaultState, this.state);\n          const content = this.constructor.ctemp.content.cloneNode(true);\n          if (this.constructor.useShadowRoot) {\n            this._refs = parser.collectRefs(content, this.constructor.stateMap);\n            this.attachShadow({\n              mode: 'open'\n            });\n            this.shadowRoot.appendChild(content);\n            this.shadowRoot.addEventListener('change', parser.twoWayBind);\n          } else {\n            this.__content = content;\n          }\n        }\n      }\n      connectedCallback() {\n        if (!this.constructor.useShadowRoot) {\n          this.textContent = '';\n          this._refs = parser.collectRefs(this.__content, this.constructor.stateMap);\n          this.appendChild(this.__content);\n          if (this._state || this.hasAttribute('data-sifrr-state')) this.update();\n        } else {\n          if (!this.hasAttribute('data-sifrr-state') && this._state) this.update();\n        }\n        this.onConnect();\n      }\n      onConnect() {}\n      disconnectedCallback() {\n        if (this.shadowRoot) this.shadowRoot.removeEventListener('change', parser.twoWayBind);\n        this.onDisconnect();\n      }\n      onDisconnect() {}\n      attributeChangedCallback(attrName, oldVal, newVal) {\n        if (attrName === 'data-sifrr-state') {\n          this.state = json.parse(newVal);\n        }\n        this.onAttributeChange(attrName, oldVal, newVal);\n      }\n      onAttributeChange() {}\n      get state() {\n        return this._state;\n      }\n      set state(v) {\n        this._state = this._state || {};\n        if (this._state !== v) Object.assign(this._state, v);\n        this.update();\n      }\n      update() {\n        parser.update(this);\n        this.onStateChange();\n        this.constructor.onStateChange(this);\n      }\n      onStateChange() {}\n      isSifrr(name = null) {\n        if (name) return name === this.constructor.elementName;else return true;\n      }\n      sifrrClone(deep) {\n        return this.cloneNode(deep);\n      }\n      clearState() {\n        this._state = {};\n        this.update();\n      }\n      $(args, sr = true) {\n        if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelector(args);else return this.querySelector(args);\n      }\n      $$(args, sr = true) {\n        if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelectorAll(args);else return this.querySelectorAll(args);\n      }\n      static addArrayToDom(key, template) {\n        this._arrayToDom = this._arrayToDom || {};\n        this._arrayToDom[this.elementName] = this._arrayToDom[this.elementName] || {};\n        this._arrayToDom[this.elementName][key] = simpleelement(template);\n      }\n      arrayToDom(key, newState = this.state[key]) {\n        this._domL = this._domL || {};\n        const oldL = this._domL[key] || 0;\n        const domArray = [];\n        const newL = newState.length;\n        let temp;\n        try {\n          temp = this.constructor._arrayToDom[this.constructor.elementName][key];\n        } catch (e) {\n          return window.console.error(`[error]: No arrayToDom data of '${key}' added in ${this.constructor.elementName}.`);\n        }\n        for (let i = 0; i < newL; i++) {\n          if (i < oldL) {\n            domArray.push({\n              type: 'stateChange',\n              state: newState[i]\n            });\n          } else {\n            const el = temp.sifrrClone(true);\n            el.state = newState[i];\n            domArray.push(el);\n          }\n        }\n        this._domL[key] = newL;\n        return domArray;\n      }\n    };\n  }\n  var element = elementClassFactory(window.HTMLElement);\n\n  const SYNTHETIC_EVENTS = {};\n  const nativeToSyntheticEvent = (e, name) => {\n    return Promise.resolve((() => {\n      const target = e.composedPath ? e.composedPath()[0] : e.target;\n      let dom = target;\n      while (dom) {\n        const eventHandler = dom[`$${name}`];\n        if (eventHandler) {\n          eventHandler(e, target);\n        }\n        cssMatchEvent(e, name, dom, target);\n        dom = dom.parentNode || dom.host;\n      }\n    })());\n  };\n  const cssMatchEvent = (e, name, dom, target) => {\n    function callEach(fxns) {\n      fxns.forEach(fxn => fxn(e, target, dom));\n    }\n    for (let css in SYNTHETIC_EVENTS[name]) {\n      if (typeof dom.matches === 'function' && dom.matches(css) || dom.nodeType === 9 && css === 'document') callEach(SYNTHETIC_EVENTS[name][css]);\n    }\n  };\n  const Event = {\n    add: name => {\n      if (SYNTHETIC_EVENTS[name]) return false;\n      window.addEventListener(name, event => nativeToSyntheticEvent(event, name), {\n        capture: true,\n        passive: true\n      });\n      SYNTHETIC_EVENTS[name] = {};\n      return true;\n    },\n    addListener: (name, css, fxn) => {\n      const fxns = SYNTHETIC_EVENTS[name][css] || [];\n      if (fxns.indexOf(fxn) < 0) fxns.push(fxn);\n      SYNTHETIC_EVENTS[name][css] = fxns;\n      return true;\n    },\n    removeListener: (name, css, fxn) => {\n      const fxns = SYNTHETIC_EVENTS[name][css] || [],\n            i = fxns.indexOf(fxn);\n      if (i >= 0) fxns.splice(i, 1);\n      SYNTHETIC_EVENTS[name][css] = fxns;\n      return true;\n    },\n    trigger: (el, name, options) => {\n      el.dispatchEvent(new window.Event(name, Object.assign({\n        bubbles: true,\n        composed: true\n      }, options)));\n    }\n  };\n  var event = Event;\n\n  let SifrrDom = {};\n  SifrrDom.elements = {};\n  SifrrDom.loadingElements = [];\n  SifrrDom.Element = element;\n  SifrrDom.Parser = parser;\n  SifrrDom.Loader = loader;\n  SifrrDom.SimpleElement = simpleelement;\n  SifrrDom.Event = event;\n  SifrrDom.makeEqual = makeequal;\n  SifrrDom.Url = url;\n  SifrrDom.Json = json;\n  SifrrDom.template = template;\n  SifrrDom.register = (Element, options) => {\n    Element.useSR = SifrrDom.config.useShadowRoot;\n    const name = Element.elementName;\n    if (!name) {\n      throw Error('Error creating Custom Element: No name given.', Element);\n    } else if (window.customElements.get(name)) {\n      window.console.warn(`Error creating Element: ${name} - Custom Element with this name is already defined.`);\n    } else if (name.indexOf('-') < 1) {\n      throw Error(`Error creating Element: ${name} - Custom Element name must have one dash '-'`);\n    } else {\n      try {\n        window.customElements.define(name, Element, options);\n        SifrrDom.elements[name] = Element;\n        return true;\n      } catch (error) {\n        window.console.error(`Error creating Custom Element: ${name} - ${error}`, error.trace);\n        return false;\n      }\n    }\n    return false;\n  };\n  SifrrDom.setup = function (config) {\n    SifrrDom.config = Object.assign({\n      baseUrl: '',\n      useShadowRoot: true\n    }, config);\n    SifrrDom.Event.add('input');\n    SifrrDom.Event.add('change');\n    SifrrDom.Event.addListener('change', 'document', SifrrDom.Parser.twoWayBind);\n    SifrrDom.Event.addListener('input', 'document', SifrrDom.Parser.twoWayBind);\n  };\n  SifrrDom.load = function (elemName, {\n    url: url$$1,\n    js = true\n  } = {}) {\n    let loader$$1 = new SifrrDom.Loader(elemName, url$$1);\n    SifrrDom.loadingElements.push(customElements.whenDefined(elemName));\n    return loader$$1.executeScripts(js);\n  };\n  SifrrDom.loading = () => {\n    return Promise.all(SifrrDom.loadingElements);\n  };\n  SifrrDom.relativeTo = function (elemName, relativeUrl) {\n    if (typeof elemName === 'string') return SifrrDom.Url.absolute(SifrrDom.Loader.urls[elemName], relativeUrl);\n  };\n  var sifrr_dom = SifrrDom;\n\n  return sifrr_dom;\n\n}));\n/*! (c) @aadityataparia */\n//# sourceMappingURL=sifrr.dom.js.map\n","/*! Sifrr.Storage v0.0.2-alpha - sifrr project */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Sifrr = global.Sifrr || {}, global.Sifrr.Storage = factory());\n}(this, (function () { 'use strict';\n\n  class Json {\n    static parse(data) {\n      let ans = {};\n      if (typeof data == 'string') {\n        try {\n          ans = JSON.parse(data);\n        } catch (e) {\n          return data;\n        }\n        return this.parse(ans);\n      } else if (Array.isArray(data)) {\n        ans = [];\n        data.forEach((v, i) => {\n          ans[i] = this.parse(v);\n        });\n      } else if (typeof data == 'object') {\n        for (const k in data) {\n          ans[k] = this.parse(data[k]);\n        }\n      } else {\n        return data;\n      }\n      return ans;\n    }\n    static stringify(data) {\n      if (typeof data == 'string') {\n        return data;\n      } else {\n        return JSON.stringify(data);\n      }\n    }\n  }\n  var json = Json;\n\n  class Storage {\n    constructor(options) {\n      this._options = options;\n    }\n    _parseKeyValue(key, value) {\n      let jsonConstructor = {}.constructor;\n      if (typeof value == 'undefined') {\n        if (Array.isArray(key)) {\n          return key;\n        } else if (typeof key == 'string') {\n          return [key];\n        } else if (key.constructor === jsonConstructor) {\n          return key;\n        }\n        {\n          throw Error('Invalid Key');\n        }\n      } else if (typeof key == 'string') {\n        let ans = {};\n        ans[key] = value;\n        return ans;\n      } else {\n        throw Error('Invalid Key');\n      }\n    }\n    _select(keys) {\n      return this.data().then(data => {\n        let ans = {};\n        keys.forEach(key => ans[key] = data[key]);\n        return ans;\n      });\n    }\n    _upsert(data) {\n      let table = this.table;\n      for (let key in data) {\n        table[key] = data[key];\n      }\n      this.table = table;\n    }\n    _delete(keys) {\n      let table = this.table;\n      keys.forEach(key => delete table[key]);\n      this.table = table;\n    }\n    _clear() {\n      this.table = {};\n    }\n    _isEqual(options, type) {\n      if (this.tableName == options.name + options.version && this.type == type) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    get tableName() {\n      return this.name + this.version;\n    }\n    get name() {\n      return this._options.name;\n    }\n    get version() {\n      return this._options.version;\n    }\n    get description() {\n      return this._options.description;\n    }\n    get type() {\n      return this.constructor.type;\n    }\n    isSupported() {\n      if (typeof window == 'undefined' || typeof document == 'undefined') {\n        return true;\n      } else if (window && typeof this.store != 'undefined') {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    all() {\n      return this.data();\n    }\n    data() {\n      return Promise.resolve(this._parsedData());\n    }\n    select(key) {\n      return Promise.resolve(this._select(this._parseKeyValue(key)));\n    }\n    insert(key, value) {\n      return Promise.resolve(this._upsert(this._parseKeyValue(key, value)));\n    }\n    update(key, value) {\n      return Promise.resolve(this._upsert(this._parseKeyValue(key, value)));\n    }\n    upsert(key, value) {\n      return Promise.resolve(this._upsert(this._parseKeyValue(key, value)));\n    }\n    delete(key) {\n      return Promise.resolve(this._delete(this._parseKeyValue(key)));\n    }\n    deleteAll() {\n      return Promise.resolve(this._clear());\n    }\n    clear() {\n      return Promise.resolve(this._clear());\n    }\n    static stringify(data) {\n      return json.stringify(data);\n    }\n    static parse(data) {\n      return json.parse(data);\n    }\n  }\n  var storage = Storage;\n\n  class IndexedDB extends storage {\n    constructor(options) {\n      super(options);\n    }\n    _parsedData() {\n      return this._tx('readonly', 'getAll').then(result => this.parse(result));\n    }\n    _select(keys) {\n      let ans = {};\n      let promises = [];\n      keys.forEach(key => promises.push(this._tx('readonly', 'get', key).then(r => ans[key] = this.parse(r))));\n      return Promise.all(promises).then(() => ans);\n    }\n    _upsert(data) {\n      let promises = [];\n      for (let key in data) {\n        let promise = this._tx('readonly', 'get', key).then(oldResult => {\n          if (oldResult && oldResult.key == key) {\n            return this._tx('readwrite', 'put', {\n              'key': key,\n              'value': data[key]\n            });\n          } else {\n            return this._tx('readwrite', 'add', {\n              'key': key,\n              'value': data[key]\n            });\n          }\n        });\n        promises.push(promise);\n      }\n      return Promise.all(promises);\n    }\n    _delete(keys) {\n      let promises = [];\n      keys.forEach(key => promises.push(this._tx('readwrite', 'delete', key)));\n      return Promise.all(promises);\n    }\n    _clear() {\n      return this._tx('readwrite', 'clear');\n    }\n    _tx(scope, fn, params) {\n      let me = this;\n      return this.createStore(me.tableName).then(db => {\n        return new Promise((resolve, reject) => {\n          let tx = db.transaction(me.tableName, scope).objectStore(me.tableName);\n          let request = tx[fn].call(tx, params);\n          request.onsuccess = event => resolve(event.target.result);\n          request.onerror = event => reject(event.error);\n        });\n      });\n    }\n    get store() {\n      return window.indexedDB;\n    }\n    createStore(table) {\n      return new Promise((resolve, reject) => {\n        const request = this.store.open(table, 1);\n        request.onupgradeneeded = event => {\n          let db = event.target.result;\n          db.createObjectStore(table, {\n            keyPath: 'key'\n          });\n        };\n        request.onsuccess = () => resolve(request.result);\n        request.onerror = () => reject(request.error);\n      });\n    }\n    parse(data) {\n      let ans = {};\n      if (Array.isArray(data)) {\n        data.forEach(row => {\n          ans[row.key] = row.value;\n        });\n      } else if (data && data.value) {\n        return data.value;\n      } else {\n        return undefined;\n      }\n      return ans;\n    }\n    static get type() {\n      return 'indexeddb';\n    }\n  }\n  var indexeddb = IndexedDB;\n\n  class WebSQL extends storage {\n    constructor(options) {\n      super(options);\n      this.createStore();\n    }\n    _parsedData() {\n      let me = this;\n      return new Promise(resolve => {\n        this.store.transaction(function (tx) {\n          tx.executeSql(`SELECT * FROM ${me.tableName}`, [], (txn, results) => {\n            resolve(me.parse(results));\n          });\n        });\n      });\n    }\n    _select(keys) {\n      let me = this;\n      let q = keys.map(() => '?').join(', ');\n      return this.execSql(`SELECT key, value FROM ${me.tableName} WHERE key in (${q})`, keys);\n    }\n    _upsert(data) {\n      let table = this.tableName;\n      this.store.transaction(tx => {\n        for (let key in data) {\n          tx.executeSql(`INSERT OR IGNORE INTO ${table}(key, value) VALUES (?, ?)`, [key, data[key]]);\n          tx.executeSql(`UPDATE ${table} SET value = ? WHERE key = ?`, [this.constructor.stringify(data[key]), key]);\n        }\n      });\n    }\n    _delete(keys) {\n      let table = this.tableName;\n      let q = keys.map(() => '?').join(', ');\n      return this.execSql(`DELETE FROM ${table} WHERE key in (${q})`, keys);\n    }\n    _clear() {\n      let table = this.tableName;\n      return this.execSql(`DELETE FROM ${table}`);\n    }\n    get store() {\n      if (typeof window !== 'undefined') {\n        return window.openDatabase('bs', 1, this._options.description, this._options.size);\n      } else {\n        return true;\n      }\n    }\n    createStore() {\n      let table = this.tableName;\n      if (typeof window == 'undefined') return;\n      return this.execSql(`CREATE TABLE IF NOT EXISTS ${table} (key unique, value)`);\n    }\n    execSql(query, args = []) {\n      let me = this;\n      return new Promise(resolve => {\n        me.store.transaction(function (tx) {\n          tx.executeSql(query, args, (txn, results) => {\n            resolve(me.parse(results));\n          });\n        });\n      });\n    }\n    parse(results) {\n      let ans = {};\n      let len = results.rows.length,\n          i;\n      for (i = 0; i < len; i++) {\n        ans[results.rows.item(i).key] = this.constructor.parse(results.rows.item(i).value);\n      }\n      return ans;\n    }\n    static get type() {\n      return 'websql';\n    }\n  }\n  var websql = WebSQL;\n\n  class LocalStorage extends storage {\n    constructor(options) {\n      super(options);\n    }\n    _parsedData() {\n      return this.table;\n    }\n    get table() {\n      return this.constructor.parse(this.store.getItem(this.tableName));\n    }\n    set table(value) {\n      this.store.setItem(this.tableName, this.constructor.stringify(value));\n    }\n    get store() {\n      return window.localStorage;\n    }\n    static get type() {\n      return 'localstorage';\n    }\n  }\n  var localstorage = LocalStorage;\n\n  class Cookies extends storage {\n    constructor(options) {\n      super(options);\n    }\n    _parsedData() {\n      return this.table;\n    }\n    get table() {\n      let result = this.store,\n          ans = {};\n      result.split('; ').forEach(value => {\n        let [k, v] = value.split('=');\n        if (v) ans[k] = this.constructor.parse(v);\n      });\n      return ans[this.tableName] || {};\n    }\n    set table(value) {\n      document.cookie = `${this.tableName}=${storage.stringify(value)}; path=/`;\n    }\n    get store() {\n      return document.cookie;\n    }\n    static get type() {\n      return 'cookies';\n    }\n  }\n  var cookies = Cookies;\n\n  class JsonStorage extends storage {\n    constructor(options, data = {}) {\n      super(options);\n      this._upsert(this.constructor.parse(data));\n    }\n    _parsedData() {\n      return this._table;\n    }\n    get store() {\n      return this._table;\n    }\n    get table() {\n      return this._table || {};\n    }\n    set table(value) {\n      this._table = value;\n    }\n    static get type() {\n      return 'jsonstorage';\n    }\n  }\n  var jsonstorage = JsonStorage;\n\n  let storages = {};\n  storages[indexeddb.type] = indexeddb;\n  storages[websql.type] = websql;\n  storages[localstorage.type] = localstorage;\n  storages[cookies.type] = cookies;\n  storages[jsonstorage.type] = jsonstorage;\n  var storages_1 = storages;\n\n  class SifrrStorage {\n    constructor(options) {\n      if (typeof options == 'string') options = {\n        priority: [options]\n      };else options = options || {};\n      this._options = Object.assign(this.constructor.defaultOptions, options);\n      return this.storage;\n    }\n    get storage() {\n      let storage = this.supportedStore();\n      if (typeof storage == 'undefined') throw new Error('No available storage supported in this browser');\n      let matchingInstance = this.constructor._matchingInstance(this._options, storage.type);\n      if (matchingInstance) {\n        return matchingInstance;\n      } else {\n        let storageInstance = new storage(this._options);\n        this.constructor._add(storageInstance);\n        return storageInstance;\n      }\n    }\n    get priority() {\n      return this._options.priority.concat(['indexeddb', 'websql', 'localstorage', 'cookies', 'jsonstorage']);\n    }\n    supportedStore() {\n      for (let i = 0; i < this.priority.length; i++) {\n        let store = this.constructor.availableStores[this.priority[i]];\n        if (store && new store(this._options).isSupported()) return store;\n      }\n    }\n    static _matchingInstance(options, type) {\n      let allInstances = this.all,\n          i;\n      let length = allInstances.length;\n      for (i = 0; i < length; i++) {\n        if (allInstances[i]._isEqual(options, type)) return allInstances[i];\n      }\n      return false;\n    }\n    static _add(instance) {\n      this._all = this._all || [];\n      this._all.push(instance);\n    }\n    static get availableStores() {\n      return storages_1;\n    }\n    static get defaultOptions() {\n      return {\n        priority: [],\n        name: 'SifrrStorage',\n        version: 1,\n        description: 'Sifrr Storage',\n        size: 5 * 1024 * 1024\n      };\n    }\n    static get all() {\n      return this._all || [];\n    }\n    static json(data) {\n      return new jsonstorage({}, data);\n    }\n  }\n  var sifrr_storage = SifrrStorage;\n\n  return sifrr_storage;\n\n})));\n/*! (c) @aadityataparia */\n//# sourceMappingURL=sifrr.storage.js.map\n","window.Sifrr = window.Sifrr || {};\nwindow.Sifrr.Dom = require('@sifrr/dom');\nwindow.Sifrr.Fetch = require('@sifrr/fetch');\nwindow.Sifrr.Storage = require('@sifrr/storage');\n\nconst Sifrr = window.Sifrr;\n\nSifrr.Dom.setup();\nSifrr.Dom.load('sifrr-stater');\nSifrr.Dom.load('sifrr-test');\n"],"names":["request","module","type","url","options","_options","_url","window","fetch","this","then","resp","contentType","headers","get","ok","includes","json","error","Error","statusText","response","params","Object","keys","length","map","k","encodeURIComponent","join","assign","body","JSON","stringify","query","variables","accept","hasOwnProperty","base","relative","stack","split","parts","pop","i","push","qIndex","indexOf","substring","Json","data","ans","parse","e","Array","isArray","forEach","v","a","b","key","deepClone","clone","update","element","name","newValue","fromValue","getAttribute","setAttribute","removeAttribute","nodeName","value","temp","document","createElement","sfn","constants","cloneNode","updateAttribute$1","shallowEqual","TEXT_NODE","COMMENT_NODE","makeChildrenEqual","parent","newChildren","oldL","childNodes","newL","removeChild","lastChild","appendChild","l","Math","min","item","head","firstChild","makeEqual","nextSibling","oldNode","newNode","state","replaceWith","nodeType","attr","oldAttrs","attributes","newAttrs","j","hasAttribute","specified","makeequal","TREE_WALKER","createTreeWalker","NodeFilter","SHOW_ALL","roll","n","filter","node","currentNode","parentNode","nextNode","Ref","idx","ref","stateMap","refs","x","fxn","indices","makeChildrenEqual$1","updateAttribute$2","collect$1","create$1","TEXT_NODE$1","COMMENT_NODE$1","ELEMENT_NODE","TEMPLATE","isHtml","el","dataset","sifrrHtml","contentEditable","sifrrRepeat","creator","nodeValue","trim","sm","innerHTML","html","text","replace","attrs","attrStateMap","attribute","events","styles","s","Parser","_refs","constructor","dom","event","eventLis","evaluateString","slice","bind","style","val","undefined","children","toString","prototype","call","content","textContent","target","path","sifrrBind","root","_root","isSifrr","host","string","match","replacer","f","Function","parser","TEMPLATE$1","template","str","extra","tmp","String","raw","from","Loader","elemName","all","instance","elementName","urls","htmlUrl","me","file","_all","querySelector","add","js","jsUrl","Sifrr","Dom","config","baseUrl","script","catch","console","log","executeHTMLScripts","querySelectorAll","loader","collect$2","create$2","creator$1","ret","avalue","nodeData","updateState","simpleEl","doms","newState","oldState","_oldState","className","simpleelement","defaultState","templ","oldDisplay","firstElementChild","display","remove","defineProperty","_state","sifrrClone","deep","elementClassFactory","baseClass","htmlElementClass","concat","observedAttrs","ShadyCSS","useShadowRoot","prepareTemplate","_ctemp","_stateMap","createStateMap","ctemp","toLowerCase","useSR","collectRefs","attachShadow","shadowRoot","addEventListener","twoWayBind","__content","onConnect","removeEventListener","onDisconnect","attrName","oldVal","newVal","onAttributeChange","onStateChange","args","sr","_arrayToDom","_domL","domArray","HTMLElement","SYNTHETIC_EVENTS","cssMatchEvent","callEach","fxns","css","matches","Promise","resolve","composedPath","eventHandler","nativeToSyntheticEvent","splice","dispatchEvent","Event","SifrrDom","Element","SimpleElement","Url","register","customElements","warn","define","elements","trace","setup","addListener","load","url$$1","loader$$1","loadingElements","whenDefined","executeScripts","loading","relativeTo","relativeUrl","absolute","factory","require$$0","storage","jsonConstructor","table","tableName","version","description","store","_parsedData","_select","_parseKeyValue","_upsert","_delete","_clear","indexeddb","_tx","result","promises","r","promise","oldResult","scope","fn","createStore","db","reject","tx","transaction","objectStore","onsuccess","onerror","indexedDB","open","onupgradeneeded","createObjectStore","row","websql","executeSql","txn","results","q","execSql","openDatabase","size","len","rows","localstorage","getItem","setItem","localStorage","cookies","cookie","jsonstorage","_table","storages","storages_1","defaultOptions","supportedStore","matchingInstance","_matchingInstance","storageInstance","_add","priority","availableStores","isSupported","allInstances","_isEqual","Fetch","require$$1","Storage","require$$2"],"mappings":"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"}