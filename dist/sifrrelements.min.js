/*! SifrrElements v0.0.4 - sifrr project | MIT licensed | https://github.com/sifrr/sifrr-elements */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@sifrr/dom"),require("@sifrr/storage")):"function"==typeof define&&define.amd?define(["exports","@sifrr/dom","@sifrr/storage"],e):e((t=t||self).SifrrElements={},t.Sifrr.Dom,t.Sifrr.Storage)}(this,function(t,e,s){"use strict";function i(t,e){t.dataset[e]&&(t.setAttribute(e,t.dataset[e]),t.removeAttribute("data-".concat(e)))}e=e&&e.hasOwnProperty("default")?e.default:e,s=s&&s.hasOwnProperty("default")?s.default:s;class a extends(Sifrr.Dom.Element.extends(HTMLImageElement)){static get observer(){return this._observer=this._observer||new IntersectionObserver(this.onVisible,{rootMargin:this.rootMargin}),this._observer}static onVisible(t){t.forEach(t=>{t.isIntersecting&&(!function(t){a.observer.unobserve(t),t.beforeLoad(),i(t,"src"),i(t,"srcset"),t.afterLoad()}(t.target),this.unobserve(t.target))})}onConnect(){this.reload()}reload(){this.constructor.observer.observe(this)}beforeLoad(){}afterLoad(){}onDisconnect(){this.constructor.observer.unobserve(this)}}function n(t,e){t.dataset[e]&&(t.setAttribute(e,t.dataset[e]),t.removeAttribute("data-".concat(e)))}a.rootMargin="0px 0px 200px 0px",e.register(a,{extends:"img"});class o extends(Sifrr.Dom.Element.extends(HTMLPictureElement)){static get observer(){return this._observer=this._observer||new IntersectionObserver(this.onVisible,{rootMargin:this.rootMargin}),this._observer}static onVisible(t){t.forEach(t=>{t.isIntersecting&&(!function(t){o.observer.unobserve(t),t.beforeLoad(),t.$$("source",!1).forEach(t=>{n(t,"srcset")});const e=t.$("img",!1);n(e,"src"),n(e,"srcset"),t.afterLoad()}(t.target),this.unobserve(t.target))})}onConnect(){this.reload()}reload(){this.constructor.observer.observe(this)}beforeLoad(){}afterLoad(){}onDisconnect(){this.constructor.observer.unobserve(this)}}function r(t,e){return e||(e=t.slice(0)),Object.freeze(Object.defineProperties(t,{raw:{value:Object.freeze(e)}}))}o.rootMargin="0px 0px 200px 0px",e.register(o,{extends:"picture"});class l{constructor(t){return this.setProps(...t),this.final.bind(this)}setProps(t,e,s,i){let a={x1:t,y1:e,x2:s,y2:i,A:(t,e)=>1-3*e+3*t,B:(t,e)=>3*e-6*t,C:t=>3*t,CalcBezier:(t,e,s)=>((this.A(e,s)*t+this.B(e,s))*t+this.C(e))*t,GetSlope:(t,e,s)=>3*this.A(e,s)*t*t+2*this.B(e,s)*t+this.C(e)};Object.assign(this,a)}final(t){return this.x1==this.y1&&this.x2==this.y2?t:this.CalcBezier(this.GetTForX(t),this.y1,this.y2)}GetTForX(t){let e=t;for(let s=0;s<4;++s){let s=this.GetSlope(e,this.x1,this.x2);if(0==s)return e;e-=(this.CalcBezier(e,this.x1,this.x2)-t)/s}return e}}function h(t,e,s,i=300,{preffix:a=!1,suffix:n=!1,type:o="ease"}={}){let r=t[e].toString(),c=s;s=s.toString(),r=Number(r.slice(a?a.length:0,n?-1*n.length:r.length));const d=(s=Number(s.slice(a?a.length:0,n?-1*n.length:s.length)))-r,p=new l(h.types[o]||o);let u;return new Promise(s=>{window.requestAnimationFrame(function o(l){const h=(l-(u=u||l))/i;if(h>=1)return t[e]=c,s();let m=p(h)*d+r;t[e]=n||a?(a||"")+m+(n||""):m,window.requestAnimationFrame(o)})})}h.types={linear:[0,0,1,1],ease:[.25,.1,.25,1],easeIn:[.42,0,1,1],easeOut:[0,0,.58,1],easeInOut:[.42,0,.58,1]};var c=h;function d(){const t=r(['<style media="screen">\n  ','\n</style>\n<style>\n  .tabs {\n    height: ${this.options ? this.options.tabHeight : \'auto\'};\n    width: ${this.totalWidth + \'px\'};\n  }\n  .headings {\n    display: ${this.headingDisplay};\n    background: ${this.options ? this.options.background : \'transparent\'};\n  }\n  .content *::slotted([slot="tab"]) {\n    width: ${this.tabWidth + \'px\'};\n    margin: 0 ${this.options ? this.options.arrowMargin + \'px\' : 0};\n  }\n  .arrow {\n    width: ${this.options ? this.options.arrowWidth : \'20px\'};\n  }\n</style>\n<div class="headings">\n  <ul>\n    <slot name="heading">\n    </slot>\n  </ul>\n  <div class="underline"></div>\n</div>\n<div class="content">\n  <div class="arrow l" _click=${this.prev}>\n    <span></span>\n  </div>\n  <div class="arrow r" _click=${this.next}>\n    <span></span>\n  </div>\n  <div class="tabs">\n    <slot name="tab">\n    </slot>\n  </div>\n</div>'],['<style media="screen">\n  ','\n</style>\n<style>\n  .tabs {\n    height: \\${this.options ? this.options.tabHeight : \'auto\'};\n    width: \\${this.totalWidth + \'px\'};\n  }\n  .headings {\n    display: \\${this.headingDisplay};\n    background: \\${this.options ? this.options.background : \'transparent\'};\n  }\n  .content *::slotted([slot="tab"]) {\n    width: \\${this.tabWidth + \'px\'};\n    margin: 0 \\${this.options ? this.options.arrowMargin + \'px\' : 0};\n  }\n  .arrow {\n    width: \\${this.options ? this.options.arrowWidth : \'20px\'};\n  }\n</style>\n<div class="headings">\n  <ul>\n    <slot name="heading">\n    </slot>\n  </ul>\n  <div class="underline"></div>\n</div>\n<div class="content">\n  <div class="arrow l" _click=\\${this.prev}>\n    <span></span>\n  </div>\n  <div class="arrow r" _click=\\${this.next}>\n    <span></span>\n  </div>\n  <div class="tabs">\n    <slot name="tab">\n    </slot>\n  </div>\n</div>']);return d=function(){return t},t}const p=e.template(d(),":host{\n  /* CSS for tabs container */line-height:24px;overflow:hidden;display:block}.headings,:host{width:100%;position:relative}.headings{\n  /* CSS for heading bar */overflow-y:hidden;overflow-x:auto;box-shadow:0 2px 3px rgba(0,0,0,.2)}.headings ul{padding:0 0 3px;margin:0;font-size:0}\n\n/* CSS for heading text li */.headings ::slotted(li){font-size:16px;display:inline-block;text-align:center;padding:8px;text-decoration:none;list-style:none;color:#fff;border-bottom:2px solid transparent;opacity:.9;cursor:pointer;box-sizing:border-box}.headings ::slotted(li.active),.headings ::slotted(li:hover){opacity:1}\n\n/* CSS for line under active tab heading */.headings .underline{position:absolute;bottom:0;left:0;height:3px;background:#fff}\n\n/* Arrows css */.arrow{z-index:5;top:0;bottom:0}.arrow,.arrow>*{position:absolute}.arrow>*{width:8px;height:8px;margin:-6px 5px;top:50%;border:solid #fff;border-width:0 3px 3px 0;display:inline-block;padding:3px;filter:drop-shadow(-1px -1px 3px #000)}.arrow.l{left:0;cursor:w-resize}.arrow.l>*{left:0;transform:rotate(135deg)}.arrow.r{right:0;cursor:e-resize}.arrow.r>*{right:0;transform:rotate(-45deg)}\n\n/* Tab container css */.content{width:100%;height:100%;overflow-x:auto;overflow-y:hidden;margin:0;line-height:normal;box-sizing:border-box}.content .tabs{min-height:1px}\n\n/* Tab element css */.content ::slotted([slot=tab]){float:left;max-height:100%;height:100%;overflow-x:hidden;overflow-y:auto;vertical-align:top;padding:8px;box-sizing:border-box}");function u(t,e,s){t instanceof HTMLElement&&(t=t.children);for(let i=0;i<t.length;i++)i!==s&&t[i]!==s?t[i].classList.remove(e):t[i].classList.add(e)}class m extends e.Element{static get template(){return p}static observedAttrs(){return["options"]}onConnect(){this._connected=!0,this.refresh(),this.setWindowResizeEvent(),this.setSlotChangeEvent(),this.setScrollEvent()}onAttributeChange(t,e,s){"options"===t&&(this._attrOptions=JSON.parse(s||"{}"),this._connected&&this.refresh())}refresh(){this.options=Object.assign({menu:this.$(".headings ul"),content:this.$(".content"),tabcontainer:this.$(".tabs"),menus:this.$("slot[name=heading]").assignedNodes(),tabs:this.$("slot[name=tab]").assignedNodes(),la:this.$(".arrow.l"),ra:this.$(".arrow.r"),line:this.$(".underline"),num:1,showArrows:!1,arrowMargin:0,arrowWidth:"20px",showMenu:!0,step:1,tabHeight:"auto",showUnderline:!0,loop:!1,animation:"ease",animationTime:300,scrollBreakpoint:.2,background:"#714cfe"},this._attrOptions),!this.options.tabs||this.options.tabs.length<1||(this.usableWidth=this.clientWidth,this.totalWidth=this.usableWidth/this.options.num*this.options.tabs.length,this.usableWidth-=2*this.options.arrowMargin,this.tabWidth=this.usableWidth/this.options.num,this.setProps(),this.update(),this.active=this.active||0)}setProps(){this.options.showArrows?(this.options.la.style.display="block",this.options.ra.style.display="block",Array.from(this.options.tabs).forEach(t=>t.style.margin="0 ".concat(this.margin,"px"))):(this.options.la.style.display="none",this.options.ra.style.display="none"),this.options.showUnderline||(this.options.line.style.display="none"),this.options.showMenu?(this.headingDisplay="block",this.options.line.style.width=this.options.menus[0].offsetWidth+"px",this.setMenuProps()):this.headingDisplay="none"}setMenuProps(){let t=0;this.options.menuProps=[],Array.from(this.options.menus).forEach((e,s)=>{this.options.menuProps[s]={width:e.offsetWidth,left:t},t+=e.offsetWidth,e._click=(()=>this.active=s)});const e=this.options.menuProps[this.options.menus.length-1];this.options.menu.style.width=e.left+e.width+5*this.options.menus.length+"px";const s=this.options.menuProps[this.active];this.options.line.style.left=s.left+"px",this.options.line.style.width=s.width+"px"}setScrollEvent(){let t,e,s=this;function i(){e=s.active;const i=s.options.content.scrollLeft/s.tabWidth,a=i%1,n=Math.floor(i);if(s.options.showMenu){const t=s.options.menuProps[n].left*(1-a)+(s.options.menuProps[n+1]||{left:0}).left*a,e=s.options.menuProps[n].width*(1-a)+(s.options.menuProps[n+1]||{width:0}).width*a;s.options.line.style.left=t+"px",s.options.line.style.width=e+"px",s.options.menu.parentElement.scrollLeft=t+(e-s.tabWidth)/2}clearTimeout(t),t=setTimeout(function(){i-e<-s.options.scrollBreakpoint?s.active=n:i-e>+s.options.scrollBreakpoint?s.active=n+1:s.active=e},66)}this.options.content.onscroll=(()=>requestAnimationFrame(i))}setWindowResizeEvent(){window.addEventListener("resize",()=>requestAnimationFrame(this.refresh.bind(this)))}setSlotChangeEvent(){const t=this,e=()=>{t.options.menus=t.$$("slot")[0].assignedNodes(),t.options.tabs=t.$$("slot")[1].assignedNodes(),t.refresh()};this.$$("slot")[0].addEventListener("slotchange",e),this.$$("slot")[1].addEventListener("slotchange",e)}get active(){return this.state?this.state.active:0}set active(t){this.state={active:t}}beforeUpdate(){if(!this.options)return;let t=this.state.active;if(t=this.getTabNumber(t),!isNaN(t)&&t!==this.state.active)return this.active=t;c(this.options.content,"scrollLeft",t*(this.tabWidth+2*this.options.arrowMargin),this.options.animationTime,{type:this.options.animation}),u(this.options.tabs,"active",t),u(this.options.tabs,"prev",this.getTabNumber(t-1)),u(this.options.tabs,"next",this.getTabNumber(t+1)),u(this.options.menus,"active",t),u(this.options.menus,"prev",this.getTabNumber(t-1)),u(this.options.menus,"next",this.getTabNumber(t+1)),this.options.showArrows&&(this.options.la.style.display=this.hasPrev()||this.options.loop?"block":"none",this.options.ra.style.display=this.hasNext()||this.options.loop?"block":"none")}next(){this.active=this.state.active+this.options.step}hasNext(){return this.active!==this.options.tabs.length-this.options.num}prev(){this.active=this.state.active-this.options.step}hasPrev(){return 0!==this.active}getTabNumber(t){const e=this.options.tabs.length,s=this.options.num;return(t=t<0?t+e:t%e)+s-1>=e&&(t=this.options.loop?0:e-s),t}}m.defaultState={active:0},e.register(m);function g(){const t=r(["<style>\n  ",'\n</style>\n<div id="showHide" _click=${this.showHide}></div>\n<sifrr-tabs options=\'{"tabHeight": "calc(100vh - 132px)"}\' data-sifrr-html="true">\n  ${ this.headingHtml() }\n  ${ this.stateHtml() }\n</sifrr-tabs>\n<footer>\n  <input _keyup=${this.addTargetOnEnter} id="addTargetInput" type="text" name="addTargetInput" value="" placeholder="Enter css selector query of target">\n  <button _click=${this.addTarget} class="btn3" type="button" name="addTargetButton">Add Taget</button>\n  <button _click=${this.commitAll} class="btn3" type="button" name="commitAll">Commit All</button>\n  <button _click=${this.resetAllToFirstState} class="btn3" type="button" name="resetAll">Reset All</button>\n  <button _click=${this.saveData} class="btn3" type="button" name="saveData">Save Data</button>\n  <button _click=${this.loadData} class="btn3" type="button" name="loadData">Load Data</button>\n  <button _click=${this.clearAll} class="btn3" type="button" name="clearAll">Remove All</button>\n</footer>'],["<style>\n  ",'\n</style>\n<div id="showHide" _click=\\${this.showHide}></div>\n<sifrr-tabs options=\'{"tabHeight": "calc(100vh - 132px)"}\' data-sifrr-html="true">\n  \\${ this.headingHtml() }\n  \\${ this.stateHtml() }\n</sifrr-tabs>\n<footer>\n  <input _keyup=\\${this.addTargetOnEnter} id="addTargetInput" type="text" name="addTargetInput" value="" placeholder="Enter css selector query of target">\n  <button _click=\\${this.addTarget} class="btn3" type="button" name="addTargetButton">Add Taget</button>\n  <button _click=\\${this.commitAll} class="btn3" type="button" name="commitAll">Commit All</button>\n  <button _click=\\${this.resetAllToFirstState} class="btn3" type="button" name="resetAll">Reset All</button>\n  <button _click=\\${this.saveData} class="btn3" type="button" name="saveData">Save Data</button>\n  <button _click=\\${this.loadData} class="btn3" type="button" name="loadData">Load Data</button>\n  <button _click=\\${this.clearAll} class="btn3" type="button" name="clearAll">Remove All</button>\n</footer>']);return g=function(){return t},t}const f=e.template(g(),':host{position:fixed;right:0;top:0;bottom:0;height:100%;max-width:100%;width:320px;z-index:1000;background-color:rgba(0,0,0,.8);transform:translate3d(100%,0,0);transition:all .2s ease}:host(.show){transform:translateZ(0)}*{box-sizing:border-box}#showHide{position:fixed;left:-30px;top:0;bottom:0;width:30px;height:30px;margin-top:5px;background-color:#00f;z-index:2}.stateContainer{padding-left:10px;margin-left:10px;border-left:1px solid #fff;position:relative}.stateContainer.off{opacity:.5}.stateContainer .dotC{position:absolute;top:0;left:-10px;width:20px;height:100%;cursor:pointer}.stateContainer .dotC .dot{position:absolute;top:50%;left:10px;width:10px;height:10px;transform:translate3d(-50%,-50%,0);background-color:#fff;border-radius:50%}.stateContainer .delete{position:absolute;top:0;right:0;padding:4px;background-color:rgba(0,0,0,.7);color:#fff;cursor:pointer}.state{white-space:pre-wrap;max-height:90px;overflow:hidden;background-color:hsla(0,0%,100%,.97);padding:5px;margin-bottom:5px;position:relative;cursor:pointer}.state:hover:after{content:"\\\\\\/";position:absolute;bottom:0;left:0;width:100%;background-color:rgba(0,0,0,.7);text-align:center;color:#fff}.state.open{max-height:none}.state.open:hover:after{content:"\\/\\\\"}.key{color:red}.string{color:green}.boolean,.null,.number{color:#00f}footer{position:absolute;bottom:0}input{width:calc(100% - 6px)}.btn3,input{margin:3px;padding:3px}.btn3{width:calc(33% - 8px);background:#fff}');e.Event.add("click"),e.Event.add("keyup");class b extends e.Element{static get template(){return f}onConnect(){let t=this;this.storage=new s({name:"sifrr-stater"+window.location.href}),e.Event.addListener("click",".state",function(t,e){e.classList.contains("open")?e.classList.remove("open"):e.classList.add("open")}),e.Event.addListener("click",".dotC",function(e,s,i){t.toState(parseInt(i.dataset.target),parseInt(i.dataset.stateIndex))}),e.Event.addListener("click",".delete",function(e,s){t.deleteState(parseInt(s.dataset.target),parseInt(s.dataset.stateIndex))}),e.Event.addListener("click",".commit",function(e,s){const i=parseInt(s.parentNode.dataset.target);t.commit(i)}),e.Event.addListener("click",".reset",function(e,s){const i=parseInt(s.parentNode.dataset.target);t.resetToFirstState(i)}),e.Event.addListener("click",".remove",function(e,s){const i=parseInt(s.parentNode.dataset.target);t.removeTarget(i)})}showHide(){this.classList.contains("show")?this.classList.remove("show"):this.classList.add("show")}addTargetOnEnter(t){"Enter"===t.key&&this.addTarget()}headingHtml(){return this.state.queries.map(t=>'<li slot="heading">'.concat(t,"</li>")).join("")}stateHtml(){let t=this;return this.state.states.map((e,s)=>'<div data-target="'.concat(s,'" slot="tab">\n      <button class="btn3 commit" type="button" name="commit">Commit</button>\n      <button class="btn3 reset" type="button" name="reset">Reset</button>\n      <button class="btn3 remove" type="button" name="remove">Remove</button>\n      ').concat(e.map((e,i)=>'<div class="stateContainer '.concat(i<=t.state.activeStates[s]?"on":"off",'">\n                           <div class="dotC" data-target="').concat(s,'" data-state-index="').concat(i,'"><div class="dot"></div></div>\n                           <div class="state">').concat(b.prettyJSON(e),'</div>\n                           <div class="delete" data-target="').concat(s,'" data-state-index="').concat(i,'">X</div>\n                           </div>')).join(""),"</div>")).join("")}addTarget(t){"string"!=typeof t&&(t=this.$("#addTargetInput").value);let e=window.document.querySelector(t);if(!e.isSifrr)return window.console.log("Invalid Sifrr Element.",e),!1;if(!e.state)return window.console.log("Sifrr Element has no state.",e),!1;const s=e.onStateChange,i=this;e.onStateChange=function(){i.addState(this,this.state),s.call(this)};let a=this.state.targets.indexOf(e);a>-1||(this.state.targets.push(e),this.state.queries.push(t),a=this.state.targets.indexOf(e),this.state.states[a]=[JSON.parse(JSON.stringify(e.state))],this.state.activeStates[a]=0,this.update())}removeTarget(t){const{index:e}=this.getTarget(t);e>-1&&(this.state.targets.splice(e,1),this.state.queries.splice(e,1),this.state.states.splice(e,1),this.state.activeStates.splice(e,1),this.update())}addState(t,e){const{index:s}=this.getTarget(t);if(s>-1){const t=this.state.activeStates[s],i=JSON.stringify(e);i!==JSON.stringify(this.state.states[s][t])&&(this.state.states[s].splice(t+1,0,JSON.parse(i)),this.state.activeStates[s]=t+1,this.update())}}deleteState(t,e){const{index:s}=this.getTarget(t);this.state.states[s].splice(e,1),e<this.state.activeStates[s]?this.state.activeStates[s]-=1:e==this.state.activeStates[s]&&(this.state.activeStates[s]-=1,this.toState(s,this.state.activeStates[s])),this.update()}commit(t){const{index:e}=this.getTarget(t),s=this.state.states[e][this.state.states[e].length-1];this.state.states[e]=[s],this.state.activeStates[e]=0,this.update()}commitAll(){const t=this;this.state.targets.forEach(e=>t.commit(e)),this.update()}toState(t,e){const{index:s,target:i}=this.getTarget(t);this.state.activeStates[s]=e,i.state=this.state.states[s][e],this.update()}resetToFirstState(t){const{index:e,target:s}=this.getTarget(t);this.toState(s,0,!1),this.state.states[e]=[this.state.states[e][0]],this.update()}resetAllToFirstState(){const t=this;this.state.targets.forEach(e=>t.resetToFirstState(e)),this.update()}clear(t){const{index:e}=this.getTarget(t);this.state.activeStates[e]=-1,this.state.states[e]=[],this.update()}clearAll(){const t=this;this.state.targets.forEach(e=>t.clear(e)),this.update()}saveData(){const t=this;this.storage.clear().then(()=>{t.state.queries.forEach((e,s)=>{const i={active:t.state.activeStates[s],states:t.state.states[s]};t.storage.set(e,i)})})}loadData(){const t=this;this.storage.all().then(e=>{let s=0;for(let i in e)t.addTarget(i),t.clear(s),e[i].states.forEach(e=>t.addState(s,e)),t.toState(s,e[i].active),s++})}getTarget(t){let e;return Number.isInteger(t)?(e=t,t=this.state.targets[e]):e=this.state.targets.indexOf(t),{index:e,target:t}}static prettyJSON(t){return(t=(t=JSON.stringify(t,null,4)).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")).replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+-]?\d+)?)/g,function(t){let e="number";return/:$/.test(t)?'<span class="'+(e="key")+'">'+t+"</span>":(/^"/.test(t)?e="string":/true|false/.test(t)?e="boolean":/null/.test(t)&&(e="null"),'<span class="'+e+'">'+t+"</span>")})}}b.defaultState={targets:[],states:[],queries:[],activeStates:[]},e.register(b);var v="*{box-sizing:border-box}.font{font-family:Roboto,Ariel}.container{width:100%;height:100%;display:flex;flex-wrap:nowrap;background-color:#3a3f5a}#sidemenu{width:15%}#sidemenu,#sidemenu>*{height:100%}sifrr-single-showcase{width:85%;height:100%;display:block}#sidebar{width:30%;height:100%}#sidebar>*{height:33.33%}#main{width:70%;height:100%}.current{background:#5f616d}.flex-column{height:100%;display:flex;flex-wrap:nowrap;flex-direction:column}.box{width:100%;overflow:scroll;border:1px solid #5f616d}#element{padding:20px;height:70%}#code{height:30%}#code sifrr-code-editor{height:calc(100% - 48px)!important}.head{color:#ccc;text-align:center}.small{color:#8f9cb3;font-size:16px;line-height:24px;padding:4px}#error,#status{color:red}sifrr-code-editor{height:calc(100% - 24px)}ul{padding:8px;margin:0}.showcase,.variant{list-style-type:none}.showcase span,.variant span{color:red;float:right}#loader,#saver{color:green;padding:4px;margin:0}.button,button{position:relative;display:inline-block;background:#ccc;border:1px solid grey;color:#3a3f5a;font-size:14px;padding:4px}.button input,button input{position:absolute;width:100%;height:100%;top:0;left:0;opacity:0}";function w(){const t=r(['\n<style media="screen">\n  ','\n</style>\n<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.6/styles/${this.theme}.min.css">\n<pre class=\'hljs\'>\n  <code id="highlight" data-sifrr-html="true">\n    ${this.htmlValue}\n  </code>\n</pre>\n<textarea class=\'hljs\' _input="${this.input}"></textarea>'],['\n<style media="screen">\n  ','\n</style>\n<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.6/styles/\\${this.theme}.min.css">\n<pre class=\'hljs\'>\n  <code id="highlight" data-sifrr-html="true">\n    \\${this.htmlValue}\n  </code>\n</pre>\n<textarea class=\'hljs\' _input="\\${this.input}"></textarea>']);return w=function(){return t},t}const x=e.template(w(),":host{display:block;position:relative}*{box-sizing:border-box}.hljs{width:100%;height:100%;font-family:Consolas,Liberation Mono,Courier,monospace;font-size:14px;line-height:18px;padding:8px;margin:0;position:absolute;white-space:pre-wrap;top:0;left:0}textarea{z-index:2;resize:none;border:none}textarea.loaded{background:transparent!important;text-shadow:0 0 0 transparent;text-fill-color:transparent;-webkit-text-fill-color:transparent}pre{z-index:1}");class y extends e.Element{static get template(){return x}static observedAttrs(){return["value","theme"]}static hljs(){return this._hljs=this._hljs||fetch("https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.6/highlight.min.js").then(t=>t.text()).then(t=>new Function(t)()),this._hljs}onAttributeChange(){this.update()}onConnect(){this.constructor.hljs().then(()=>this.hljsLoaded());const t=this.$("textarea");t.addEventListener("keydown",e=>{let s=e.keyCode||e.which;if(this.$("#highlight").style.height=this.$("textarea").height,9==s){e.preventDefault();const s=t.selectionStart,i=t.selectionEnd,a="  ",n=2;t.value=t.value.substring(0,s)+a+t.value.substring(i),t.selectionStart=t.selectionEnd=s+n}}),t.onscroll=(()=>{this.$("pre.hljs").scrollTop=t.scrollTop})}input(){e.Event.trigger(this,"input"),this.update()}hljsLoaded(){this.$("textarea").classList.add("loaded"),this.update()}get htmlValue(){return window.hljs?window.hljs.highlight(this.lang,this.value).value:this.value.replace(/</g,"&lt;")}get theme(){return this.getAttribute("theme")||"atom-one-dark"}set theme(t){this.setAttribute("theme",t),this.update()}get value(){return this.$("textarea").value}set value(t){this.$("textarea").value=t,this.update()}get lang(){return this.getAttribute("lang")||"html"}}function S(){const t=r(['<style media="screen">\n  ',"\n</style>\n<style>\n${this.state.style}\n</style>\n",""],['<style media="screen">\n  ',"\n</style>\n<style>\n\\${this.state.style}\n</style>\n",""]);return S=function(){return t},t}e.register(y);const $=e.template(S(),v,'<div class="container"> <div class="flex-column" id="sidebar"> <div class="box"> <h3 class="font head">Variants</h3> <input id="variantName" type="text" name="variantName" value="${this.state.variantName}" data-sifrr-bind="variantName"> <button class="font" type="button" name="createVariant" _click="${this.createNewVariant}">Create new variant</button> <style media="screen"> #variant${this.state.variantId} {\n          background: #5f616d;\n        } </style> <div id="showcases"> <div data-sifrr-repeat="${this.state.variants}"> <li class="font variant small" data-variant-id="${this.state.variantId}" id="variant${this.state.variantId}">${this.state.variantName}<span>X</span></li> </div> </div> </div> <div class="box"> <label class="font small" for="style">Element CSS Styles</label> <sifrr-code-editor lang="css" data-sifrr-bind="style" value="${this.state.style}"></sifrr-code-editor> </div> <div class="box"> <label class="font small" for="elState">Element State Function</label> <sifrr-code-editor id="elState" lang="js" data-sifrr-bind="elState" value="${this.state.elState}"></sifrr-code-editor> </div> </div> <div class="flex-column" id="main"> <div class="box" id="element" data-sifrr-html="true"> ${this.state.code} </div> <div class="box" id="code"> <label class="font small" for="elementName">Element Name</label> <input type="text" name="elementName" placeholder="Enter element name here..." _input="${this.updateHtml}" value="${this.state.element}"> <label class="font small" for="customUrl">Custom Url</label> <input type="text" name="customUrl" placeholder="Enter element url here..." value="${this.state.elementUrl}" data-sifrr-bind="elementUrl"> <label class="font small" for="elementName">Is JS File</label> <select id="isjs" name="isjs" value="${this.state.isjs}" data-sifrr-bind="isjs"> <option value="true">true</option> <option value="false">false</option> </select> <span class="font" id="error"></span> <br> <label class="font small" for="htmlcode">HTML Code</label> <sifrr-code-editor lang="html" data-sifrr-bind="code" value="${this.state.code}"></sifrr-code-editor> </div> </div> </div>');e.Event.add("click");class k extends e.Element{static get template(){return $}static observedAttrs(){return["url"]}onConnect(){this.switchVariant(),Sifrr.Dom.Event.addListener("click",".variant",(t,e)=>{e.matches(".variant")&&this.switchVariant(e.dataset.variantId),e.matches(".variant span")&&this.deleteVariant(e.parentNode.dataset.variantId)})}beforeUpdate(){this.saveVariant(),this.state.elemnt&&(this._element===this.state.element&&this._js===this.state.isjs&&this._url===this.state.elementUrl||(e.load(this.state.element,{js:"true"==this.state.isjs,url:this.state.elementUrl?this.state.elementUrl:void 0}).then(()=>this.$("#error").innerText="").catch(t=>this.$("#error").innerText=t.message),this._js=this.state.isjs,this._element=this.state.element,this._url=this.state.elementUrl))}onUpdate(){let t;try{t=new Function(this.$("#elState").value).call(this.element())}catch(t){}t&&this.element()&&this.element().isSifrr&&this.element().state!==t&&(this.element().state=t)}onAttributeChange(t,e,s){"url"===t&&(this.url=s)}createNewVariant(){const t=Math.max(...this.state.variants.map(t=>t.variantId),0)+1,e=this.state.variants.findIndex(t=>t.variantId==this.state.variantId)+1||1;this.state.variants.splice(e,0,Object.assign({},{variantId:t,variantName:this.state.variantName,style:this.state.style,code:this.state.code,elState:this.state.elState})),this.switchVariant(t)}deleteVariant(t){this.state.variants.forEach((e,s)=>{e.variantId==t&&(this.state.variants.splice(s,1),this.state.variantId==t?this.switchVariant((this.state.variants[s]||{}).variantId):this.update())})}saveVariant(){this.state.variants||(this.state.variants=[]);const t=this.state.variantId;this.state.variants.forEach(e=>{e.variantId==t&&Object.assign(e,{variantName:this.state.variantName,style:this.state.style,code:this.state.code,elState:this.state.elState})})}switchVariant(t){Object.assign(this.state,this.variant(t)),this.update()}updateHtml(t,e){const s="<".concat(e.value,"></").concat(e.value,">");this.state={code:s,element:e.value}}element(){return this.$("#element").firstElementChild}variant(t){return this.state.variants.find(e=>e.variantId==t)||this.state.variants[this.state.variants.length-1]}}function E(){const t=r(['<style media="screen">\n  ','\n</style>\n<div class="container">\n  <div class="flex-column" id="sidemenu">\n    <div class="box">\n      <h1 class="font head">Sifrr Showcase</h1>\n      <p class="font" id="loader"></p>\n      <input id="url" type="text" placeholder="Enter url here..." name="url" />\n      <button type="button" name="loadUrl" _click=${this.loadUrl}>Load from url</button>\n      <p class="font" id="status"></p>\n      <span class="button font">\n        Upload File\n        <input type="file" name="file" accept="application/json" _input="${this.loadFile}" />\n      </span>\n      <button class="font" type="button" name="saveFile" _click="${this.saveFile}">Save to File</button>\n      <h3 class="font head">Showcases</h3>\n      <input id="showcaseName" type="text" name="showcase" _input=${this.changeName} value=${this.state.showcases[this.state.current].name}>\n      <button class="font" type="button" name="createVariant" _click="${this.createShowcase}">Create new showcase</button>\n      <div id="showcases" data-sifrr-repeat="${this.state.showcases}">\n        <li class="font showcase small" data-showcase-id="${this.state.key}" draggable="true">${this.state.name}<span>X</span></li>\n      </div>\n    </div>\n  </div>\n  <sifrr-single-showcase _update=${this.saveShowcase}></sifrr-single-showcase>\n</div>'],['<style media="screen">\n  ','\n</style>\n<div class="container">\n  <div class="flex-column" id="sidemenu">\n    <div class="box">\n      <h1 class="font head">Sifrr Showcase</h1>\n      <p class="font" id="loader"></p>\n      <input id="url" type="text" placeholder="Enter url here..." name="url" />\n      <button type="button" name="loadUrl" _click=\\${this.loadUrl}>Load from url</button>\n      <p class="font" id="status"></p>\n      <span class="button font">\n        Upload File\n        <input type="file" name="file" accept="application/json" _input="\\${this.loadFile}" />\n      </span>\n      <button class="font" type="button" name="saveFile" _click="\\${this.saveFile}">Save to File</button>\n      <h3 class="font head">Showcases</h3>\n      <input id="showcaseName" type="text" name="showcase" _input=\\${this.changeName} value=\\${this.state.showcases[this.state.current].name}>\n      <button class="font" type="button" name="createVariant" _click="\\${this.createShowcase}">Create new showcase</button>\n      <div id="showcases" data-sifrr-repeat="\\${this.state.showcases}">\n        <li class="font showcase small" data-showcase-id="\\${this.state.key}" draggable="true">\\${this.state.name}<span>X</span></li>\n      </div>\n    </div>\n  </div>\n  <sifrr-single-showcase _update=\\${this.saveShowcase}></sifrr-single-showcase>\n</div>']);return E=function(){return t},t}k.defaultState={id:1,name:"Placeholder Element",element:"sifrr-placeholder",elementUrl:"",isjs:!0,variantName:"",variants:[{variantId:1,variantName:"variant",style:"#element > * {\n  display: block;\n  background-color: white;\n  margin: auto;\n}",code:"<sifrr-placeholder>\n</sifrr-placeholder>",elState:"return {\n\n}"}]},e.register(k);const _=e.template(E(),v),C=new s({name:"showcases",version:"1.0"});class A extends e.Element{static get template(){return _}static observedAttrs(){return["url"]}onAttributeChange(t,e,s){"url"===t&&(this.url=s)}onConnect(){if(Sifrr.Dom.Event.addListener("click",".showcase",(t,e)=>{e.matches(".showcase")&&this.switchShowcase(this.getChildIndex(e)),e.matches(".showcase span")&&this.deleteShowcase(this.getChildIndex(e.parentNode))}),this.loadUrl(),this.switchShowcase(0),window.Sortable){const t=this;new window.Sortable(this.$("#showcases"),{draggable:"li",onEnd:e=>{const s=e.oldIndex,i=e.newIndex,a=t.state.showcases[s];t.state.showcases[s]=t.state.showcases[i],t.state.showcases[i]=a;const n=t.$("#showcases .current");t.switchShowcase(t.getChildIndex(n))}})}}getChildIndex(t){let e=0;for(;null!=(t=t.previousElementSibling);)e++;return e}deleteShowcase(t){this.state.showcases.splice(t,1),t==this.state.current?this.switchShowcase(this.state.current):this.switchShowcase(this.state.current-1)}createShowcase(){this.state.showcases.splice(this.state.current+1,0,{name:this.$("#showcaseName").value,variants:[],element:this.$("#showcaseName").value}),this.switchShowcase(this.state.current+1)}switchShowcase(t){this.current=t,this.$("#showcases").children[this.state.current].classList.remove("current"),this.state.showcases[t]||(t=this.state.showcases.length-1),this.state={current:t},this.el._state=this.state.showcases[t],this.el.update(),this.$("#showcases").children[t].id="showcase"+t,this.$("#showcases").children[t].classList.add("current")}onStateChange(){this.state.current!==this.current&&this.switchShowcase(this.state.current)}saveShowcase(){this.state.showcases[this.state.current]=Object.assign(this.state.showcases[this.state.current]||{},JSON.parse(JSON.stringify(this.el.state))),this._loaded&&(this.$("#status").textContent="saving locally!",this._timeout&&clearTimeout(this._timeout),this._timeout=setTimeout(()=>{this._timeout=null,C.set({showcases:this.state.showcases,current:this.state.current}).then(()=>{this.$("#status").textContent="saved locally!"})},500))}changeName(){this.state.showcases[this.state.current].name=this.$("#showcaseName").value,this.update()}get el(){return this.$("sifrr-single-showcase")}set url(t){this._url=t,this.getAttribute("url")!==t&&this.setAttribute("url",t),this.$("#url").value!==t&&(this.$("#url").value=t),this.loadUrl()}get url(){return this._url}loadUrl(){this._url=this.$("#url").value,window.fetch(this._url).then(t=>t.json()).then(t=>{this.state.showcases=t.showcases,this.switchShowcase(t.current),this.$("#status").textContent="loaded from url!"}).catch(t=>{this.$("#status").textContent=t.message,C.all().then(t=>{this.$("#status").textContent="failed to load from url, loaded from storage!",this._loaded=!0,Array.isArray(t.showcases)&&(this.state.showcases=t.showcases,this.switchShowcase(t.current))})})}saveFile(){const t=new Blob([JSON.stringify(this.state,null,2)],{type:"application/json"}),e=document.createElement("a");e.href=URL.createObjectURL(t),e.download="showcases",e.click()}loadFile(t,e){const s=e.files[0],i=new FileReader;i.onload=(()=>{const t=JSON.parse(i.result);this.state=t,this.switchShowcase(t.current),this.$("#status").textContent="loaded from file!"}),i.readAsText(s)}}A.defaultState={current:0,showcases:[{name:"new"}]},e.register(A);const N='<style media="screen"> * {\n    box-sizing: border-box;\n  }\n\n  .circle {\n    position: relative;\n    border: 2px solid #666;\n    padding: 0;\n    margin: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n  }\n\n  .left-half, .bar, .f50-bar {\n    position: absolute;\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    top: 0;\n    left: 0;\n  }\n\n  .left-half {\n    width: calc(100% + 4px);\n    height: calc(100% + 4px);\n    margin: -2px;\n    clip-path: polygon(50% 0, 100% 0%, 100% 100%, 50% 100%);\n  }\n\n  .circle.over50 .left-half {\n    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);\n  }\n\n  .bar {\n    clip-path: polygon(0 0, 50% 0, 50% 100%, 0 100%);\n    border: 2px solid #ffffff;\n  }\n\n  .circle.over50 .f50-bar {\n    clip-path: polygon(50% 0, 100% 0%, 100% 100%, 50% 100%);\n    border: 2px solid #ffffff;\n    box-sizing: border-box;\n  }\n\n  .circle:not(.over50) .f50-bar {\n    display: none\n  }\n\n  .circle .bar {\n    transform: rotate(${this.state.progress * 360 / 100}deg)\n  } </style> <div class="circle ${this.state.progress > 50 ? \'over50\' : \'\'}"> <div class="left-half"> <div class="f50-bar"></div> <div class="bar"></div> </div> </div> ';class T extends Sifrr.Dom.Element{static get template(){return e.template(N)}static observedAttrs(){return["progress"]}get progress(){return this._state.progress}set progress(t){return this.state={progress:t}}onAttributeChange(t,e,s){"progress"===t&&(this.state={[t]:s})}}T.defaultState={progress:0},e.register(T),t.SifrrCodeEditor=y,t.SifrrLazyPicture=o,t.SifrrLazzyImg=a,t.SifrrProgressRound=T,t.SifrrShowcase=A,t.SifrrStater=b,t.SifrrTabs=m,t.animate=c,Object.defineProperty(t,"__esModule",{value:!0})});
/*! (c) @aadityataparia */
