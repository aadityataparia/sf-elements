/*! SifrrElements v0.0.4 - sifrr project | MIT licensed | https://github.com/sifrr/sifrr */
!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@sifrr/dom")):"function"==typeof define&&define.amd?define(["exports","@sifrr/dom"],r):r((e=e||self).SifrrElements={},e.Sifrr.Dom)}(this,function(e,r){"use strict";function t(e,r){e.dataset[r]&&(e.setAttribute(r,e.dataset[r]),e.removeAttribute("data-".concat(r)))}r=r&&r.hasOwnProperty("default")?r.default:r;class s extends(Sifrr.Dom.Element.extends(HTMLPictureElement)){static useShadowRoot(){return!0}static get observer(){return this._observer=this._observer||new IntersectionObserver(this.onVisible,{rootMargin:this.rootMargin}),this._observer}static onVisible(e){e.forEach(e=>{e.isIntersecting&&(s.observer.unobserve(e.target),function(e){!e.sifrrLazyLoaded&&(e.sifrrLazyLoaded=!0,e.$$("source",!1).forEach(e=>{t(e,"srcset")}),t(e.$("img",!1),"src"))}(e.target))})}onConnect(){this.sifrrLazyLoaded=!1,this.constructor.observer.observe(this)}onDisconnect(){this.constructor.observer.unobserve(this)}}s.rootMargin="0px 0px 200px 0px",window&&r.register(s,{extends:"picture"});const i=/* */Object.freeze({});const o=(n=/* */Object.freeze({}))&&n.default||n;var n,a={SifrrLazyPicture:s,SifrrStater:i,SifrrTabs:o},f=a.SifrrLazyPicture,c=a.SifrrStater,u=a.SifrrTabs;e.SifrrLazyPicture=f,e.SifrrStater=c,e.SifrrTabs=u,e.default=a,Object.defineProperty(e,"__esModule",{value:!0})});
/*! (c) @aadityataparia */
