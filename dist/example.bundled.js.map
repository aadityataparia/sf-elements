{"version":3,"file":"example.bundled.js","sources":["../node_modules/@sifrr/dom/dist/sifrr.dom.js","../node_modules/@sifrr/storage/dist/sifrr.storage.js","example.js"],"sourcesContent":["/*! Sifrr.Dom v0.0.1-alpha - sifrr project */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Sifrr = global.Sifrr || {}, global.Sifrr.Dom = factory());\n}(this, (function () { 'use strict';\n\n  const URLExt = {\n    absolute: (base, relative) => {\n      let stack = base.split('/'),\n          parts = relative.split('/');\n      stack.pop();\n      for (let i = 0; i < parts.length; i++) {\n        if (parts[i] == '.') continue;\n        if (parts[i] == '..') stack.pop();else stack.push(parts[i]);\n      }\n      return stack.join('/');\n    },\n    getRoutes: url => {\n      if (url[0] != '/') {\n        url = '/' + url;\n      }\n      let qIndex = url.indexOf('?');\n      if (qIndex != -1) {\n        url = url.substring(0, qIndex);\n      }\n      return url.split('/');\n    }\n  };\n  var url = URLExt;\n\n  const Json = {\n    parse: data => {\n      let ans = {};\n      if (typeof data == 'string') {\n        try {\n          ans = JSON.parse(data);\n        } catch (e) {\n          return data;\n        }\n        return Json.parse(ans);\n      } else if (Array.isArray(data)) {\n        ans = [];\n        data.forEach((v, i) => {\n          ans[i] = Json.parse(v);\n        });\n      } else if (typeof data == 'object') {\n        for (const k in data) {\n          ans[k] = Json.parse(data[k]);\n        }\n      } else {\n        return data;\n      }\n      return ans;\n    },\n    stringify: data => {\n      if (typeof data == 'string') {\n        return data;\n      } else {\n        return JSON.stringify(data);\n      }\n    },\n    shallowEqual: (a, b) => {\n      for (let key in a) {\n        if (!(key in b) || a[key] != b[key]) {\n          return false;\n        }\n      }\n      for (let key in b) {\n        if (!(key in a) || a[key] != b[key]) {\n          return false;\n        }\n      }\n      return true;\n    },\n    deepClone: json => {\n      if (Array.isArray(json)) return json.map(i => Json.deepClone(i));\n      if (typeof json !== 'object' || json === null) return json;\n      let clone = {};\n      for (let key in json) {\n        clone[key] = Json.deepClone(json[key]);\n      }\n      return clone;\n    }\n  };\n  var json = Json;\n\n  function updateAttribute(element, name, newValue) {\n    if (name === 'class') {\n      const fromValue = element.className;\n      if (fromValue != newValue) {\n        if (newValue == 'null' || newValue == 'undefined' || newValue == 'false' || !newValue) {\n          element.className = '';\n        } else {\n          element.className = newValue;\n        }\n      }\n    } else {\n      const fromValue = element.getAttribute(name);\n      if (fromValue != newValue) {\n        if (newValue == 'null' || newValue == 'undefined' || newValue == 'false' || !newValue) {\n          if (fromValue) element.removeAttribute(name);\n        } else {\n          element.setAttribute(name, newValue);\n        }\n      }\n      if ((element.nodeName == 'SELECT' || element.nodeName == 'INPUT') && name == 'value') element.value = newValue;\n    }\n  }\n  var update = {\n    updateAttribute: updateAttribute\n  };\n\n  var constants = {\n    SIFRR_NODE: window.document.createElement('sifrr-node'),\n    TEMPLATE: window.document.createElement('template'),\n    TEXT_NODE: 3,\n    COMMENT_NODE: 8,\n    ELEMENT_NODE: 1\n  };\n\n  const {\n    updateAttribute: updateAttribute$1\n  } = update;\n  const {\n    shallowEqual\n  } = json;\n  const {\n    TEXT_NODE,\n    COMMENT_NODE\n  } = constants;\n  function makeChildrenEqual(parent, newChildren) {\n    const oldL = parent.childNodes.length,\n          newL = newChildren.length;\n    if (oldL > newL) {\n      let i = oldL;\n      while (i > newL) {\n        parent.removeChild(parent.lastChild);\n        i--;\n      }\n    } else if (oldL < newL) {\n      let i = oldL;\n      while (i < newL) {\n        parent.appendChild(newChildren[i]);\n        i++;\n      }\n    }\n    const l = Math.min(newL, oldL);\n    for (let i = 0, item, head = parent.firstChild; i < l; i++) {\n      item = newChildren[i];\n      head = makeEqual(head, item).nextSibling;\n    }\n  }\n  function makeEqual(oldNode, newNode) {\n    if (newNode === null) return oldNode;\n    if (newNode.type === 'stateChange') {\n      if (!shallowEqual(oldNode.state, newNode.state)) {\n        oldNode.state = newNode.state;\n      }\n      return oldNode;\n    }\n    if (oldNode.nodeName !== newNode.nodeName) {\n      oldNode.replaceWith(newNode);\n      return newNode;\n    }\n    if (oldNode.nodeType === TEXT_NODE || oldNode.nodeType === COMMENT_NODE) {\n      if (oldNode.data !== newNode.data) oldNode.data = newNode.data;\n      return oldNode;\n    }\n    if (newNode.state) oldNode.state = newNode.state;\n    let oldAttrs = oldNode.attributes,\n        newAttrs = newNode.attributes,\n        attr;\n    for (let i = newAttrs.length - 1; i >= 0; --i) {\n      updateAttribute$1(oldNode, newAttrs[i].name, newAttrs[i].value);\n    }\n    for (let j = oldAttrs.length - 1; j >= 0; --j) {\n      attr = oldAttrs[j];\n      if (!newNode.hasAttribute(attr.name) && attr.specified !== false) oldNode.removeAttribute(attr.name);\n    }\n    makeChildrenEqual(oldNode, newNode.childNodes);\n    return oldNode;\n  }\n  var makeequal = {\n    makeEqual: makeEqual,\n    makeChildrenEqual: makeChildrenEqual\n  };\n\n  const TREE_WALKER = window.document.createTreeWalker(document, NodeFilter.SHOW_ALL, null, false);\n  TREE_WALKER.roll = function (n, filter = false) {\n    let node = this.currentNode;\n    while (--n) {\n      if (filter && filter(node)) {\n        node = TREE_WALKER.nextSibling() || TREE_WALKER.parentNode();\n      } else node = TREE_WALKER.nextNode();\n    }\n    return node;\n  };\n  function collect(element, stateMap = element.stateMap, filter) {\n    const refs = [];\n    TREE_WALKER.currentNode = element;\n    stateMap.map(x => refs.push(TREE_WALKER.roll(x.idx, filter)));\n    return refs;\n  }\n  class Ref {\n    constructor(idx, ref) {\n      this.idx = idx;\n      this.ref = ref;\n    }\n  }\n  function create(node, fxn, filter = false) {\n    let indices = [],\n        ref,\n        idx = 0;\n    TREE_WALKER.currentNode = node;\n    while (node) {\n      if (ref = fxn(node)) {\n        indices.push(new Ref(idx + 1, ref));\n        idx = 1;\n      } else {\n        idx++;\n      }\n      if (filter && filter(node)) {\n        node = TREE_WALKER.nextSibling() || TREE_WALKER.parentNode();\n      } else node = TREE_WALKER.nextNode();\n    }\n    return indices;\n  }\n  var ref = {\n    walker: TREE_WALKER,\n    collect: collect,\n    create: create,\n    klass: Ref\n  };\n\n  const {\n    makeChildrenEqual: makeChildrenEqual$1\n  } = makeequal;\n  const {\n    updateAttribute: updateAttribute$2\n  } = update;\n  const {\n    collect: collect$1,\n    create: create$1\n  } = ref;\n  const {\n    TEMPLATE,\n    TEXT_NODE: TEXT_NODE$1,\n    COMMENT_NODE: COMMENT_NODE$1,\n    ELEMENT_NODE\n  } = constants;\n  function isHtml(el) {\n    return el.dataset && el.dataset.sifrrHtml == 'true' || el.contentEditable == 'true' || el.nodeName == 'TEXTAREA' || el.nodeName == 'STYLE' || el.dataset && el.dataset.sifrrRepeat;\n  }\n  function creator(el) {\n    if (el.nodeType === TEXT_NODE$1 || el.nodeType === COMMENT_NODE$1) {\n      const x = el.nodeValue;\n      if (x.indexOf('${') > -1) return {\n        html: false,\n        text: x.trim()\n      };\n    } else if (el.nodeType === ELEMENT_NODE) {\n      const sm = {};\n      if (isHtml(el)) {\n        const innerHTML = el.innerHTML;\n        if (innerHTML.indexOf('${') >= 0) {\n          sm.html = true;\n          sm.text = innerHTML.replace(/<!--(.*)-->/g, '$1');\n        }\n      }\n      const attrs = el.attributes || [],\n            l = attrs.length;\n      const attrStateMap = {\n        events: {}\n      };\n      for (let i = 0; i < l; i++) {\n        const attribute = attrs[i];\n        if (attribute.name[0] === '$') {\n          attrStateMap.events[attribute.name] = attribute.value;\n        } else if (attribute.value.indexOf('${') >= 0) {\n          attrStateMap[attribute.name] = attribute.value;\n        }\n      }\n      if (Object.keys(attrStateMap).length > 0) sm.attributes = attrStateMap;\n      if (Object.keys(sm).length > 0) return sm;\n    }\n    return 0;\n  }\n  const Parser = {\n    collectRefs: (el, stateMap) => collect$1(el, stateMap, isHtml),\n    createStateMap: element => create$1(element, creator, isHtml),\n    update: element => {\n      if (!element._refs) {\n        return false;\n      }\n      const l = element._refs.length;\n      for (let i = 0; i < l; i++) {\n        const data = element.constructor.stateMap[i].ref;\n        const dom = element._refs[i];\n        if (data.attributes) {\n          for (let key in data.attributes) {\n            if (key === 'events') {\n              for (let event in data.attributes.events) {\n                dom[event] = Parser.evaluateString(data.attributes.events[event], element);\n              }\n            } else {\n              const val = Parser.evaluateString(data.attributes[key], element);\n              updateAttribute$2(dom, key, val);\n            }\n          }\n        }\n        if (data.html === undefined) continue;\n        const newValue = Parser.evaluateString(data.text, element);\n        if (!newValue) {\n          dom.textContent = '';\n          continue;\n        }\n        if (data.html) {\n          let children;\n          if (Array.isArray(newValue)) {\n            children = newValue;\n          } else if (newValue.nodeType) {\n            children = [newValue];\n          } else {\n            TEMPLATE.innerHTML = newValue.toString()\n            .replace(/(&lt;)(((?!&gt;).)*)(&gt;)(((?!&lt;).)*)(&lt;)\\/(((?!&gt;).)*)(&gt;)/g, '<$2>$5</$8>')\n            .replace(/(&lt;)(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)(((?!&gt;).)*)(&gt;)/g, '<$2$3>');\n            children = Array.prototype.slice.call(TEMPLATE.content.childNodes);\n          }\n          if (children.length < 1) dom.textContent = '';else makeChildrenEqual$1(dom, children);\n        } else {\n          if (dom.nodeValue != newValue) {\n            dom.nodeValue = newValue;\n          }\n        }\n      }\n    },\n    twoWayBind: e => {\n      const target = e.path ? e.path[0] : e.target;\n      if (!target.dataset.sifrrBind) return;\n      const value = target.value === undefined ? target.innerHTML : target.value;\n      let state = {};\n      state[target.dataset.sifrrBind] = value;\n      target.getRootNode().host.state = state;\n    },\n    evaluateString: (string, element) => {\n      if (string.indexOf('${') < 0) return string;\n      string = string.trim();\n      if (string.match(/^\\${([^{}$]|{([^{}$])*})*}$/)) return replacer(string);\n      return replacer('`' + string + '`');\n      function replacer(match) {\n        if (match[0] == '$') match = match.slice(2, -1);\n        let f;\n        if (match.indexOf('return ') >= 0) {\n          f = new Function(match).bind(element);\n        } else {\n          f = new Function('return ' + match).bind(element);\n        }\n        return f();\n      }\n    }\n  };\n  var parser = Parser;\n\n  var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  var sifrr_fetch = createCommonjsModule(function (module, exports) {\n    /*! Sifrr.Fetch v0.0.1-alpha - sifrr project */\n    (function (global, factory) {\n      module.exports = factory();\n    })(commonjsGlobal, function () {\n      class Request {\n        constructor(type, url, options) {\n          this.type = type;\n          this._options = options;\n          this._url = url;\n        }\n        get response() {\n          return window.fetch(this.url, this.options).then(resp => {\n            let contentType = resp.headers.get('content-type');\n            if (resp.ok) {\n              if (contentType && contentType.includes('application/json')) {\n                resp = resp.json();\n              }\n              return resp;\n            } else {\n              let error = Error(resp.statusText);\n              error.response = resp;\n              throw error;\n            }\n          });\n        }\n        get url() {\n          const params = this._options.params;\n          if (params && Object.keys(params).length > 0) {\n            return this._url + '?' + Object.keys(params).map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k])).join('&');\n          } else {\n            return this._url;\n          }\n        }\n        get options() {\n          const options = Object.assign({\n            method: this.type,\n            mode: 'cors',\n            redirect: 'follow'\n          }, this._options);\n          options.headers = Object.assign({\n            'accept': 'application/json'\n          }, this._options.headers || {});\n          return options;\n        }\n      }\n      var request = Request;\n      class SifrrFetch {\n        static get(url, options = {}) {\n          return new request('GET', url, options).response;\n        }\n        static post(url, options = {}) {\n          return new request('POST', url, options).response;\n        }\n        static put(url, options = {}) {\n          return new request('PUT', url, options).response;\n        }\n        static delete(url, options = {}) {\n          return new request('DELETE', url, options).response;\n        }\n        static file(url, options = {}) {\n          options.headers = options.headers || {};\n          options.headers.accept = options.headers.accept || '*/*';\n          return new request('GET', url, options).response;\n        }\n      }\n      var sifrr_fetch = SifrrFetch;\n      return sifrr_fetch;\n    });\n    /*! (c) @aadityataparia */\n  });\n\n  const {\n    TEMPLATE: TEMPLATE$1\n  } = constants;\n  class Loader {\n    constructor(elemName, config = {}) {\n      if (this.constructor.all[elemName]) return this.constructor.all[elemName].instance;\n      this.elementName = elemName;\n      this.config = config;\n      this.constructor.urls[elemName] = this.htmlUrl;\n    }\n    get html() {\n      const me = this;\n      if (this.constructor.all[this.elementName]) return this.constructor.all[this.elementName].html;\n      const html = sifrr_fetch.file(this.htmlUrl).then(resp => resp.text()).then(file => {\n        TEMPLATE$1.innerHTML = file;\n        return TEMPLATE$1.content;\n      }).then(html => {\n        Loader._all[me.elementName].template = html.querySelector('template');\n        return html;\n      });\n      Loader.add(me.elementName, {\n        instance: me,\n        html: html\n      });\n      return html;\n    }\n    get htmlUrl() {\n      return this.config.url || `${this.config.baseUrl || '/'}elements/${this.elementName.split('-').join('/')}.html`;\n    }\n    executeScripts() {\n      return this.html.then(file => {\n        file.querySelectorAll('script').forEach(script => {\n          const fxn = new Function(script.text).bind(window);\n          fxn();\n        });\n      });\n    }\n    static add(elemName, instance) {\n      Loader._all[elemName] = instance;\n    }\n    static get all() {\n      return Loader._all;\n    }\n  }\n  Loader._all = {};\n  Loader.urls = {};\n  var loader = Loader;\n\n  const {\n    collect: collect$2,\n    create: create$2\n  } = ref;\n  const {\n    TEMPLATE: TEMPLATE$2\n  } = constants;\n  function creator$1(node) {\n    if (node.nodeType !== 3) {\n      if (node.attributes !== undefined) {\n        const attrs = Array.from(node.attributes),\n              l = attrs.length;\n        const ret = [];\n        for (let i = 0; i < l; i++) {\n          const avalue = attrs[i].value;\n          if (avalue[0] === '$') {\n            ret.push({\n              name: attrs[i].name,\n              text: avalue.slice(2, -1)\n            });\n          }\n        }\n        if (ret.length > 0) return ret;\n      }\n      return 0;\n    } else {\n      let nodeData = node.nodeValue;\n      if (nodeData[0] === '$') {\n        node.nodeValue = '';\n        return nodeData.slice(2, -1);\n      }\n      return 0;\n    }\n  }\n  function updateState(simpleEl) {\n    const doms = simpleEl._refs,\n          refs = simpleEl.stateMap,\n          l = refs.length;\n    const newState = simpleEl.state,\n          oldState = simpleEl._oldState;\n    for (let i = 0; i < l; i++) {\n      const data = refs[i].ref,\n            dom = doms[i];\n      if (Array.isArray(data)) {\n        const l = data.length;\n        for (let i = 0; i < l; i++) {\n          const attr = data[i];\n          if (oldState[attr.text] !== newState[attr.text]) {\n            if (attr.name === 'class') dom.className = newState[attr.text] || '';else dom.setAttribute(attr.name, newState[attr.text]);\n          }\n        }\n      } else {\n        if (oldState[data] != newState[data]) dom.nodeValue = newState[data];\n      }\n    }\n  }\n  function SimpleElement(content, defaultState) {\n    if (typeof content === 'string') {\n      TEMPLATE$2.innerHTML = content;\n      content = TEMPLATE$2.content.firstElementChild || TEMPLATE$2.content.firstChild;\n    }\n    if (content.nodeName.indexOf('-') !== -1 || content.getAttribute('is') && content.getAttribute('is').indexOf('-') >= 0 || content.isSifrr && content.isSifrr()) return content;\n    content.stateMap = create$2(content, creator$1);\n    content._refs = collect$2(content, content.stateMap);\n    Object.defineProperty(content, 'state', {\n      get: () => content._state,\n      set: v => {\n        content._oldState = Object.assign({}, content._state);\n        content._state = Object.assign(content._state || {}, v);\n        updateState(content);\n      }\n    });\n    if (defaultState) content.state = defaultState;\n    content.sifrrClone = function (deep) {\n      const clone = content.cloneNode(deep);\n      clone.stateMap = content.stateMap;\n      clone._refs = collect$2(clone, content.stateMap);\n      Object.defineProperty(clone, 'state', {\n        get: () => clone._state,\n        set: v => {\n          clone._oldState = Object.assign({}, clone._state);\n          clone._state = Object.assign(clone._state || {}, v);\n          updateState(clone);\n        }\n      });\n      if (content.state) clone.state = content.state;\n      return clone;\n    };\n    return content;\n  }\n  var simpleelement = SimpleElement;\n\n  function elementClassFactory(baseClass) {\n    return class extends baseClass {\n      static extends(htmlElementClass) {\n        return elementClassFactory(htmlElementClass);\n      }\n      static get observedAttributes() {\n        return ['data-sifrr-state'].concat(this.observedAttrs());\n      }\n      static observedAttrs() {\n        return [];\n      }\n      static get template() {\n        return loader.all[this.elementName].template;\n      }\n      static get stateMap() {\n        this._stateMap = this._stateMap || parser.createStateMap(this.template.content);\n        return this._stateMap;\n      }\n      static get elementName() {\n        return this.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n      }\n      static onStateChange() {}\n      static useSR() {\n        return this.template.getAttribute('use-shadow-root') !== 'false' && this.useShadowRoot;\n      }\n      constructor() {\n        super();\n        if (this.constructor.defaultState || this.state) this._state = Object.assign({}, this.constructor.defaultState, this.state);\n        const content = this.constructor.template.content.cloneNode(true);\n        if (this.constructor.useSR()) {\n          this._refs = parser.collectRefs(content, this.constructor.stateMap);\n          this.attachShadow({\n            mode: 'open'\n          });\n          this.shadowRoot.appendChild(content);\n          this.shadowRoot.addEventListener('change', parser.twoWayBind);\n        } else {\n          this.__content = content;\n        }\n      }\n      connectedCallback() {\n        if (this.__content) {\n          this._refs = parser.collectRefs(this.__content, this.constructor.stateMap);\n          this.appendChild(this.__content);\n        }\n        if (!this.hasAttribute('data-sifrr-state') && this._state) this.update();\n        this.onConnect();\n      }\n      onConnect() {}\n      disconnectedCallback() {\n        if (this.useShadowRoot) this.shadowRoot.removeEventListener('change', parser.twoWayBind);\n        this.onDisconnect();\n      }\n      onDisconnect() {}\n      attributeChangedCallback(attrName, oldVal, newVal) {\n        if (attrName === 'data-sifrr-state') {\n          this.state = json.parse(newVal);\n        }\n        this.onAttributeChange(attrName, oldVal, newVal);\n      }\n      onAttributeChange() {}\n      get state() {\n        return this._state;\n      }\n      set state(v) {\n        this._state = this._state || {};\n        Object.assign(this._state, v);\n        this.update();\n      }\n      update() {\n        parser.update(this);\n        this.onStateChange();\n        this.constructor.onStateChange(this);\n      }\n      onStateChange() {}\n      isSifrr(name = null) {\n        if (name) return name === this.constructor.elementName;else return true;\n      }\n      sifrrClone(deep) {\n        const clone = this.cloneNode(deep);\n        return clone;\n      }\n      clearState() {\n        this._state = {};\n        this.update();\n      }\n      $(args, sr = true) {\n        if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelector(args);else return this.querySelector(args);\n      }\n      $$(args, sr = true) {\n        if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelectorAll(args);else return this.querySelectorAll(args);\n      }\n      static addArrayToDom(key, template) {\n        this._arrayToDom = this._arrayToDom || {};\n        this._arrayToDom[this.elementName] = this._arrayToDom[this.elementName] || {};\n        this._arrayToDom[this.elementName][key] = simpleelement(template);\n      }\n      arrayToDom(key, newState = this.state[key]) {\n        this._domL = this._domL || {};\n        const oldL = this._domL[key] || 0;\n        const domArray = [];\n        const newL = newState.length;\n        let temp;\n        try {\n          temp = this.constructor._arrayToDom[this.constructor.elementName][key];\n        } catch (e) {\n          return window.console.log(`[error]: No arrayToDom data of '${key}' added in ${this.constructor.elementName}.`);\n        }\n        for (let i = 0; i < newL; i++) {\n          if (i < oldL) {\n            domArray.push({\n              type: 'stateChange',\n              state: newState[i]\n            });\n          } else {\n            const el = temp.sifrrClone(true);\n            el.state = newState[i];\n            domArray.push(el);\n          }\n        }\n        this._domL[key] = newL;\n        return domArray;\n      }\n    };\n  }\n  var element = elementClassFactory(window.HTMLElement);\n\n  const SYNTHETIC_EVENTS = {};\n  const nativeToSyntheticEvent = (e, name) => {\n    return Promise.resolve((() => {\n      let dom = e.path ? e.path[0] : e.target;\n      while (dom) {\n        const eventHandler = dom[`$${name}`];\n        if (eventHandler) {\n          eventHandler(e, dom);\n        }\n        cssMatchEvent(e, name, dom);\n        dom = dom.parentNode || dom.host;\n      }\n    })());\n  };\n  const cssMatchEvent = (e, name, dom) => {\n    function callEach(fxns) {\n      fxns.forEach(fxn => fxn(e, dom));\n    }\n    for (let css in SYNTHETIC_EVENTS[name]) {\n      if (typeof dom.matches === 'function' && dom.matches(css) || dom.nodeType === 9 && css === 'document') callEach(SYNTHETIC_EVENTS[name][css]);\n    }\n  };\n  const Event = {\n    add: name => {\n      if (SYNTHETIC_EVENTS[name]) return false;\n      window.document.addEventListener(name, event => nativeToSyntheticEvent(event, name), {\n        capture: true,\n        passive: true\n      });\n      SYNTHETIC_EVENTS[name] = {};\n      return true;\n    },\n    addListener: (name, css, fxn) => {\n      const fxns = SYNTHETIC_EVENTS[name][css] || [];\n      if (fxns.indexOf(fxn) < 0) fxns.push(fxn);\n      SYNTHETIC_EVENTS[name][css] = fxns;\n      return true;\n    },\n    removeListener: (name, css, fxn) => {\n      const fxns = SYNTHETIC_EVENTS[name][css] || [],\n            i = fxns.indexOf(fxn);\n      if (i >= 0) fxns.splice(i, 1);\n      SYNTHETIC_EVENTS[name][css] = fxns;\n      return true;\n    },\n    trigger: (el, name, options) => {\n      el.dispatchEvent(new window.Event(name, Object.assign({\n        bubbles: true,\n        composed: true\n      }, options)));\n    }\n  };\n  var event = Event;\n\n  let SifrrDom = {};\n  SifrrDom.elements = {};\n  SifrrDom.Element = element;\n  SifrrDom.Parser = parser;\n  SifrrDom.makeEqual = makeequal;\n  SifrrDom.Loader = loader;\n  SifrrDom.SimpleElement = simpleelement;\n  SifrrDom.Event = event;\n  SifrrDom.register = function (Element, options) {\n    Element.useShadowRoot = SifrrDom.config.useShadowRoot;\n    const name = Element.elementName;\n    if (!name) {\n      window.console.warn('Error creating Custom Element: No name given.', Element);\n    } else if (window.customElements.get(name)) {\n      window.console.warn(`Error creating Element: ${name} - Custom Element with this name is already defined.`);\n    } else if (name.indexOf('-') < 1) {\n      window.console.warn(`Error creating Element: ${name} - Custom Element name must have one dash '-'`);\n    } else {\n      try {\n        window.customElements.define(name, Element, options);\n        SifrrDom.elements[name] = Element;\n        return true;\n      } catch (error) {\n        window.console.warn(`Error creating Custom Element: ${name} - ${error}`);\n        return false;\n      }\n    }\n    return false;\n  };\n  SifrrDom.setup = function (config) {\n    SifrrDom.config = Object.assign({\n      baseUrl: '/',\n      useShadowRoot: true\n    }, config);\n    SifrrDom.Event.add('input');\n    SifrrDom.Event.add('change');\n    SifrrDom.Event.addListener('change', 'document', SifrrDom.Parser.twoWayBind);\n    SifrrDom.Event.addListener('input', 'document', SifrrDom.Parser.twoWayBind);\n  };\n  SifrrDom.load = function (elemName, config = {\n    baseUrl: SifrrDom.config.baseUrl\n  }) {\n    return new Promise(res => {\n      let loader$$1 = new SifrrDom.Loader(elemName, config);\n      loader$$1.executeScripts().then(() => res());\n    });\n  };\n  SifrrDom.Url = url;\n  SifrrDom.Json = json;\n  SifrrDom.relativeTo = function (elemName, relativeUrl) {\n    if (typeof elemName === 'string') return SifrrDom.Url.absolute(SifrrDom.Loader.urls[elemName], relativeUrl);\n  };\n  var sifrr_dom = SifrrDom;\n\n  return sifrr_dom;\n\n})));\n/*! (c) @aadityataparia */\n//# sourceMappingURL=sifrr.dom.js.map\n","/*! Sifrr.Storage v0.1.0-alpha2 - sifrr project - 2018/12/18 23:17:44 UTC */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Sifrr = global.Sifrr || {}, global.Sifrr.Storage = factory());\n}(this, (function () { 'use strict';\n\n  class Json {\n    static parse(data) {\n      let ans = {};\n      if (typeof data == 'string') {\n        try {\n          ans = JSON.parse(data);\n        } catch (e) {\n          return data;\n        }\n        return this.parse(ans);\n      } else if (Array.isArray(data)) {\n        ans = [];\n        data.forEach((v, i) => {\n          ans[i] = this.parse(v);\n        });\n      } else if (typeof data == 'object') {\n        for (const k in data) {\n          ans[k] = this.parse(data[k]);\n        }\n      } else {\n        return data;\n      }\n      return ans;\n    }\n    static stringify(data) {\n      if (typeof data == 'string') {\n        return data;\n      } else {\n        return JSON.stringify(data);\n      }\n    }\n  }\n  var json = Json;\n\n  class Storage {\n    constructor(options) {\n      this._options = options;\n    }\n    _parseKeyValue(key, value) {\n      let jsonConstructor = {}.constructor;\n      if (typeof value == 'undefined') {\n        if (Array.isArray(key)) {\n          return key;\n        } else if (typeof key == 'string') {\n          return [key];\n        } else if (key.constructor === jsonConstructor) {\n          return key;\n        }{\n          throw Error('Invalid Key');\n        }\n      } else if (typeof key == 'string') {\n        let ans = {};\n        ans[key] = value;\n        return ans;\n      } else {\n        throw Error('Invalid Key');\n      }\n    }\n    _select(keys) {\n      return this.data().then(data => {\n        let ans = {};\n        keys.forEach(key => ans[key] = data[key]);\n        return ans;\n      });\n    }\n    _upsert(data) {\n      let table = this.table;\n      for (let key in data) {\n        table[key] = data[key];\n      }\n      this.table = table;\n    }\n    _delete(keys) {\n      let table = this.table;\n      keys.forEach(key => delete table[key]);\n      this.table = table;\n    }\n    _clear() {\n      this.table = {};\n    }\n    _isEqual(options, type) {\n      if (this.tableName == options.name + options.version && this.type == type) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    get tableName() {\n      return this.name + this.version;\n    }\n    get name() {\n      return this._options.name;\n    }\n    get version() {\n      return this._options.version;\n    }\n    get description() {\n      return this._options.description;\n    }\n    get type() {\n      return this.constructor.type;\n    }\n    isSupported() {\n      if (typeof window == 'undefined' || typeof document == 'undefined') {\n        return true;\n      } else if (window && typeof this.store != 'undefined') {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    all() {\n      return this.data();\n    }\n    data() {\n      return Promise.resolve(this._parsedData());\n    }\n    select(key) {\n      return Promise.resolve(this._select(this._parseKeyValue(key)));\n    }\n    insert(key, value) {\n      return Promise.resolve(this._upsert(this._parseKeyValue(key, value)));\n    }\n    update(key, value) {\n      return Promise.resolve(this._upsert(this._parseKeyValue(key, value)));\n    }\n    upsert(key, value) {\n      return Promise.resolve(this._upsert(this._parseKeyValue(key, value)));\n    }\n    delete(key) {\n      return Promise.resolve(this._delete(this._parseKeyValue(key)));\n    }\n    deleteAll() {\n      return Promise.resolve(this._clear());\n    }\n    clear() {\n      return Promise.resolve(this._clear());\n    }\n    static stringify(data) {\n      return json.stringify(data);\n    }\n    static parse(data) {\n      return json.parse(data);\n    }\n  }\n  var storage = Storage;\n\n  class IndexedDB extends storage {\n    constructor(options) {\n      super(options);\n    }\n    _parsedData() {\n      return this._tx('readonly', 'getAll').then(result => this.parse(result));\n    }\n    _select(keys) {\n      let ans = {};\n      let promises = [];\n      keys.forEach(key => promises.push(this._tx('readonly', 'get', key).then(r => ans[key] = this.parse(r))));\n      return Promise.all(promises).then(() => ans);\n    }\n    _upsert(data) {\n      let promises = [];\n      for (let key in data) {\n        let promise = this._tx('readonly', 'get', key).then(oldResult => {\n          if (oldResult && oldResult.key == key) {\n            return this._tx('readwrite', 'put', { 'key': key, 'value': data[key] });\n          } else {\n            return this._tx('readwrite', 'add', { 'key': key, 'value': data[key] });\n          }\n        });\n        promises.push(promise);\n      }\n      return Promise.all(promises);\n    }\n    _delete(keys) {\n      let promises = [];\n      keys.forEach(key => promises.push(this._tx('readwrite', 'delete', key)));\n      return Promise.all(promises);\n    }\n    _clear() {\n      return this._tx('readwrite', 'clear');\n    }\n    _tx(scope, fn, params) {\n      let me = this;\n      return this.createStore(me.tableName).then(db => {\n        return new Promise((resolve, reject) => {\n          let tx = db.transaction(me.tableName, scope).objectStore(me.tableName);\n          let request = tx[fn].call(tx, params);\n          request.onsuccess = event => resolve(event.target.result);\n          request.onerror = event => reject(event.error);\n        });\n      });\n    }\n    get store() {\n      return window.indexedDB;\n    }\n    createStore(table) {\n      return new Promise((resolve, reject) => {\n        const request = this.store.open(table, 1);\n        request.onupgradeneeded = event => {\n          let db = event.target.result;\n          db.createObjectStore(table, { keyPath: 'key' });\n        };\n        request.onsuccess = () => resolve(request.result);\n        request.onerror = () => reject(request.error);\n      });\n    }\n    parse(data) {\n      let ans = {};\n      if (Array.isArray(data)) {\n        data.forEach(row => {\n          ans[row.key] = row.value;\n        });\n      } else if (data && data.value) {\n        return data.value;\n      } else {\n        return undefined;\n      }\n      return ans;\n    }\n    static get type() {\n      return 'indexeddb';\n    }\n  }\n  var indexeddb = IndexedDB;\n\n  class WebSQL extends storage {\n    constructor(options) {\n      super(options);\n      this.createStore();\n    }\n    _parsedData() {\n      let me = this;\n      return new Promise(resolve => {\n        this.store.transaction(function (tx) {\n          tx.executeSql(`SELECT * FROM ${me.tableName}`, [], (txn, results) => {\n            resolve(me.parse(results));\n          });\n        });\n      });\n    }\n    _select(keys) {\n      let me = this;\n      let q = keys.map(() => '?').join(', ');\n      return this.execSql(`SELECT key, value FROM ${me.tableName} WHERE key in (${q})`, keys);\n    }\n    _upsert(data) {\n      let table = this.tableName;\n      this.store.transaction(tx => {\n        for (let key in data) {\n          tx.executeSql(`INSERT OR IGNORE INTO ${table}(key, value) VALUES (?, ?)`, [key, data[key]]);\n          tx.executeSql(`UPDATE ${table} SET value = ? WHERE key = ?`, [this.constructor.stringify(data[key]), key]);\n        }\n      });\n    }\n    _delete(keys) {\n      let table = this.tableName;\n      let q = keys.map(() => '?').join(', ');\n      return this.execSql(`DELETE FROM ${table} WHERE key in (${q})`, keys);\n    }\n    _clear() {\n      let table = this.tableName;\n      return this.execSql(`DELETE FROM ${table}`);\n    }\n    get store() {\n      if (typeof window !== 'undefined') {\n        return window.openDatabase('bs', 1, this._options.description, this._options.size);\n      } else {\n        return true;\n      }\n    }\n    createStore() {\n      let table = this.tableName;\n      if (typeof window == 'undefined') return;\n      return this.execSql(`CREATE TABLE IF NOT EXISTS ${table} (key unique, value)`);\n    }\n    execSql(query, args = []) {\n      let me = this;\n      return new Promise(resolve => {\n        me.store.transaction(function (tx) {\n          tx.executeSql(query, args, (txn, results) => {\n            resolve(me.parse(results));\n          });\n        });\n      });\n    }\n    parse(results) {\n      let ans = {};\n      let len = results.rows.length,\n          i;\n      for (i = 0; i < len; i++) {\n        ans[results.rows.item(i).key] = this.constructor.parse(results.rows.item(i).value);\n      }\n      return ans;\n    }\n    static get type() {\n      return 'websql';\n    }\n  }\n  var websql = WebSQL;\n\n  class LocalStorage extends storage {\n    constructor(options) {\n      super(options);\n    }\n    _parsedData() {\n      return this.table;\n    }\n    get table() {\n      return this.constructor.parse(this.store.getItem(this.tableName));\n    }\n    set table(value) {\n      this.store.setItem(this.tableName, this.constructor.stringify(value));\n    }\n    get store() {\n      return window.localStorage;\n    }\n    static get type() {\n      return 'localstorage';\n    }\n  }\n  var localstorage = LocalStorage;\n\n  class Cookies extends storage {\n    constructor(options) {\n      super(options);\n    }\n    _parsedData() {\n      return this.table;\n    }\n    get table() {\n      let result = this.store,\n          ans = {};\n      result = result.split('; ');\n      result.forEach(value => {\n        let [k, v] = value.split('=');\n        if (v) ans[k] = this.constructor.parse(v);\n      });\n      return ans[this.tableName] || {};\n    }\n    set table(value) {\n      document.cookie = `${this.tableName}=${storage.stringify(value)}; path=/`;\n    }\n    get store() {\n      return document.cookie;\n    }\n    static get type() {\n      return 'cookies';\n    }\n  }\n  var cookies = Cookies;\n\n  class JsonStorage extends storage {\n    constructor(options, data = {}) {\n      super(options);\n      this._upsert(this.constructor.parse(data));\n    }\n    _parsedData() {\n      return this._table;\n    }\n    get store() {\n      return this._table;\n    }\n    get table() {\n      return this._table || {};\n    }\n    set table(value) {\n      this._table = value;\n    }\n    static get type() {\n      return 'jsonstorage';\n    }\n  }\n  var jsonstorage = JsonStorage;\n\n  let storages = {};\n  storages[indexeddb.type] = indexeddb;\n  storages[websql.type] = websql;\n  storages[localstorage.type] = localstorage;\n  storages[cookies.type] = cookies;\n  storages[jsonstorage.type] = jsonstorage;\n  var storages_1 = storages;\n\n  class SifrrStorage {\n    constructor(options) {\n      if (typeof options == 'string') options = { priority: [options] };else options = options || {};\n      this._options = Object.assign(this.constructor.defaultOptions, options);\n      return this.storage;\n    }\n    get storage() {\n      let storage = this.supportedStore();\n      if (typeof storage == 'undefined') throw new Error('No available storage supported in this browser');\n      let matchingInstance = this.constructor._matchingInstance(this._options, storage.type);\n      if (matchingInstance) {\n        return matchingInstance;\n      } else {\n        let storageInstance = new storage(this._options);\n        this.constructor._add(storageInstance);\n        return storageInstance;\n      }\n    }\n    get priority() {\n      return this._options.priority.concat(['indexeddb', 'websql', 'localstorage', 'cookies', 'jsonstorage']);\n    }\n    supportedStore() {\n      for (let i = 0; i < this.priority.length; i++) {\n        let store = this.constructor.availableStores[this.priority[i]];\n        if (store && new store(this._options).isSupported()) return store;\n      }\n    }\n    static _matchingInstance(options, type) {\n      let allInstances = this.all,\n          i;\n      let length = allInstances.length;\n      for (i = 0; i < length; i++) {\n        if (allInstances[i]._isEqual(options, type)) return allInstances[i];\n      }\n      return false;\n    }\n    static _add(instance) {\n      this._all = this._all || [];\n      this._all.push(instance);\n    }\n    static get availableStores() {\n      return storages_1;\n    }\n    static get defaultOptions() {\n      return {\n        priority: [],\n        name: 'SifrrStorage',\n        version: 1,\n        description: 'Sifrr Storage',\n        size: 5 * 1024 * 1024\n      };\n    }\n    static get all() {\n      return this._all || [];\n    }\n    static json(data) {\n      return new jsonstorage({}, data);\n    }\n  }\n  var sifrr_storage = SifrrStorage;\n\n  return sifrr_storage;\n\n})));\n/*! (c) @aadityataparia */\n","window.Sifrr = window.Sifrr || {};\nwindow.Sifrr.Dom = require('@sifrr/dom');\nwindow.Sifrr.Storage = require('@sifrr/storage');\n\nconst Sifrr = window.Sifrr;\n\nconst location = window.location.href.split('/');\nlocation.pop();\n\nSifrr.Dom.setup({\n  baseUrl: location.join('/') + '/'\n});\nSifrr.Dom.load('sifrr-stater');\nSifrr.Dom.load('sifrr-tabs');\n"],"names":["module","url","base","relative","stack","split","parts","pop","i","length","push","join","qIndex","indexOf","substring","Json","data","ans","JSON","parse","e","Array","isArray","forEach","v","k","stringify","a","b","key","json","map","deepClone","clone","update","element","name","newValue","fromValue","className","getAttribute","setAttribute","removeAttribute","nodeName","value","constants","window","document","createElement","updateAttribute$1","shallowEqual","TEXT_NODE","COMMENT_NODE","makeChildrenEqual","parent","newChildren","oldL","childNodes","newL","removeChild","lastChild","appendChild","l","Math","min","item","head","firstChild","makeEqual","nextSibling","oldNode","newNode","type","state","replaceWith","nodeType","attr","oldAttrs","attributes","newAttrs","j","hasAttribute","specified","makeequal","TREE_WALKER","createTreeWalker","NodeFilter","SHOW_ALL","roll","n","filter","node","this","currentNode","parentNode","nextNode","Ref","idx","ref","stateMap","refs","x","fxn","indices","makeChildrenEqual$1","updateAttribute$2","collect$1","create$1","TEMPLATE","TEXT_NODE$1","COMMENT_NODE$1","ELEMENT_NODE","isHtml","el","dataset","sifrrHtml","contentEditable","sifrrRepeat","creator","nodeValue","trim","sm","innerHTML","html","text","replace","attrs","attrStateMap","attribute","events","Object","keys","Parser","_refs","constructor","dom","event","evaluateString","val","undefined","children","toString","prototype","slice","call","content","textContent","target","path","sifrrBind","getRootNode","host","string","match","replacer","f","Function","bind","parser","global","self","sifrr_fetch","exports","request","options","_options","_url","fetch","then","resp","contentType","headers","get","ok","includes","error","Error","statusText","response","params","encodeURIComponent","assign","accept","fn","TEMPLATE$1","Loader","elemName","config","all","instance","elementName","urls","htmlUrl","me","file","_all","template","querySelector","add","baseUrl","querySelectorAll","script","loader","collect$2","create$2","TEMPLATE$2","creator$1","from","ret","avalue","nodeData","updateState","simpleEl","doms","newState","oldState","_oldState","simpleelement","defaultState","firstElementChild","isSifrr","defineProperty","_state","sifrrClone","deep","cloneNode","elementClassFactory","baseClass","htmlElementClass","concat","observedAttrs","_stateMap","createStateMap","toLowerCase","useShadowRoot","useSR","collectRefs","attachShadow","shadowRoot","addEventListener","twoWayBind","__content","onConnect","removeEventListener","onDisconnect","attrName","oldVal","newVal","onAttributeChange","onStateChange","args","sr","_arrayToDom","_domL","domArray","temp","console","log","HTMLElement","SYNTHETIC_EVENTS","cssMatchEvent","callEach","fxns","css","matches","Promise","resolve","eventHandler","nativeToSyntheticEvent","splice","dispatchEvent","Event","SifrrDom","Element","SimpleElement","register","customElements","warn","define","elements","setup","addListener","load","res","executeScripts","Url","relativeTo","relativeUrl","absolute","factory","storage","jsonConstructor","table","tableName","version","description","store","_parsedData","_select","_parseKeyValue","_upsert","_delete","_clear","indexeddb","_tx","result","promises","r","promise","oldResult","scope","createStore","db","reject","tx","transaction","objectStore","onsuccess","onerror","indexedDB","open","onupgradeneeded","createObjectStore","keyPath","row","websql","executeSql","txn","results","q","execSql","openDatabase","size","query","len","rows","localstorage","getItem","setItem","localStorage","cookies","cookie","jsonstorage","_table","storages","storages_1","priority","defaultOptions","supportedStore","matchingInstance","_matchingInstance","storageInstance","_add","availableStores","isSupported","allInstances","_isEqual","Sifrr","Dom","require$$0","Storage","require$$1","location","href"],"mappings":"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"}