{"version":3,"file":"example.bundled.js","sources":["../node_modules/@sifrr/fetch/dist/sifrr.fetch.js","../node_modules/@sifrr/dom/dist/sifrr.dom.js","../node_modules/@sifrr/storage/dist/sifrr.storage.js","example.js"],"sourcesContent":["/*! Sifrr.Fetch v0.0.2-alpha - sifrr project */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Sifrr = global.Sifrr || {}, global.Sifrr.Fetch = factory());\n}(this, (function () { 'use strict';\n\n  class Request {\n    constructor(type, url, options = {}) {\n      this.type = type;\n      this._options = options;\n      this._url = url;\n    }\n    get response() {\n      return window.fetch(this.url, this.options).then(resp => {\n        let contentType = resp.headers.get('content-type');\n        if (resp.ok) {\n          if (contentType && contentType.includes('application/json')) {\n            resp = resp.json();\n          }\n          return resp;\n        } else {\n          let error = Error(resp.statusText);\n          error.response = resp;\n          throw error;\n        }\n      });\n    }\n    get url() {\n      const params = this._options.params;\n      if (params && Object.keys(params).length > 0) {\n        return this._url + '?' + Object.keys(params).map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k])).join('&');\n      } else {\n        return this._url;\n      }\n    }\n    get options() {\n      const options = Object.assign({\n        method: this.type,\n        mode: 'cors',\n        redirect: 'follow'\n      }, this._options);\n      options.headers = Object.assign({\n        'accept': 'application/json'\n      }, this._options.headers || {});\n      if (typeof options.body === 'object') {\n        options.body = JSON.stringify(options.body);\n      }\n      return options;\n    }\n  }\n  var request = Request;\n\n  class SifrrFetch {\n    static get(url, options = {}) {\n      return new request('GET', url, options).response;\n    }\n    static post(url, options = {}) {\n      return new request('POST', url, options).response;\n    }\n    static put(url, options = {}) {\n      return new request('PUT', url, options).response;\n    }\n    static delete(url, options = {}) {\n      return new request('DELETE', url, options).response;\n    }\n    static graphql(url, options = {}) {\n      const {\n        query,\n        variables = {}\n      } = options;\n      delete options.query;\n      delete options.variables;\n      options.headers = options.headers || {};\n      options.headers['Content-Type'] = 'application/json';\n      options.headers['Accept'] = 'application/json';\n      options.body = {\n        query,\n        variables\n      };\n      return new request('POST', url, options).response;\n    }\n    static file(url, options = {}) {\n      options.headers = options.headers || {};\n      options.headers.accept = options.headers.accept || '*/*';\n      return new request('GET', url, options).response;\n    }\n  }\n  var sifrr_fetch = SifrrFetch;\n\n  return sifrr_fetch;\n\n})));\n/*! (c) @aadityataparia */\n//# sourceMappingURL=sifrr.fetch.js.map\n","/*! Sifrr.Dom v0.0.2-alpha - sifrr project */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('@sifrr/fetch')) :\n  typeof define === 'function' && define.amd ? define(['@sifrr/fetch'], factory) :\n  (global = global || self, (global.Sifrr = global.Sifrr || {}, global.Sifrr.Dom = factory(global.Sifrr.Fetch)));\n}(this, function (fetch) { 'use strict';\n\n  fetch = fetch && fetch.hasOwnProperty('default') ? fetch['default'] : fetch;\n\n  const URLExt = {\n    absolute: (base, relative) => {\n      let stack = base.split('/'),\n          parts = relative.split('/');\n      stack.pop();\n      for (let i = 0; i < parts.length; i++) {\n        if (parts[i] == '.') continue;\n        if (parts[i] == '..') stack.pop();else stack.push(parts[i]);\n      }\n      return stack.join('/');\n    },\n    getRoutes: url => {\n      if (url[0] != '/') {\n        url = '/' + url;\n      }\n      let qIndex = url.indexOf('?');\n      if (qIndex != -1) {\n        url = url.substring(0, qIndex);\n      }\n      return url.split('/');\n    }\n  };\n  var url = URLExt;\n\n  const Json = {\n    parse: data => {\n      let ans = {};\n      if (typeof data == 'string') {\n        try {\n          ans = JSON.parse(data);\n        } catch (e) {\n          return data;\n        }\n        return Json.parse(ans);\n      } else if (Array.isArray(data)) {\n        ans = [];\n        data.forEach((v, i) => {\n          ans[i] = Json.parse(v);\n        });\n      } else if (typeof data == 'object') {\n        for (const k in data) {\n          ans[k] = Json.parse(data[k]);\n        }\n      } else {\n        return data;\n      }\n      return ans;\n    },\n    stringify: data => {\n      if (typeof data == 'string') {\n        return data;\n      } else {\n        return JSON.stringify(data);\n      }\n    },\n    shallowEqual: (a, b) => {\n      for (let key in a) {\n        if (!(key in b) || a[key] != b[key]) {\n          return false;\n        }\n      }\n      for (let key in b) {\n        if (!(key in a) || a[key] != b[key]) {\n          return false;\n        }\n      }\n      return true;\n    },\n    deepClone: json => {\n      if (Array.isArray(json)) return json.map(i => Json.deepClone(i));\n      if (typeof json !== 'object' || json === null) return json;\n      let clone = {};\n      for (let key in json) {\n        clone[key] = Json.deepClone(json[key]);\n      }\n      return clone;\n    }\n  };\n  var json = Json;\n\n  const temp = window.document.createElement('template');\n  const sfn = window.document.createElement('sifrr-node');\n  var constants = {\n    SIFRR_NODE: () => sfn.cloneNode(),\n    TEMPLATE: () => temp.cloneNode(),\n    TEXT_NODE: 3,\n    COMMENT_NODE: 8,\n    ELEMENT_NODE: 1\n  };\n\n  function updateAttribute(element, name, newValue) {\n    if (name === 'class') {\n      const fromValue = element.className;\n      if (fromValue != newValue) {\n        if (newValue == 'null' || newValue == 'undefined' || newValue == 'false' || !newValue) {\n          element.className = '';\n        } else {\n          element.className = newValue;\n        }\n      }\n    } else {\n      const fromValue = element.getAttribute(name);\n      if (fromValue != newValue) {\n        if (newValue == 'null' || newValue == 'undefined' || newValue == 'false' || !newValue) {\n          if (fromValue) element.removeAttribute(name);\n        } else {\n          element.setAttribute(name, newValue);\n        }\n      }\n      if ((element.nodeName == 'SELECT' || element.nodeName == 'INPUT') && name == 'value') element.value = newValue;\n    }\n  }\n  var update = {\n    updateAttribute\n  };\n\n  const {\n    updateAttribute: updateAttribute$1\n  } = update;\n  const {\n    shallowEqual\n  } = json;\n  const {\n    TEXT_NODE,\n    COMMENT_NODE\n  } = constants;\n  function makeChildrenEqual(parent, newChildren) {\n    const oldL = parent.childNodes.length,\n          newL = newChildren.length;\n    if (oldL > newL) {\n      let i = oldL;\n      while (i > newL) {\n        parent.removeChild(parent.lastChild);\n        i--;\n      }\n    } else if (oldL < newL) {\n      let i = oldL;\n      while (i < newL) {\n        parent.appendChild(newChildren[i]);\n        i++;\n      }\n    }\n    const l = Math.min(newL, oldL);\n    for (let i = 0, item, head = parent.firstChild; i < l; i++) {\n      item = newChildren[i];\n      head = makeEqual(head, item).nextSibling;\n    }\n  }\n  function makeEqual(oldNode, newNode) {\n    if (newNode === null) return oldNode;\n    if (newNode.type === 'stateChange') {\n      if (!shallowEqual(oldNode.state, newNode.state)) {\n        oldNode.state = newNode.state;\n      }\n      return oldNode;\n    }\n    if (oldNode.nodeName !== newNode.nodeName) {\n      oldNode.replaceWith(newNode);\n      return newNode;\n    }\n    if (oldNode.nodeType === TEXT_NODE || oldNode.nodeType === COMMENT_NODE) {\n      if (oldNode.data !== newNode.data) oldNode.data = newNode.data;\n      return oldNode;\n    }\n    if (newNode.state) oldNode.state = newNode.state;\n    let oldAttrs = oldNode.attributes,\n        newAttrs = newNode.attributes,\n        attr;\n    for (let i = newAttrs.length - 1; i >= 0; --i) {\n      updateAttribute$1(oldNode, newAttrs[i].name, newAttrs[i].value);\n    }\n    for (let j = oldAttrs.length - 1; j >= 0; --j) {\n      attr = oldAttrs[j];\n      if (!newNode.hasAttribute(attr.name) && attr.specified !== false) oldNode.removeAttribute(attr.name);\n    }\n    makeChildrenEqual(oldNode, newNode.childNodes);\n    return oldNode;\n  }\n  var makeequal = {\n    makeEqual,\n    makeChildrenEqual\n  };\n\n  const TREE_WALKER = window.document.createTreeWalker(window.document, window.NodeFilter.SHOW_ALL, null, false);\n  TREE_WALKER.roll = function (n, filter = false) {\n    let node = this.currentNode;\n    while (--n) {\n      if (filter && filter(node)) {\n        node = TREE_WALKER.nextSibling() || TREE_WALKER.parentNode();\n      } else node = TREE_WALKER.nextNode();\n    }\n    return node;\n  };\n  function collect(element, stateMap = element.stateMap, filter) {\n    const refs = [];\n    TREE_WALKER.currentNode = element;\n    stateMap.map(x => refs.push(TREE_WALKER.roll(x.idx, filter)));\n    return refs;\n  }\n  class Ref {\n    constructor(idx, ref) {\n      this.idx = idx;\n      this.ref = ref;\n    }\n  }\n  function create(node, fxn, filter = false) {\n    let indices = [],\n        ref,\n        idx = 0;\n    TREE_WALKER.currentNode = node;\n    while (node) {\n      if (ref = fxn(node)) {\n        indices.push(new Ref(idx + 1, ref));\n        idx = 1;\n      } else {\n        idx++;\n      }\n      if (filter && filter(node)) {\n        node = TREE_WALKER.nextSibling() || TREE_WALKER.parentNode();\n      } else node = TREE_WALKER.nextNode();\n    }\n    return indices;\n  }\n  var ref = {\n    walker: TREE_WALKER,\n    collect,\n    create,\n    Ref\n  };\n\n  const {\n    makeChildrenEqual: makeChildrenEqual$1\n  } = makeequal;\n  const {\n    updateAttribute: updateAttribute$2\n  } = update;\n  const {\n    collect: collect$1,\n    create: create$1\n  } = ref;\n  const {\n    TEXT_NODE: TEXT_NODE$1,\n    COMMENT_NODE: COMMENT_NODE$1,\n    ELEMENT_NODE\n  } = constants;\n  const TEMPLATE = constants.TEMPLATE();\n  function isHtml(el) {\n    return el.dataset && el.dataset.sifrrHtml == 'true' || el.contentEditable == 'true' || el.nodeName == 'TEXTAREA' || el.nodeName == 'STYLE' || el.dataset && el.dataset.sifrrRepeat;\n  }\n  function creator(el) {\n    if (el.nodeType === TEXT_NODE$1 || el.nodeType === COMMENT_NODE$1) {\n      const x = el.nodeValue;\n      if (x.indexOf('${') > -1) return {\n        html: false,\n        text: x.trim()\n      };\n    } else if (el.nodeType === ELEMENT_NODE) {\n      const sm = {};\n      if (isHtml(el)) {\n        const innerHTML = el.innerHTML;\n        if (innerHTML.indexOf('${') >= 0) {\n          sm.html = true;\n          sm.text = innerHTML.replace(/<!--(.*)-->/g, '$1');\n        }\n      }\n      const attrs = el.attributes || [],\n            l = attrs.length;\n      const attrStateMap = {\n        events: {}\n      };\n      for (let i = 0; i < l; i++) {\n        const attribute = attrs[i];\n        if (attribute.name[0] === '$') {\n          attrStateMap.events[attribute.name] = attribute.value;\n        } else if (attribute.value.indexOf('${') >= 0) {\n          attrStateMap[attribute.name] = attribute.value;\n        }\n      }\n      if (Object.keys(attrStateMap).length > 0) sm.attributes = attrStateMap;\n      if (Object.keys(sm).length > 0) return sm;\n    }\n    return 0;\n  }\n  const Parser = {\n    collectRefs: (el, stateMap) => collect$1(el, stateMap, isHtml),\n    createStateMap: element => create$1(element, creator, isHtml),\n    update: element => {\n      if (!element._refs) {\n        return false;\n      }\n      const l = element._refs.length;\n      for (let i = 0; i < l; i++) {\n        const data = element.constructor.stateMap[i].ref;\n        const dom = element._refs[i];\n        if (data.attributes) {\n          for (let key in data.attributes) {\n            if (key === 'events') {\n              for (let event in data.attributes.events) {\n                const eventLis = Parser.evaluateString(data.attributes.events[event], element, true);\n                if (data.attributes.events[event].slice(0, 6) === '${this') {\n                  dom[event] = eventLis.bind(element);\n                } else {\n                  dom[event] = eventLis;\n                }\n              }\n            } else {\n              const val = Parser.evaluateString(data.attributes[key], element);\n              updateAttribute$2(dom, key, val);\n            }\n          }\n        }\n        if (data.html === undefined) continue;\n        const newValue = Parser.evaluateString(data.text, element);\n        if (!newValue) {\n          dom.textContent = '';\n          continue;\n        }\n        if (data.html) {\n          let children;\n          if (Array.isArray(newValue)) {\n            children = newValue;\n          } else if (newValue.nodeType) {\n            children = [newValue];\n          } else {\n            TEMPLATE.innerHTML = newValue.toString()\n            .replace(/(&lt;)(((?!&gt;).)*)(&gt;)(((?!&lt;).)*)(&lt;)\\/(((?!&gt;).)*)(&gt;)/g, '<$2>$5</$8>')\n            .replace(/(&lt;)(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)(((?!&gt;).)*)(&gt;)/g, '<$2$3>');\n            children = Array.prototype.slice.call(TEMPLATE.content.childNodes);\n          }\n          if (children.length < 1) dom.textContent = '';else makeChildrenEqual$1(dom, children);\n        } else {\n          if (dom.nodeValue != newValue) {\n            dom.nodeValue = newValue;\n          }\n        }\n      }\n    },\n    twoWayBind: e => {\n      const target = e.path ? e.path[0] : e.target;\n      if (!target.dataset.sifrrBind) return;\n      const value = target.value === undefined ? target.innerHTML : target.value;\n      let state = {};\n      let root;\n      if (target._root) {\n        root = target._root;\n      } else {\n        root = target;\n        while (!root.isSifrr) root = root.parentNode || root.host;\n        target._root = root;\n      }\n      state[target.dataset.sifrrBind] = value;\n      root.state = state;\n    },\n    evaluateString: (string, element) => {\n      if (string.indexOf('${') < 0) return string;\n      string = string.trim();\n      if (string.match(/^\\${([^{}$]|{([^{}$])*})*}$/)) return replacer(string);\n      return replacer('`' + string + '`');\n      function replacer(match) {\n        if (match[0] == '$') match = match.slice(2, -1);\n        let f;\n        if (match.indexOf('return ') >= 0) {\n          f = new Function(match).bind(element);\n        } else {\n          f = new Function('return ' + match).bind(element);\n        }\n        return f();\n      }\n    }\n  };\n  var parser = Parser;\n\n  const TEMPLATE$1 = constants.TEMPLATE();\n  class Loader {\n    constructor(elemName, config = {}) {\n      if (!fetch) throw Error('Sifrr.Dom.load requires Sifrr.Fetch to work.');\n      if (this.constructor.all[elemName]) return this.constructor.all[elemName].instance;\n      this.elementName = elemName;\n      this.config = config;\n      this.constructor.urls[elemName] = this.htmlUrl;\n    }\n    get html() {\n      const me = this;\n      if (this.constructor.all[this.elementName] && this.constructor.all[this.elementName].html) return this.constructor.all[this.elementName].html;\n      const html = fetch.file(this.htmlUrl).then(resp => resp.text()).then(file => {\n        TEMPLATE$1.innerHTML = file;\n        return TEMPLATE$1.content;\n      }).then(html => {\n        Loader._all[me.elementName].template = html.querySelector('template');\n        return html;\n      });\n      Loader.add(me.elementName, {\n        instance: me,\n        html: html\n      });\n      return html;\n    }\n    get js() {\n      const me = this;\n      if (this.constructor.all[this.elementName] && this.constructor.all[this.elementName].js) return this.constructor.all[this.elementName].js;\n      const js = fetch.file(this.jsUrl).then(resp => resp.text());\n      Loader.add(me.elementName, {\n        instance: me,\n        js: js\n      });\n      return js;\n    }\n    get htmlUrl() {\n      return this.config.url || `${this.config.baseUrl + '/' || ''}elements/${this.elementName.split('-').join('/')}.html`;\n    }\n    get jsUrl() {\n      return this.config.url || `${this.config.baseUrl + '/' || ''}elements/${this.elementName.split('-').join('/')}.js`;\n    }\n    executeScripts() {\n      return this.html.then(file => {\n        file.querySelectorAll('script').forEach(script => {\n          if (script.hasAttribute('src')) {\n            window.document.body.appendChild(script);\n          } else {\n            new Function(script.text).bind(window)();\n          }\n        });\n      }).catch(e => {\n        window.console.warn(e);\n        window.console.log(`Failed to fetch HTML. Trying to get js file for ${this.elementName}.`);\n        this.js.then(script => {\n          new Function(script).bind(window)();\n        });\n      });\n    }\n    static add(elemName, instance) {\n      Loader._all[elemName] = Object.assign(Loader._all[elemName] || {}, instance);\n    }\n    static get all() {\n      return Loader._all;\n    }\n  }\n  Loader._all = {};\n  Loader.urls = {};\n  var loader = Loader;\n\n  const {\n    collect: collect$2,\n    create: create$2\n  } = ref;\n  const TEMPLATE$2 = constants.TEMPLATE();\n  function creator$1(node) {\n    if (node.nodeType !== 3) {\n      if (node.attributes !== undefined) {\n        const attrs = Array.from(node.attributes),\n              l = attrs.length;\n        const ret = [];\n        for (let i = 0; i < l; i++) {\n          const avalue = attrs[i].value;\n          if (avalue[0] === '$') {\n            ret.push({\n              name: attrs[i].name,\n              text: avalue.slice(2, -1)\n            });\n          }\n        }\n        if (ret.length > 0) return ret;\n      }\n      return 0;\n    } else {\n      let nodeData = node.nodeValue;\n      if (nodeData[0] === '$') {\n        node.nodeValue = '';\n        return nodeData.slice(2, -1);\n      }\n      return 0;\n    }\n  }\n  function updateState(simpleEl) {\n    const doms = simpleEl._refs,\n          refs = simpleEl.stateMap,\n          l = refs.length;\n    const newState = simpleEl.state,\n          oldState = simpleEl._oldState;\n    for (let i = 0; i < l; i++) {\n      const data = refs[i].ref,\n            dom = doms[i];\n      if (Array.isArray(data)) {\n        const l = data.length;\n        for (let i = 0; i < l; i++) {\n          const attr = data[i];\n          if (oldState[attr.text] !== newState[attr.text]) {\n            if (attr.name === 'class') dom.className = newState[attr.text] || '';else dom.setAttribute(attr.name, newState[attr.text]);\n          }\n        }\n      } else {\n        if (oldState[data] != newState[data]) dom.nodeValue = newState[data];\n      }\n    }\n  }\n  function SimpleElement(content, defaultState) {\n    if (typeof content === 'string') {\n      TEMPLATE$2.innerHTML = content;\n      content = TEMPLATE$2.content.firstElementChild || TEMPLATE$2.content.firstChild;\n      const oldDisplay = content.style.display;\n      content.style.display = 'none';\n      window.document.body.appendChild(content);\n      content.remove();\n      content.style.display = oldDisplay;\n    }\n    if (content.nodeName.indexOf('-') !== -1 || content.getAttribute('is') && content.getAttribute('is').indexOf('-') >= 0 || content.isSifrr && content.isSifrr()) return content;\n    content.stateMap = create$2(content, creator$1);\n    content._refs = collect$2(content, content.stateMap);\n    Object.defineProperty(content, 'state', {\n      get: () => content._state,\n      set: v => {\n        content._oldState = Object.assign({}, content._state);\n        content._state = Object.assign(content._state || {}, v);\n        updateState(content);\n      }\n    });\n    if (defaultState) content.state = defaultState;\n    content.sifrrClone = function (deep) {\n      const clone = content.cloneNode(deep);\n      clone.stateMap = content.stateMap;\n      clone._refs = collect$2(clone, content.stateMap);\n      Object.defineProperty(clone, 'state', {\n        get: () => clone._state,\n        set: v => {\n          clone._oldState = Object.assign({}, clone._state);\n          clone._state = Object.assign(clone._state || {}, v);\n          updateState(clone);\n        }\n      });\n      if (content.state) clone.state = content.state;\n      return clone;\n    };\n    return content;\n  }\n  var simpleelement = SimpleElement;\n\n  function elementClassFactory(baseClass) {\n    return class extends baseClass {\n      static extends(htmlElementClass) {\n        return elementClassFactory(htmlElementClass);\n      }\n      static get observedAttributes() {\n        return ['data-sifrr-state'].concat(this.observedAttrs());\n      }\n      static observedAttrs() {\n        return [];\n      }\n      static get template() {\n        return loader.all[this.elementName].template;\n      }\n      static get ctemp() {\n        this._ctemp = this._ctemp || this.template;\n        return this._ctemp;\n      }\n      static get stateMap() {\n        this._stateMap = this._stateMap || parser.createStateMap(this.ctemp.content);\n        return this._stateMap;\n      }\n      static get elementName() {\n        return this.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n      }\n      static onStateChange() {}\n      static get useShadowRoot() {\n        this._ctempusr = this._ctempusr || this.ctemp.getAttribute('use-shadow-root') !== 'false';\n        return this._ctempusr && this.useSR;\n      }\n      static get noContent() {\n        this._nocont = this._nocont || this.ctemp.getAttribute('content') === 'false';\n        return this._nocont;\n      }\n      constructor() {\n        super();\n        if (this.constructor.noContent) ; else {\n          if (this.constructor.defaultState || this.state) this._state = Object.assign({}, this.constructor.defaultState, this.state);\n          const content = this.constructor.ctemp.content.cloneNode(true);\n          if (this.constructor.useShadowRoot) {\n            this._refs = parser.collectRefs(content, this.constructor.stateMap);\n            this.attachShadow({\n              mode: 'open'\n            });\n            this.shadowRoot.appendChild(content);\n            this.shadowRoot.addEventListener('change', parser.twoWayBind);\n          } else {\n            this.__content = content;\n          }\n        }\n      }\n      connectedCallback() {\n        if (!this.constructor.useShadowRoot) {\n          this.textContent = '';\n          this._refs = parser.collectRefs(this.__content, this.constructor.stateMap);\n          this.appendChild(this.__content);\n          if (this._state || this.hasAttribute('data-sifrr-state')) this.update();\n        } else {\n          if (!this.hasAttribute('data-sifrr-state') && this._state) this.update();\n        }\n        this.onConnect();\n      }\n      onConnect() {}\n      disconnectedCallback() {\n        if (this.shadowRoot) this.shadowRoot.removeEventListener('change', parser.twoWayBind);\n        this.onDisconnect();\n      }\n      onDisconnect() {}\n      attributeChangedCallback(attrName, oldVal, newVal) {\n        if (attrName === 'data-sifrr-state') {\n          this.state = json.parse(newVal);\n        }\n        this.onAttributeChange(attrName, oldVal, newVal);\n      }\n      onAttributeChange() {}\n      get state() {\n        return this._state;\n      }\n      set state(v) {\n        this._state = this._state || {};\n        if (this._state !== v) Object.assign(this._state, v);\n        this.update();\n      }\n      update() {\n        parser.update(this);\n        this.onStateChange();\n        this.constructor.onStateChange(this);\n      }\n      onStateChange() {}\n      isSifrr(name = null) {\n        if (name) return name === this.constructor.elementName;else return true;\n      }\n      sifrrClone(deep) {\n        return this.cloneNode(deep);\n      }\n      clearState() {\n        this._state = {};\n        this.update();\n      }\n      $(args, sr = true) {\n        if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelector(args);else return this.querySelector(args);\n      }\n      $$(args, sr = true) {\n        if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelectorAll(args);else return this.querySelectorAll(args);\n      }\n      static addArrayToDom(key, template) {\n        this._arrayToDom = this._arrayToDom || {};\n        this._arrayToDom[this.elementName] = this._arrayToDom[this.elementName] || {};\n        this._arrayToDom[this.elementName][key] = simpleelement(template);\n      }\n      arrayToDom(key, newState = this.state[key]) {\n        this._domL = this._domL || {};\n        const oldL = this._domL[key] || 0;\n        const domArray = [];\n        const newL = newState.length;\n        let temp;\n        try {\n          temp = this.constructor._arrayToDom[this.constructor.elementName][key];\n        } catch (e) {\n          return window.console.log(`[error]: No arrayToDom data of '${key}' added in ${this.constructor.elementName}.`);\n        }\n        for (let i = 0; i < newL; i++) {\n          if (i < oldL) {\n            domArray.push({\n              type: 'stateChange',\n              state: newState[i]\n            });\n          } else {\n            const el = temp.sifrrClone(true);\n            el.state = newState[i];\n            domArray.push(el);\n          }\n        }\n        this._domL[key] = newL;\n        return domArray;\n      }\n    };\n  }\n  var element = elementClassFactory(window.HTMLElement);\n\n  const SYNTHETIC_EVENTS = {};\n  const nativeToSyntheticEvent = (e, name) => {\n    return Promise.resolve((() => {\n      const target = e.composedPath ? e.composedPath()[0] : e.target;\n      let dom = target;\n      while (dom) {\n        const eventHandler = dom[`$${name}`];\n        if (eventHandler) {\n          eventHandler(e, target);\n        }\n        cssMatchEvent(e, name, target);\n        dom = dom.parentNode || dom.host;\n      }\n    })());\n  };\n  const cssMatchEvent = (e, name, dom) => {\n    function callEach(fxns) {\n      fxns.forEach(fxn => fxn(e, dom));\n    }\n    for (let css in SYNTHETIC_EVENTS[name]) {\n      if (typeof dom.matches === 'function' && dom.matches(css) || dom.nodeType === 9 && css === 'document') callEach(SYNTHETIC_EVENTS[name][css]);\n    }\n  };\n  const Event = {\n    add: name => {\n      if (SYNTHETIC_EVENTS[name]) return false;\n      window.document.addEventListener(name, event => nativeToSyntheticEvent(event, name), {\n        capture: true,\n        passive: true\n      });\n      SYNTHETIC_EVENTS[name] = {};\n      return true;\n    },\n    addListener: (name, css, fxn) => {\n      const fxns = SYNTHETIC_EVENTS[name][css] || [];\n      if (fxns.indexOf(fxn) < 0) fxns.push(fxn);\n      SYNTHETIC_EVENTS[name][css] = fxns;\n      return true;\n    },\n    removeListener: (name, css, fxn) => {\n      const fxns = SYNTHETIC_EVENTS[name][css] || [],\n            i = fxns.indexOf(fxn);\n      if (i >= 0) fxns.splice(i, 1);\n      SYNTHETIC_EVENTS[name][css] = fxns;\n      return true;\n    },\n    trigger: (el, name, options) => {\n      el.dispatchEvent(new window.Event(name, Object.assign({\n        bubbles: true,\n        composed: true\n      }, options)));\n    }\n  };\n  var event = Event;\n\n  const {\n    TEMPLATE: TEMPLATE$3\n  } = constants;\n  let SifrrDom = {};\n  SifrrDom.elements = {};\n  SifrrDom.Element = element;\n  SifrrDom.Parser = parser;\n  SifrrDom.Loader = loader;\n  SifrrDom.SimpleElement = simpleelement;\n  SifrrDom.Event = event;\n  SifrrDom.makeEqual = makeequal;\n  SifrrDom.Url = url;\n  SifrrDom.Json = json;\n  SifrrDom.html = (str, ...extra) => {\n    const tmp = TEMPLATE$3();\n    if (str[0] && typeof str[0] === 'string') {\n      str = String.raw(str, ...extra).replace(/{{(.*)}}/g, '${$1}');\n      tmp.innerHTML = str;\n    } else if (str[0]) {\n      Array.from(str).forEach(s => {\n        tmp.appendChild(s);\n      });\n    } else {\n      return str;\n    }\n    return tmp;\n  };\n  SifrrDom.register = (Element, options) => {\n    Element.useSR = SifrrDom.config.useShadowRoot;\n    const name = Element.elementName;\n    if (!name) {\n      throw Error('Error creating Custom Element: No name given.', Element);\n    } else if (window.customElements.get(name)) {\n      window.console.warn(`Error creating Element: ${name} - Custom Element with this name is already defined.`);\n    } else if (name.indexOf('-') < 1) {\n      throw Error(`Error creating Element: ${name} - Custom Element name must have one dash '-'`);\n    } else {\n      try {\n        window.customElements.define(name, Element, options);\n        SifrrDom.elements[name] = Element;\n        return true;\n      } catch (error) {\n        window.console.error(`Error creating Custom Element: ${name} - ${error}`);\n        return false;\n      }\n    }\n    return false;\n  };\n  SifrrDom.setup = function (config) {\n    SifrrDom.config = Object.assign({\n      baseUrl: '',\n      useShadowRoot: true\n    }, config);\n    SifrrDom.Event.add('input');\n    SifrrDom.Event.add('change');\n    SifrrDom.Event.addListener('change', 'document', SifrrDom.Parser.twoWayBind);\n    SifrrDom.Event.addListener('input', 'document', SifrrDom.Parser.twoWayBind);\n  };\n  SifrrDom.load = function (elemName, config = {\n    baseUrl: SifrrDom.config.baseUrl\n  }) {\n    let loader$$1 = new SifrrDom.Loader(elemName, config);\n    return loader$$1.executeScripts();\n  };\n  SifrrDom.relativeTo = function (elemName, relativeUrl) {\n    if (typeof elemName === 'string') return SifrrDom.Url.absolute(SifrrDom.Loader.urls[elemName], relativeUrl);\n  };\n  var sifrr_dom = SifrrDom;\n\n  return sifrr_dom;\n\n}));\n/*! (c) @aadityataparia */\n//# sourceMappingURL=sifrr.dom.js.map\n","/*! Sifrr.Storage v0.0.2-alpha - sifrr project */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Sifrr = global.Sifrr || {}, global.Sifrr.Storage = factory());\n}(this, (function () { 'use strict';\n\n  class Json {\n    static parse(data) {\n      let ans = {};\n      if (typeof data == 'string') {\n        try {\n          ans = JSON.parse(data);\n        } catch (e) {\n          return data;\n        }\n        return this.parse(ans);\n      } else if (Array.isArray(data)) {\n        ans = [];\n        data.forEach((v, i) => {\n          ans[i] = this.parse(v);\n        });\n      } else if (typeof data == 'object') {\n        for (const k in data) {\n          ans[k] = this.parse(data[k]);\n        }\n      } else {\n        return data;\n      }\n      return ans;\n    }\n    static stringify(data) {\n      if (typeof data == 'string') {\n        return data;\n      } else {\n        return JSON.stringify(data);\n      }\n    }\n  }\n  var json = Json;\n\n  class Storage {\n    constructor(options) {\n      this._options = options;\n    }\n    _parseKeyValue(key, value) {\n      let jsonConstructor = {}.constructor;\n      if (typeof value == 'undefined') {\n        if (Array.isArray(key)) {\n          return key;\n        } else if (typeof key == 'string') {\n          return [key];\n        } else if (key.constructor === jsonConstructor) {\n          return key;\n        }\n        {\n          throw Error('Invalid Key');\n        }\n      } else if (typeof key == 'string') {\n        let ans = {};\n        ans[key] = value;\n        return ans;\n      } else {\n        throw Error('Invalid Key');\n      }\n    }\n    _select(keys) {\n      return this.data().then(data => {\n        let ans = {};\n        keys.forEach(key => ans[key] = data[key]);\n        return ans;\n      });\n    }\n    _upsert(data) {\n      let table = this.table;\n      for (let key in data) {\n        table[key] = data[key];\n      }\n      this.table = table;\n    }\n    _delete(keys) {\n      let table = this.table;\n      keys.forEach(key => delete table[key]);\n      this.table = table;\n    }\n    _clear() {\n      this.table = {};\n    }\n    _isEqual(options, type) {\n      if (this.tableName == options.name + options.version && this.type == type) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    get tableName() {\n      return this.name + this.version;\n    }\n    get name() {\n      return this._options.name;\n    }\n    get version() {\n      return this._options.version;\n    }\n    get description() {\n      return this._options.description;\n    }\n    get type() {\n      return this.constructor.type;\n    }\n    isSupported() {\n      if (typeof window == 'undefined' || typeof document == 'undefined') {\n        return true;\n      } else if (window && typeof this.store != 'undefined') {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    all() {\n      return this.data();\n    }\n    data() {\n      return Promise.resolve(this._parsedData());\n    }\n    select(key) {\n      return Promise.resolve(this._select(this._parseKeyValue(key)));\n    }\n    insert(key, value) {\n      return Promise.resolve(this._upsert(this._parseKeyValue(key, value)));\n    }\n    update(key, value) {\n      return Promise.resolve(this._upsert(this._parseKeyValue(key, value)));\n    }\n    upsert(key, value) {\n      return Promise.resolve(this._upsert(this._parseKeyValue(key, value)));\n    }\n    delete(key) {\n      return Promise.resolve(this._delete(this._parseKeyValue(key)));\n    }\n    deleteAll() {\n      return Promise.resolve(this._clear());\n    }\n    clear() {\n      return Promise.resolve(this._clear());\n    }\n    static stringify(data) {\n      return json.stringify(data);\n    }\n    static parse(data) {\n      return json.parse(data);\n    }\n  }\n  var storage = Storage;\n\n  class IndexedDB extends storage {\n    constructor(options) {\n      super(options);\n    }\n    _parsedData() {\n      return this._tx('readonly', 'getAll').then(result => this.parse(result));\n    }\n    _select(keys) {\n      let ans = {};\n      let promises = [];\n      keys.forEach(key => promises.push(this._tx('readonly', 'get', key).then(r => ans[key] = this.parse(r))));\n      return Promise.all(promises).then(() => ans);\n    }\n    _upsert(data) {\n      let promises = [];\n      for (let key in data) {\n        let promise = this._tx('readonly', 'get', key).then(oldResult => {\n          if (oldResult && oldResult.key == key) {\n            return this._tx('readwrite', 'put', {\n              'key': key,\n              'value': data[key]\n            });\n          } else {\n            return this._tx('readwrite', 'add', {\n              'key': key,\n              'value': data[key]\n            });\n          }\n        });\n        promises.push(promise);\n      }\n      return Promise.all(promises);\n    }\n    _delete(keys) {\n      let promises = [];\n      keys.forEach(key => promises.push(this._tx('readwrite', 'delete', key)));\n      return Promise.all(promises);\n    }\n    _clear() {\n      return this._tx('readwrite', 'clear');\n    }\n    _tx(scope, fn, params) {\n      let me = this;\n      return this.createStore(me.tableName).then(db => {\n        return new Promise((resolve, reject) => {\n          let tx = db.transaction(me.tableName, scope).objectStore(me.tableName);\n          let request = tx[fn].call(tx, params);\n          request.onsuccess = event => resolve(event.target.result);\n          request.onerror = event => reject(event.error);\n        });\n      });\n    }\n    get store() {\n      return window.indexedDB;\n    }\n    createStore(table) {\n      return new Promise((resolve, reject) => {\n        const request = this.store.open(table, 1);\n        request.onupgradeneeded = event => {\n          let db = event.target.result;\n          db.createObjectStore(table, {\n            keyPath: 'key'\n          });\n        };\n        request.onsuccess = () => resolve(request.result);\n        request.onerror = () => reject(request.error);\n      });\n    }\n    parse(data) {\n      let ans = {};\n      if (Array.isArray(data)) {\n        data.forEach(row => {\n          ans[row.key] = row.value;\n        });\n      } else if (data && data.value) {\n        return data.value;\n      } else {\n        return undefined;\n      }\n      return ans;\n    }\n    static get type() {\n      return 'indexeddb';\n    }\n  }\n  var indexeddb = IndexedDB;\n\n  class WebSQL extends storage {\n    constructor(options) {\n      super(options);\n      this.createStore();\n    }\n    _parsedData() {\n      let me = this;\n      return new Promise(resolve => {\n        this.store.transaction(function (tx) {\n          tx.executeSql(`SELECT * FROM ${me.tableName}`, [], (txn, results) => {\n            resolve(me.parse(results));\n          });\n        });\n      });\n    }\n    _select(keys) {\n      let me = this;\n      let q = keys.map(() => '?').join(', ');\n      return this.execSql(`SELECT key, value FROM ${me.tableName} WHERE key in (${q})`, keys);\n    }\n    _upsert(data) {\n      let table = this.tableName;\n      this.store.transaction(tx => {\n        for (let key in data) {\n          tx.executeSql(`INSERT OR IGNORE INTO ${table}(key, value) VALUES (?, ?)`, [key, data[key]]);\n          tx.executeSql(`UPDATE ${table} SET value = ? WHERE key = ?`, [this.constructor.stringify(data[key]), key]);\n        }\n      });\n    }\n    _delete(keys) {\n      let table = this.tableName;\n      let q = keys.map(() => '?').join(', ');\n      return this.execSql(`DELETE FROM ${table} WHERE key in (${q})`, keys);\n    }\n    _clear() {\n      let table = this.tableName;\n      return this.execSql(`DELETE FROM ${table}`);\n    }\n    get store() {\n      if (typeof window !== 'undefined') {\n        return window.openDatabase('bs', 1, this._options.description, this._options.size);\n      } else {\n        return true;\n      }\n    }\n    createStore() {\n      let table = this.tableName;\n      if (typeof window == 'undefined') return;\n      return this.execSql(`CREATE TABLE IF NOT EXISTS ${table} (key unique, value)`);\n    }\n    execSql(query, args = []) {\n      let me = this;\n      return new Promise(resolve => {\n        me.store.transaction(function (tx) {\n          tx.executeSql(query, args, (txn, results) => {\n            resolve(me.parse(results));\n          });\n        });\n      });\n    }\n    parse(results) {\n      let ans = {};\n      let len = results.rows.length,\n          i;\n      for (i = 0; i < len; i++) {\n        ans[results.rows.item(i).key] = this.constructor.parse(results.rows.item(i).value);\n      }\n      return ans;\n    }\n    static get type() {\n      return 'websql';\n    }\n  }\n  var websql = WebSQL;\n\n  class LocalStorage extends storage {\n    constructor(options) {\n      super(options);\n    }\n    _parsedData() {\n      return this.table;\n    }\n    get table() {\n      return this.constructor.parse(this.store.getItem(this.tableName));\n    }\n    set table(value) {\n      this.store.setItem(this.tableName, this.constructor.stringify(value));\n    }\n    get store() {\n      return window.localStorage;\n    }\n    static get type() {\n      return 'localstorage';\n    }\n  }\n  var localstorage = LocalStorage;\n\n  class Cookies extends storage {\n    constructor(options) {\n      super(options);\n    }\n    _parsedData() {\n      return this.table;\n    }\n    get table() {\n      let result = this.store,\n          ans = {};\n      result.split('; ').forEach(value => {\n        let [k, v] = value.split('=');\n        if (v) ans[k] = this.constructor.parse(v);\n      });\n      return ans[this.tableName] || {};\n    }\n    set table(value) {\n      document.cookie = `${this.tableName}=${storage.stringify(value)}; path=/`;\n    }\n    get store() {\n      return document.cookie;\n    }\n    static get type() {\n      return 'cookies';\n    }\n  }\n  var cookies = Cookies;\n\n  class JsonStorage extends storage {\n    constructor(options, data = {}) {\n      super(options);\n      this._upsert(this.constructor.parse(data));\n    }\n    _parsedData() {\n      return this._table;\n    }\n    get store() {\n      return this._table;\n    }\n    get table() {\n      return this._table || {};\n    }\n    set table(value) {\n      this._table = value;\n    }\n    static get type() {\n      return 'jsonstorage';\n    }\n  }\n  var jsonstorage = JsonStorage;\n\n  let storages = {};\n  storages[indexeddb.type] = indexeddb;\n  storages[websql.type] = websql;\n  storages[localstorage.type] = localstorage;\n  storages[cookies.type] = cookies;\n  storages[jsonstorage.type] = jsonstorage;\n  var storages_1 = storages;\n\n  class SifrrStorage {\n    constructor(options) {\n      if (typeof options == 'string') options = {\n        priority: [options]\n      };else options = options || {};\n      this._options = Object.assign(this.constructor.defaultOptions, options);\n      return this.storage;\n    }\n    get storage() {\n      let storage = this.supportedStore();\n      if (typeof storage == 'undefined') throw new Error('No available storage supported in this browser');\n      let matchingInstance = this.constructor._matchingInstance(this._options, storage.type);\n      if (matchingInstance) {\n        return matchingInstance;\n      } else {\n        let storageInstance = new storage(this._options);\n        this.constructor._add(storageInstance);\n        return storageInstance;\n      }\n    }\n    get priority() {\n      return this._options.priority.concat(['indexeddb', 'websql', 'localstorage', 'cookies', 'jsonstorage']);\n    }\n    supportedStore() {\n      for (let i = 0; i < this.priority.length; i++) {\n        let store = this.constructor.availableStores[this.priority[i]];\n        if (store && new store(this._options).isSupported()) return store;\n      }\n    }\n    static _matchingInstance(options, type) {\n      let allInstances = this.all,\n          i;\n      let length = allInstances.length;\n      for (i = 0; i < length; i++) {\n        if (allInstances[i]._isEqual(options, type)) return allInstances[i];\n      }\n      return false;\n    }\n    static _add(instance) {\n      this._all = this._all || [];\n      this._all.push(instance);\n    }\n    static get availableStores() {\n      return storages_1;\n    }\n    static get defaultOptions() {\n      return {\n        priority: [],\n        name: 'SifrrStorage',\n        version: 1,\n        description: 'Sifrr Storage',\n        size: 5 * 1024 * 1024\n      };\n    }\n    static get all() {\n      return this._all || [];\n    }\n    static json(data) {\n      return new jsonstorage({}, data);\n    }\n  }\n  var sifrr_storage = SifrrStorage;\n\n  return sifrr_storage;\n\n})));\n/*! (c) @aadityataparia */\n//# sourceMappingURL=sifrr.storage.js.map\n","window.Sifrr = window.Sifrr || {};\nwindow.Sifrr.Dom = require('@sifrr/dom');\nwindow.Sifrr.Storage = require('@sifrr/storage');\n\nconst Sifrr = window.Sifrr;\n\nconst location = window.location.href.split('/');\nlocation.pop();\n\nSifrr.Dom.setup({\n  baseUrl: location.join('/') + '/'\n});\nSifrr.Dom.Event.add('click')\nSifrr.Dom.load('sifrr-stater');\nSifrr.Dom.load('sifrr-tabs');\nSifrr.Dom.load('sifrr-lazy-picture');\n"],"names":["request","module","type","url","options","_options","_url","window","fetch","this","then","resp","contentType","headers","get","ok","includes","json","error","Error","statusText","response","params","Object","keys","length","map","k","encodeURIComponent","join","assign","body","JSON","stringify","query","variables","accept","hasOwnProperty","base","relative","stack","split","parts","pop","i","push","qIndex","indexOf","substring","Json","data","ans","parse","e","Array","isArray","forEach","v","a","b","key","deepClone","clone","temp","document","createElement","sfn","constants","cloneNode","update","element","name","newValue","fromValue","className","getAttribute","setAttribute","removeAttribute","nodeName","value","updateAttribute$1","shallowEqual","TEXT_NODE","COMMENT_NODE","makeChildrenEqual","parent","newChildren","oldL","childNodes","newL","removeChild","lastChild","appendChild","l","Math","min","item","head","firstChild","makeEqual","nextSibling","oldNode","newNode","state","replaceWith","nodeType","attr","oldAttrs","attributes","newAttrs","j","hasAttribute","specified","makeequal","TREE_WALKER","createTreeWalker","NodeFilter","SHOW_ALL","roll","n","filter","node","currentNode","parentNode","nextNode","Ref","idx","ref","stateMap","refs","x","fxn","indices","makeChildrenEqual$1","updateAttribute$2","collect$1","create$1","TEXT_NODE$1","COMMENT_NODE$1","ELEMENT_NODE","TEMPLATE","isHtml","el","dataset","sifrrHtml","contentEditable","sifrrRepeat","creator","nodeValue","trim","sm","innerHTML","html","text","replace","attrs","attrStateMap","attribute","events","Parser","_refs","constructor","dom","event","eventLis","evaluateString","slice","bind","val","undefined","children","toString","prototype","call","content","textContent","target","path","sifrrBind","root","_root","isSifrr","host","string","match","replacer","f","Function","parser","TEMPLATE$1","Loader","elemName","config","all","instance","elementName","urls","htmlUrl","me","file","_all","template","querySelector","add","js","jsUrl","baseUrl","querySelectorAll","script","catch","console","warn","log","loader","collect$2","create$2","TEMPLATE$2","creator$1","from","ret","avalue","nodeData","updateState","simpleEl","doms","newState","oldState","_oldState","simpleelement","defaultState","oldDisplay","firstElementChild","style","display","remove","defineProperty","_state","sifrrClone","deep","elementClassFactory","baseClass","htmlElementClass","concat","observedAttrs","_ctemp","_stateMap","createStateMap","ctemp","toLowerCase","_ctempusr","useSR","_nocont","noContent","useShadowRoot","collectRefs","attachShadow","shadowRoot","addEventListener","twoWayBind","__content","onConnect","removeEventListener","onDisconnect","attrName","oldVal","newVal","onAttributeChange","onStateChange","args","sr","_arrayToDom","_domL","domArray","HTMLElement","SYNTHETIC_EVENTS","cssMatchEvent","callEach","fxns","css","matches","Promise","resolve","composedPath","eventHandler","nativeToSyntheticEvent","splice","dispatchEvent","Event","TEMPLATE$3","SifrrDom","Element","SimpleElement","Url","str","extra","tmp","String","raw","s","register","customElements","define","elements","setup","addListener","load","executeScripts","relativeTo","relativeUrl","absolute","factory","require$$0","storage","jsonConstructor","table","tableName","version","description","store","_parsedData","_select","_parseKeyValue","_upsert","_delete","_clear","indexeddb","_tx","result","promises","r","promise","oldResult","scope","fn","createStore","db","reject","tx","transaction","objectStore","onsuccess","onerror","indexedDB","open","onupgradeneeded","createObjectStore","row","websql","executeSql","txn","results","q","execSql","openDatabase","size","len","rows","localstorage","getItem","setItem","localStorage","cookies","cookie","jsonstorage","_table","storages","storages_1","defaultOptions","supportedStore","matchingInstance","_matchingInstance","storageInstance","_add","priority","availableStores","isSupported","allInstances","_isEqual","Sifrr","Dom","Storage","require$$1","location","href"],"mappings":"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"}