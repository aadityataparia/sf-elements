{"version":3,"file":"example.bundled.js","sources":["../node_modules/@sifrr/fetch/dist/sifrr.fetch.js","../node_modules/@sifrr/dom/dist/sifrr.dom.js","../node_modules/@sifrr/storage/dist/sifrr.storage.js","example.js"],"sourcesContent":["/*! Sifrr.Fetch v0.1.0-alpha2 - sifrr project - 2018/12/18 23:17:41 UTC */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Sifrr = global.Sifrr || {}, global.Sifrr.Fetch = factory());\n}(this, (function () { 'use strict';\n\n  class Request {\n    constructor(type, url, options) {\n      this.type = type;\n      this._options = options;\n      this._url = url;\n    }\n    get response() {\n      return window.fetch(this.url, this.options).then(resp => {\n        let contentType = resp.headers.get('content-type');\n        if (contentType && contentType.includes('application/json')) {\n          resp = resp.json();\n        }\n        if (resp.ok) {\n          return resp;\n        } else {\n          let error = Error(resp.statusText);\n          error.response = resp;\n          throw error;\n        }\n      });\n    }\n    get url() {\n      let params = delete this._options.params;\n      if (params && Object.keys(params).length > 0) {\n        return this._url + '?' + Object.keys(params).map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k])).join('&');\n      } else {\n        return this._url;\n      }\n    }\n    get options() {\n      return Object.assign(this._options, {\n        method: this.type,\n        headers: Object.assign({\n          'accept': 'application/json'\n        }, this._options.headers || {}),\n        mode: 'cors',\n        redirect: 'follow'\n      });\n    }\n  }\n  var request = Request;\n\n  class SifrrFetch {\n    static get(url, options = {}) {\n      return new request('GET', url, options).response;\n    }\n    static post(url, options = {}) {\n      return new request('POST', url, options).response;\n    }\n    static put(url, options = {}) {\n      return new request('PUT', url, options).response;\n    }\n    static delete(url, options = {}) {\n      return new request('DELETE', url, options).response;\n    }\n    static file(url, options = {}) {\n      options.headers = options.headers || {};\n      options.headers.accept = options.headers.accept || '*/*';\n      return new request('GET', url, options).response;\n    }\n  }\n  var sifrr_fetch = SifrrFetch;\n\n  return sifrr_fetch;\n\n})));\n/*! (c) @aadityataparia */\n","/*! Sifrr.Dom v0.0.2-alpha - sifrr project */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('@sifrr/fetch')) :\n  typeof define === 'function' && define.amd ? define(['@sifrr/fetch'], factory) :\n  (global.Sifrr = global.Sifrr || {}, global.Sifrr.Dom = factory(global.Sifrr.Fetch));\n}(this, (function (fetch) { 'use strict';\n\n  fetch = fetch && fetch.hasOwnProperty('default') ? fetch['default'] : fetch;\n\n  const URLExt = {\n    absolute: (base, relative) => {\n      let stack = base.split('/'),\n          parts = relative.split('/');\n      stack.pop();\n      for (let i = 0; i < parts.length; i++) {\n        if (parts[i] == '.') continue;\n        if (parts[i] == '..') stack.pop();else stack.push(parts[i]);\n      }\n      return stack.join('/');\n    },\n    getRoutes: url => {\n      if (url[0] != '/') {\n        url = '/' + url;\n      }\n      let qIndex = url.indexOf('?');\n      if (qIndex != -1) {\n        url = url.substring(0, qIndex);\n      }\n      return url.split('/');\n    }\n  };\n  var url = URLExt;\n\n  const Json = {\n    parse: data => {\n      let ans = {};\n      if (typeof data == 'string') {\n        try {\n          ans = JSON.parse(data);\n        } catch (e) {\n          return data;\n        }\n        return Json.parse(ans);\n      } else if (Array.isArray(data)) {\n        ans = [];\n        data.forEach((v, i) => {\n          ans[i] = Json.parse(v);\n        });\n      } else if (typeof data == 'object') {\n        for (const k in data) {\n          ans[k] = Json.parse(data[k]);\n        }\n      } else {\n        return data;\n      }\n      return ans;\n    },\n    stringify: data => {\n      if (typeof data == 'string') {\n        return data;\n      } else {\n        return JSON.stringify(data);\n      }\n    },\n    shallowEqual: (a, b) => {\n      for (let key in a) {\n        if (!(key in b) || a[key] != b[key]) {\n          return false;\n        }\n      }\n      for (let key in b) {\n        if (!(key in a) || a[key] != b[key]) {\n          return false;\n        }\n      }\n      return true;\n    },\n    deepClone: json => {\n      if (Array.isArray(json)) return json.map(i => Json.deepClone(i));\n      if (typeof json !== 'object' || json === null) return json;\n      let clone = {};\n      for (let key in json) {\n        clone[key] = Json.deepClone(json[key]);\n      }\n      return clone;\n    }\n  };\n  var json = Json;\n\n  const temp = window.document.createElement('template');\n  const sfn = window.document.createElement('sifrr-node');\n  var constants = {\n    SIFRR_NODE: () => sfn.cloneNode(),\n    TEMPLATE: () => temp.cloneNode(),\n    TEXT_NODE: 3,\n    COMMENT_NODE: 8,\n    ELEMENT_NODE: 1\n  };\n\n  function updateAttribute(element, name, newValue) {\n    if (name === 'class') {\n      const fromValue = element.className;\n      if (fromValue != newValue) {\n        if (newValue == 'null' || newValue == 'undefined' || newValue == 'false' || !newValue) {\n          element.className = '';\n        } else {\n          element.className = newValue;\n        }\n      }\n    } else {\n      const fromValue = element.getAttribute(name);\n      if (fromValue != newValue) {\n        if (newValue == 'null' || newValue == 'undefined' || newValue == 'false' || !newValue) {\n          if (fromValue) element.removeAttribute(name);\n        } else {\n          element.setAttribute(name, newValue);\n        }\n      }\n      if ((element.nodeName == 'SELECT' || element.nodeName == 'INPUT') && name == 'value') element.value = newValue;\n    }\n  }\n  var update = {\n    updateAttribute\n  };\n\n  const {\n    updateAttribute: updateAttribute$1\n  } = update;\n  const {\n    shallowEqual\n  } = json;\n  const {\n    TEXT_NODE,\n    COMMENT_NODE\n  } = constants;\n  function makeChildrenEqual(parent, newChildren) {\n    const oldL = parent.childNodes.length,\n          newL = newChildren.length;\n    if (oldL > newL) {\n      let i = oldL;\n      while (i > newL) {\n        parent.removeChild(parent.lastChild);\n        i--;\n      }\n    } else if (oldL < newL) {\n      let i = oldL;\n      while (i < newL) {\n        parent.appendChild(newChildren[i]);\n        i++;\n      }\n    }\n    const l = Math.min(newL, oldL);\n    for (let i = 0, item, head = parent.firstChild; i < l; i++) {\n      item = newChildren[i];\n      head = makeEqual(head, item).nextSibling;\n    }\n  }\n  function makeEqual(oldNode, newNode) {\n    if (newNode === null) return oldNode;\n    if (newNode.type === 'stateChange') {\n      if (!shallowEqual(oldNode.state, newNode.state)) {\n        oldNode.state = newNode.state;\n      }\n      return oldNode;\n    }\n    if (oldNode.nodeName !== newNode.nodeName) {\n      oldNode.replaceWith(newNode);\n      return newNode;\n    }\n    if (oldNode.nodeType === TEXT_NODE || oldNode.nodeType === COMMENT_NODE) {\n      if (oldNode.data !== newNode.data) oldNode.data = newNode.data;\n      return oldNode;\n    }\n    if (newNode.state) oldNode.state = newNode.state;\n    let oldAttrs = oldNode.attributes,\n        newAttrs = newNode.attributes,\n        attr;\n    for (let i = newAttrs.length - 1; i >= 0; --i) {\n      updateAttribute$1(oldNode, newAttrs[i].name, newAttrs[i].value);\n    }\n    for (let j = oldAttrs.length - 1; j >= 0; --j) {\n      attr = oldAttrs[j];\n      if (!newNode.hasAttribute(attr.name) && attr.specified !== false) oldNode.removeAttribute(attr.name);\n    }\n    makeChildrenEqual(oldNode, newNode.childNodes);\n    return oldNode;\n  }\n  var makeequal = {\n    makeEqual,\n    makeChildrenEqual\n  };\n\n  const TREE_WALKER = window.document.createTreeWalker(window.document, window.NodeFilter.SHOW_ALL, null, false);\n  TREE_WALKER.roll = function (n, filter = false) {\n    let node = this.currentNode;\n    while (--n) {\n      if (filter && filter(node)) {\n        node = TREE_WALKER.nextSibling() || TREE_WALKER.parentNode();\n      } else node = TREE_WALKER.nextNode();\n    }\n    return node;\n  };\n  function collect(element, stateMap = element.stateMap, filter) {\n    const refs = [];\n    TREE_WALKER.currentNode = element;\n    stateMap.map(x => refs.push(TREE_WALKER.roll(x.idx, filter)));\n    return refs;\n  }\n  class Ref {\n    constructor(idx, ref) {\n      this.idx = idx;\n      this.ref = ref;\n    }\n  }\n  function create(node, fxn, filter = false) {\n    let indices = [],\n        ref,\n        idx = 0;\n    TREE_WALKER.currentNode = node;\n    while (node) {\n      if (ref = fxn(node)) {\n        indices.push(new Ref(idx + 1, ref));\n        idx = 1;\n      } else {\n        idx++;\n      }\n      if (filter && filter(node)) {\n        node = TREE_WALKER.nextSibling() || TREE_WALKER.parentNode();\n      } else node = TREE_WALKER.nextNode();\n    }\n    return indices;\n  }\n  var ref = {\n    walker: TREE_WALKER,\n    collect,\n    create,\n    Ref\n  };\n\n  const {\n    makeChildrenEqual: makeChildrenEqual$1\n  } = makeequal;\n  const {\n    updateAttribute: updateAttribute$2\n  } = update;\n  const {\n    collect: collect$1,\n    create: create$1\n  } = ref;\n  const {\n    TEXT_NODE: TEXT_NODE$1,\n    COMMENT_NODE: COMMENT_NODE$1,\n    ELEMENT_NODE\n  } = constants;\n  const TEMPLATE = constants.TEMPLATE();\n  function isHtml(el) {\n    return el.dataset && el.dataset.sifrrHtml == 'true' || el.contentEditable == 'true' || el.nodeName == 'TEXTAREA' || el.nodeName == 'STYLE' || el.dataset && el.dataset.sifrrRepeat;\n  }\n  function creator(el) {\n    if (el.nodeType === TEXT_NODE$1 || el.nodeType === COMMENT_NODE$1) {\n      const x = el.nodeValue;\n      if (x.indexOf('${') > -1) return {\n        html: false,\n        text: x.trim()\n      };\n    } else if (el.nodeType === ELEMENT_NODE) {\n      const sm = {};\n      if (isHtml(el)) {\n        const innerHTML = el.innerHTML;\n        if (innerHTML.indexOf('${') >= 0) {\n          sm.html = true;\n          sm.text = innerHTML.replace(/<!--(.*)-->/g, '$1');\n        }\n      }\n      const attrs = el.attributes || [],\n            l = attrs.length;\n      const attrStateMap = {\n        events: {}\n      };\n      for (let i = 0; i < l; i++) {\n        const attribute = attrs[i];\n        if (attribute.name[0] === '$') {\n          attrStateMap.events[attribute.name] = attribute.value;\n        } else if (attribute.value.indexOf('${') >= 0) {\n          attrStateMap[attribute.name] = attribute.value;\n        }\n      }\n      if (Object.keys(attrStateMap).length > 0) sm.attributes = attrStateMap;\n      if (Object.keys(sm).length > 0) return sm;\n    }\n    return 0;\n  }\n  const Parser = {\n    collectRefs: (el, stateMap) => collect$1(el, stateMap, isHtml),\n    createStateMap: element => create$1(element, creator, isHtml),\n    update: element => {\n      if (!element._refs) {\n        return false;\n      }\n      const l = element._refs.length;\n      for (let i = 0; i < l; i++) {\n        const data = element.constructor.stateMap[i].ref;\n        const dom = element._refs[i];\n        if (data.attributes) {\n          for (let key in data.attributes) {\n            if (key === 'events') {\n              for (let event in data.attributes.events) {\n                dom[event] = Parser.evaluateString(data.attributes.events[event], element);\n              }\n            } else {\n              const val = Parser.evaluateString(data.attributes[key], element);\n              updateAttribute$2(dom, key, val);\n            }\n          }\n        }\n        if (data.html === undefined) continue;\n        const newValue = Parser.evaluateString(data.text, element);\n        if (!newValue) {\n          dom.textContent = '';\n          continue;\n        }\n        if (data.html) {\n          let children;\n          if (Array.isArray(newValue)) {\n            children = newValue;\n          } else if (newValue.nodeType) {\n            children = [newValue];\n          } else {\n            TEMPLATE.innerHTML = newValue.toString()\n            .replace(/(&lt;)(((?!&gt;).)*)(&gt;)(((?!&lt;).)*)(&lt;)\\/(((?!&gt;).)*)(&gt;)/g, '<$2>$5</$8>')\n            .replace(/(&lt;)(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)(((?!&gt;).)*)(&gt;)/g, '<$2$3>');\n            children = Array.prototype.slice.call(TEMPLATE.content.childNodes);\n          }\n          if (children.length < 1) dom.textContent = '';else makeChildrenEqual$1(dom, children);\n        } else {\n          if (dom.nodeValue != newValue) {\n            dom.nodeValue = newValue;\n          }\n        }\n      }\n    },\n    twoWayBind: e => {\n      const target = e.path ? e.path[0] : e.target;\n      if (!target.dataset.sifrrBind) return;\n      const value = target.value === undefined ? target.innerHTML : target.value;\n      let state = {};\n      let root;\n      if (target._root) {\n        root = target._root;\n      } else {\n        root = target;\n        while (!root.isSifrr) root = root.parentNode || root.host;\n        target._root = root;\n      }\n      state[target.dataset.sifrrBind] = value;\n      root.state = state;\n    },\n    evaluateString: (string, element) => {\n      if (string.indexOf('${') < 0) return string;\n      string = string.trim();\n      if (string.match(/^\\${([^{}$]|{([^{}$])*})*}$/)) return replacer(string);\n      return replacer('`' + string + '`');\n      function replacer(match) {\n        if (match[0] == '$') match = match.slice(2, -1);\n        let f;\n        if (match.indexOf('return ') >= 0) {\n          f = new Function(match).bind(element);\n        } else {\n          f = new Function('return ' + match).bind(element);\n        }\n        return f();\n      }\n    }\n  };\n  var parser = Parser;\n\n  const TEMPLATE$1 = constants.TEMPLATE();\n  class Loader {\n    constructor(elemName, config = {}) {\n      if (!fetch) throw Error('Sifrr.Dom.load requires Sifrr.Fetch to work.');\n      if (this.constructor.all[elemName]) return this.constructor.all[elemName].instance;\n      this.elementName = elemName;\n      this.config = config;\n      this.constructor.urls[elemName] = this.htmlUrl;\n    }\n    get html() {\n      const me = this;\n      if (this.constructor.all[this.elementName] && this.constructor.all[this.elementName].html) return this.constructor.all[this.elementName].html;\n      const html = fetch.file(this.htmlUrl).then(resp => resp.text()).then(file => {\n        TEMPLATE$1.innerHTML = file;\n        return TEMPLATE$1.content;\n      }).then(html => {\n        Loader._all[me.elementName].template = html.querySelector('template');\n        return html;\n      });\n      Loader.add(me.elementName, {\n        instance: me,\n        html: html\n      });\n      return html;\n    }\n    get js() {\n      const me = this;\n      if (this.constructor.all[this.elementName] && this.constructor.all[this.elementName].js) return this.constructor.all[this.elementName].js;\n      const js = fetch.file(this.jsUrl).then(resp => resp.text());\n      Loader.add(me.elementName, {\n        instance: me,\n        js: js\n      });\n      return js;\n    }\n    get htmlUrl() {\n      return this.config.url || `${this.config.baseUrl || ''}/elements/${this.elementName.split('-').join('/')}.html`;\n    }\n    get jsUrl() {\n      return this.config.url || `${this.config.baseUrl || ''}/elements/${this.elementName.split('-').join('/')}.js`;\n    }\n    executeScripts() {\n      return this.html.then(file => {\n        file.querySelectorAll('script').forEach(script => {\n          if (script.hasAttribute('src')) {\n            window.document.body.appendChild(script);\n          } else {\n            new Function(script.text).bind(window)();\n          }\n        });\n      }).catch(e => {\n        window.console.warn(e);\n        window.console.log('Trying to get js file.');\n        this.js.then(script => {\n          new Function(script).bind(window)();\n        });\n      });\n    }\n    static add(elemName, instance) {\n      Loader._all[elemName] = Object.assign(Loader._all[elemName] || {}, instance);\n    }\n    static get all() {\n      return Loader._all;\n    }\n  }\n  Loader._all = {};\n  Loader.urls = {};\n  var loader = Loader;\n\n  const {\n    collect: collect$2,\n    create: create$2\n  } = ref;\n  const TEMPLATE$2 = constants.TEMPLATE();\n  function creator$1(node) {\n    if (node.nodeType !== 3) {\n      if (node.attributes !== undefined) {\n        const attrs = Array.from(node.attributes),\n              l = attrs.length;\n        const ret = [];\n        for (let i = 0; i < l; i++) {\n          const avalue = attrs[i].value;\n          if (avalue[0] === '$') {\n            ret.push({\n              name: attrs[i].name,\n              text: avalue.slice(2, -1)\n            });\n          }\n        }\n        if (ret.length > 0) return ret;\n      }\n      return 0;\n    } else {\n      let nodeData = node.nodeValue;\n      if (nodeData[0] === '$') {\n        node.nodeValue = '';\n        return nodeData.slice(2, -1);\n      }\n      return 0;\n    }\n  }\n  function updateState(simpleEl) {\n    const doms = simpleEl._refs,\n          refs = simpleEl.stateMap,\n          l = refs.length;\n    const newState = simpleEl.state,\n          oldState = simpleEl._oldState;\n    for (let i = 0; i < l; i++) {\n      const data = refs[i].ref,\n            dom = doms[i];\n      if (Array.isArray(data)) {\n        const l = data.length;\n        for (let i = 0; i < l; i++) {\n          const attr = data[i];\n          if (oldState[attr.text] !== newState[attr.text]) {\n            if (attr.name === 'class') dom.className = newState[attr.text] || '';else dom.setAttribute(attr.name, newState[attr.text]);\n          }\n        }\n      } else {\n        if (oldState[data] != newState[data]) dom.nodeValue = newState[data];\n      }\n    }\n  }\n  function SimpleElement(content, defaultState) {\n    if (typeof content === 'string') {\n      TEMPLATE$2.innerHTML = content;\n      content = TEMPLATE$2.content.firstElementChild || TEMPLATE$2.content.firstChild;\n      const oldDisplay = content.style.display;\n      content.style.display = 'none';\n      window.document.body.appendChild(content);\n      content.remove();\n      content.style.display = oldDisplay;\n    }\n    if (content.nodeName.indexOf('-') !== -1 || content.getAttribute('is') && content.getAttribute('is').indexOf('-') >= 0 || content.isSifrr && content.isSifrr()) return content;\n    content.stateMap = create$2(content, creator$1);\n    content._refs = collect$2(content, content.stateMap);\n    Object.defineProperty(content, 'state', {\n      get: () => content._state,\n      set: v => {\n        content._oldState = Object.assign({}, content._state);\n        content._state = Object.assign(content._state || {}, v);\n        updateState(content);\n      }\n    });\n    if (defaultState) content.state = defaultState;\n    content.sifrrClone = function (deep) {\n      const clone = content.cloneNode(deep);\n      clone.stateMap = content.stateMap;\n      clone._refs = collect$2(clone, content.stateMap);\n      Object.defineProperty(clone, 'state', {\n        get: () => clone._state,\n        set: v => {\n          clone._oldState = Object.assign({}, clone._state);\n          clone._state = Object.assign(clone._state || {}, v);\n          updateState(clone);\n        }\n      });\n      if (content.state) clone.state = content.state;\n      return clone;\n    };\n    return content;\n  }\n  var simpleelement = SimpleElement;\n\n  function elementClassFactory(baseClass) {\n    return class extends baseClass {\n      static extends(htmlElementClass) {\n        return elementClassFactory(htmlElementClass);\n      }\n      static get observedAttributes() {\n        return ['data-sifrr-state'].concat(this.observedAttrs());\n      }\n      static observedAttrs() {\n        return [];\n      }\n      static get template() {\n        return loader.all[this.elementName].template;\n      }\n      static get ctemp() {\n        this._ctemp = this._ctemp || this.template;\n        return this._ctemp;\n      }\n      static get stateMap() {\n        this._stateMap = this._stateMap || parser.createStateMap(this.ctemp.content);\n        return this._stateMap;\n      }\n      static get elementName() {\n        return this.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n      }\n      static onStateChange() {}\n      static get useShadowRoot() {\n        return this.ctemp.getAttribute('use-shadow-root') !== 'false' && this.useSR;\n      }\n      constructor() {\n        super();\n        if (this.constructor.defaultState || this.state) this._state = Object.assign({}, this.constructor.defaultState, this.state);\n        const content = this.constructor.ctemp.content.cloneNode(true);\n        if (this.constructor.useShadowRoot) {\n          this._refs = parser.collectRefs(content, this.constructor.stateMap);\n          this.attachShadow({\n            mode: 'open'\n          });\n          this.shadowRoot.appendChild(content);\n          this.shadowRoot.addEventListener('change', parser.twoWayBind);\n        } else {\n          this.__content = content;\n        }\n      }\n      connectedCallback() {\n        if (!this.constructor.useShadowRoot) {\n          this.textContent = '';\n          this._refs = parser.collectRefs(this.__content, this.constructor.stateMap);\n          this.appendChild(this.__content);\n          if (this._state || this.hasAttribute('data-sifrr-state')) this.update();\n        } else {\n          if (!this.hasAttribute('data-sifrr-state') && this._state) this.update();\n        }\n        this.onConnect();\n      }\n      onConnect() {}\n      disconnectedCallback() {\n        if (this.shadowRoot) this.shadowRoot.removeEventListener('change', parser.twoWayBind);\n        if (!this.constructor.useShadowRoot) this.textContent = '';\n        this.onDisconnect();\n      }\n      onDisconnect() {}\n      attributeChangedCallback(attrName, oldVal, newVal) {\n        if (attrName === 'data-sifrr-state') {\n          this.state = json.parse(newVal);\n        }\n        this.onAttributeChange(attrName, oldVal, newVal);\n      }\n      onAttributeChange() {}\n      get state() {\n        return this._state;\n      }\n      set state(v) {\n        this._state = this._state || {};\n        Object.assign(this._state, v);\n        this.update();\n      }\n      update() {\n        parser.update(this);\n        this.onStateChange();\n        this.constructor.onStateChange(this);\n      }\n      onStateChange() {}\n      isSifrr(name = null) {\n        if (name) return name === this.constructor.elementName;else return true;\n      }\n      sifrrClone(deep) {\n        const clone = this.cloneNode(deep);\n        return clone;\n      }\n      clearState() {\n        this._state = {};\n        this.update();\n      }\n      $(args, sr = true) {\n        if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelector(args);else return this.querySelector(args);\n      }\n      $$(args, sr = true) {\n        if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelectorAll(args);else return this.querySelectorAll(args);\n      }\n      static addArrayToDom(key, template) {\n        this._arrayToDom = this._arrayToDom || {};\n        this._arrayToDom[this.elementName] = this._arrayToDom[this.elementName] || {};\n        this._arrayToDom[this.elementName][key] = simpleelement(template);\n      }\n      arrayToDom(key, newState = this.state[key]) {\n        this._domL = this._domL || {};\n        const oldL = this._domL[key] || 0;\n        const domArray = [];\n        const newL = newState.length;\n        let temp;\n        try {\n          temp = this.constructor._arrayToDom[this.constructor.elementName][key];\n        } catch (e) {\n          return window.console.log(`[error]: No arrayToDom data of '${key}' added in ${this.constructor.elementName}.`);\n        }\n        for (let i = 0; i < newL; i++) {\n          if (i < oldL) {\n            domArray.push({\n              type: 'stateChange',\n              state: newState[i]\n            });\n          } else {\n            const el = temp.sifrrClone(true);\n            el.state = newState[i];\n            domArray.push(el);\n          }\n        }\n        this._domL[key] = newL;\n        return domArray;\n      }\n    };\n  }\n  var element = elementClassFactory(window.HTMLElement);\n\n  const SYNTHETIC_EVENTS = {};\n  const nativeToSyntheticEvent = (e, name) => {\n    return Promise.resolve((() => {\n      let dom = e.composedPath ? e.composedPath()[0] : e.target;\n      while (dom) {\n        const eventHandler = dom[`$${name}`];\n        if (eventHandler) {\n          eventHandler(e, dom);\n        }\n        cssMatchEvent(e, name, dom);\n        dom = dom.parentNode || dom.host;\n      }\n    })());\n  };\n  const cssMatchEvent = (e, name, dom) => {\n    function callEach(fxns) {\n      fxns.forEach(fxn => fxn(e, dom));\n    }\n    for (let css in SYNTHETIC_EVENTS[name]) {\n      if (typeof dom.matches === 'function' && dom.matches(css) || dom.nodeType === 9 && css === 'document') callEach(SYNTHETIC_EVENTS[name][css]);\n    }\n  };\n  const Event = {\n    add: name => {\n      if (SYNTHETIC_EVENTS[name]) return false;\n      window.document.addEventListener(name, event => nativeToSyntheticEvent(event, name), {\n        capture: true,\n        passive: true\n      });\n      SYNTHETIC_EVENTS[name] = {};\n      return true;\n    },\n    addListener: (name, css, fxn) => {\n      const fxns = SYNTHETIC_EVENTS[name][css] || [];\n      if (fxns.indexOf(fxn) < 0) fxns.push(fxn);\n      SYNTHETIC_EVENTS[name][css] = fxns;\n      return true;\n    },\n    removeListener: (name, css, fxn) => {\n      const fxns = SYNTHETIC_EVENTS[name][css] || [],\n            i = fxns.indexOf(fxn);\n      if (i >= 0) fxns.splice(i, 1);\n      SYNTHETIC_EVENTS[name][css] = fxns;\n      return true;\n    },\n    trigger: (el, name, options) => {\n      el.dispatchEvent(new window.Event(name, Object.assign({\n        bubbles: true,\n        composed: true\n      }, options)));\n    }\n  };\n  var event = Event;\n\n  const {\n    TEMPLATE: TEMPLATE$3\n  } = constants;\n  let SifrrDom = {};\n  SifrrDom.elements = {};\n  SifrrDom.Element = element;\n  SifrrDom.Parser = parser;\n  SifrrDom.makeEqual = makeequal;\n  SifrrDom.Loader = loader;\n  SifrrDom.SimpleElement = simpleelement;\n  SifrrDom.Event = event;\n  SifrrDom.html = (str, ...extra) => {\n    const tmp = TEMPLATE$3();\n    if (str[0] && typeof str[0] === 'string') {\n      str = String.raw(str, ...extra).replace(/{{(.*)}}/g, '${$1}');\n      tmp.innerHTML = str;\n    } else if (str[0]) {\n      Array.from(str).forEach(s => {\n        tmp.appendChild(s);\n      });\n    } else {\n      return str;\n    }\n    return tmp;\n  };\n  SifrrDom.register = (Element, options) => {\n    Element.useSR = SifrrDom.config.useShadowRoot;\n    const name = Element.elementName;\n    if (!name) {\n      window.console.error('Error creating Custom Element: No name given.', Element);\n    } else if (window.customElements.get(name)) {\n      window.console.warn(`Error creating Element: ${name} - Custom Element with this name is already defined.`);\n    } else if (name.indexOf('-') < 1) {\n      window.console.error(`Error creating Element: ${name} - Custom Element name must have one dash '-'`);\n    } else {\n      try {\n        window.customElements.define(name, Element, options);\n        SifrrDom.elements[name] = Element;\n        return true;\n      } catch (error) {\n        window.console.error(`Error creating Custom Element: ${name} - ${error}`);\n        return false;\n      }\n    }\n    return false;\n  };\n  SifrrDom.setup = function (config) {\n    SifrrDom.config = Object.assign({\n      baseUrl: '',\n      useShadowRoot: true\n    }, config);\n    SifrrDom.Event.add('input');\n    SifrrDom.Event.add('change');\n    SifrrDom.Event.addListener('change', 'document', SifrrDom.Parser.twoWayBind);\n    SifrrDom.Event.addListener('input', 'document', SifrrDom.Parser.twoWayBind);\n  };\n  SifrrDom.load = function (elemName, config = {\n    baseUrl: SifrrDom.config.baseUrl\n  }) {\n    let loader$$1 = new SifrrDom.Loader(elemName, config);\n    return loader$$1.executeScripts();\n  };\n  SifrrDom.Url = url;\n  SifrrDom.Json = json;\n  SifrrDom.relativeTo = function (elemName, relativeUrl) {\n    if (typeof elemName === 'string') return SifrrDom.Url.absolute(SifrrDom.Loader.urls[elemName], relativeUrl);\n  };\n  var sifrr_dom = SifrrDom;\n\n  return sifrr_dom;\n\n})));\n/*! (c) @aadityataparia */\n//# sourceMappingURL=sifrr.dom.js.map\n","/*! Sifrr.Storage v0.1.0-alpha2 - sifrr project - 2018/12/18 23:17:44 UTC */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Sifrr = global.Sifrr || {}, global.Sifrr.Storage = factory());\n}(this, (function () { 'use strict';\n\n  class Json {\n    static parse(data) {\n      let ans = {};\n      if (typeof data == 'string') {\n        try {\n          ans = JSON.parse(data);\n        } catch (e) {\n          return data;\n        }\n        return this.parse(ans);\n      } else if (Array.isArray(data)) {\n        ans = [];\n        data.forEach((v, i) => {\n          ans[i] = this.parse(v);\n        });\n      } else if (typeof data == 'object') {\n        for (const k in data) {\n          ans[k] = this.parse(data[k]);\n        }\n      } else {\n        return data;\n      }\n      return ans;\n    }\n    static stringify(data) {\n      if (typeof data == 'string') {\n        return data;\n      } else {\n        return JSON.stringify(data);\n      }\n    }\n  }\n  var json = Json;\n\n  class Storage {\n    constructor(options) {\n      this._options = options;\n    }\n    _parseKeyValue(key, value) {\n      let jsonConstructor = {}.constructor;\n      if (typeof value == 'undefined') {\n        if (Array.isArray(key)) {\n          return key;\n        } else if (typeof key == 'string') {\n          return [key];\n        } else if (key.constructor === jsonConstructor) {\n          return key;\n        }{\n          throw Error('Invalid Key');\n        }\n      } else if (typeof key == 'string') {\n        let ans = {};\n        ans[key] = value;\n        return ans;\n      } else {\n        throw Error('Invalid Key');\n      }\n    }\n    _select(keys) {\n      return this.data().then(data => {\n        let ans = {};\n        keys.forEach(key => ans[key] = data[key]);\n        return ans;\n      });\n    }\n    _upsert(data) {\n      let table = this.table;\n      for (let key in data) {\n        table[key] = data[key];\n      }\n      this.table = table;\n    }\n    _delete(keys) {\n      let table = this.table;\n      keys.forEach(key => delete table[key]);\n      this.table = table;\n    }\n    _clear() {\n      this.table = {};\n    }\n    _isEqual(options, type) {\n      if (this.tableName == options.name + options.version && this.type == type) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    get tableName() {\n      return this.name + this.version;\n    }\n    get name() {\n      return this._options.name;\n    }\n    get version() {\n      return this._options.version;\n    }\n    get description() {\n      return this._options.description;\n    }\n    get type() {\n      return this.constructor.type;\n    }\n    isSupported() {\n      if (typeof window == 'undefined' || typeof document == 'undefined') {\n        return true;\n      } else if (window && typeof this.store != 'undefined') {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    all() {\n      return this.data();\n    }\n    data() {\n      return Promise.resolve(this._parsedData());\n    }\n    select(key) {\n      return Promise.resolve(this._select(this._parseKeyValue(key)));\n    }\n    insert(key, value) {\n      return Promise.resolve(this._upsert(this._parseKeyValue(key, value)));\n    }\n    update(key, value) {\n      return Promise.resolve(this._upsert(this._parseKeyValue(key, value)));\n    }\n    upsert(key, value) {\n      return Promise.resolve(this._upsert(this._parseKeyValue(key, value)));\n    }\n    delete(key) {\n      return Promise.resolve(this._delete(this._parseKeyValue(key)));\n    }\n    deleteAll() {\n      return Promise.resolve(this._clear());\n    }\n    clear() {\n      return Promise.resolve(this._clear());\n    }\n    static stringify(data) {\n      return json.stringify(data);\n    }\n    static parse(data) {\n      return json.parse(data);\n    }\n  }\n  var storage = Storage;\n\n  class IndexedDB extends storage {\n    constructor(options) {\n      super(options);\n    }\n    _parsedData() {\n      return this._tx('readonly', 'getAll').then(result => this.parse(result));\n    }\n    _select(keys) {\n      let ans = {};\n      let promises = [];\n      keys.forEach(key => promises.push(this._tx('readonly', 'get', key).then(r => ans[key] = this.parse(r))));\n      return Promise.all(promises).then(() => ans);\n    }\n    _upsert(data) {\n      let promises = [];\n      for (let key in data) {\n        let promise = this._tx('readonly', 'get', key).then(oldResult => {\n          if (oldResult && oldResult.key == key) {\n            return this._tx('readwrite', 'put', { 'key': key, 'value': data[key] });\n          } else {\n            return this._tx('readwrite', 'add', { 'key': key, 'value': data[key] });\n          }\n        });\n        promises.push(promise);\n      }\n      return Promise.all(promises);\n    }\n    _delete(keys) {\n      let promises = [];\n      keys.forEach(key => promises.push(this._tx('readwrite', 'delete', key)));\n      return Promise.all(promises);\n    }\n    _clear() {\n      return this._tx('readwrite', 'clear');\n    }\n    _tx(scope, fn, params) {\n      let me = this;\n      return this.createStore(me.tableName).then(db => {\n        return new Promise((resolve, reject) => {\n          let tx = db.transaction(me.tableName, scope).objectStore(me.tableName);\n          let request = tx[fn].call(tx, params);\n          request.onsuccess = event => resolve(event.target.result);\n          request.onerror = event => reject(event.error);\n        });\n      });\n    }\n    get store() {\n      return window.indexedDB;\n    }\n    createStore(table) {\n      return new Promise((resolve, reject) => {\n        const request = this.store.open(table, 1);\n        request.onupgradeneeded = event => {\n          let db = event.target.result;\n          db.createObjectStore(table, { keyPath: 'key' });\n        };\n        request.onsuccess = () => resolve(request.result);\n        request.onerror = () => reject(request.error);\n      });\n    }\n    parse(data) {\n      let ans = {};\n      if (Array.isArray(data)) {\n        data.forEach(row => {\n          ans[row.key] = row.value;\n        });\n      } else if (data && data.value) {\n        return data.value;\n      } else {\n        return undefined;\n      }\n      return ans;\n    }\n    static get type() {\n      return 'indexeddb';\n    }\n  }\n  var indexeddb = IndexedDB;\n\n  class WebSQL extends storage {\n    constructor(options) {\n      super(options);\n      this.createStore();\n    }\n    _parsedData() {\n      let me = this;\n      return new Promise(resolve => {\n        this.store.transaction(function (tx) {\n          tx.executeSql(`SELECT * FROM ${me.tableName}`, [], (txn, results) => {\n            resolve(me.parse(results));\n          });\n        });\n      });\n    }\n    _select(keys) {\n      let me = this;\n      let q = keys.map(() => '?').join(', ');\n      return this.execSql(`SELECT key, value FROM ${me.tableName} WHERE key in (${q})`, keys);\n    }\n    _upsert(data) {\n      let table = this.tableName;\n      this.store.transaction(tx => {\n        for (let key in data) {\n          tx.executeSql(`INSERT OR IGNORE INTO ${table}(key, value) VALUES (?, ?)`, [key, data[key]]);\n          tx.executeSql(`UPDATE ${table} SET value = ? WHERE key = ?`, [this.constructor.stringify(data[key]), key]);\n        }\n      });\n    }\n    _delete(keys) {\n      let table = this.tableName;\n      let q = keys.map(() => '?').join(', ');\n      return this.execSql(`DELETE FROM ${table} WHERE key in (${q})`, keys);\n    }\n    _clear() {\n      let table = this.tableName;\n      return this.execSql(`DELETE FROM ${table}`);\n    }\n    get store() {\n      if (typeof window !== 'undefined') {\n        return window.openDatabase('bs', 1, this._options.description, this._options.size);\n      } else {\n        return true;\n      }\n    }\n    createStore() {\n      let table = this.tableName;\n      if (typeof window == 'undefined') return;\n      return this.execSql(`CREATE TABLE IF NOT EXISTS ${table} (key unique, value)`);\n    }\n    execSql(query, args = []) {\n      let me = this;\n      return new Promise(resolve => {\n        me.store.transaction(function (tx) {\n          tx.executeSql(query, args, (txn, results) => {\n            resolve(me.parse(results));\n          });\n        });\n      });\n    }\n    parse(results) {\n      let ans = {};\n      let len = results.rows.length,\n          i;\n      for (i = 0; i < len; i++) {\n        ans[results.rows.item(i).key] = this.constructor.parse(results.rows.item(i).value);\n      }\n      return ans;\n    }\n    static get type() {\n      return 'websql';\n    }\n  }\n  var websql = WebSQL;\n\n  class LocalStorage extends storage {\n    constructor(options) {\n      super(options);\n    }\n    _parsedData() {\n      return this.table;\n    }\n    get table() {\n      return this.constructor.parse(this.store.getItem(this.tableName));\n    }\n    set table(value) {\n      this.store.setItem(this.tableName, this.constructor.stringify(value));\n    }\n    get store() {\n      return window.localStorage;\n    }\n    static get type() {\n      return 'localstorage';\n    }\n  }\n  var localstorage = LocalStorage;\n\n  class Cookies extends storage {\n    constructor(options) {\n      super(options);\n    }\n    _parsedData() {\n      return this.table;\n    }\n    get table() {\n      let result = this.store,\n          ans = {};\n      result = result.split('; ');\n      result.forEach(value => {\n        let [k, v] = value.split('=');\n        if (v) ans[k] = this.constructor.parse(v);\n      });\n      return ans[this.tableName] || {};\n    }\n    set table(value) {\n      document.cookie = `${this.tableName}=${storage.stringify(value)}; path=/`;\n    }\n    get store() {\n      return document.cookie;\n    }\n    static get type() {\n      return 'cookies';\n    }\n  }\n  var cookies = Cookies;\n\n  class JsonStorage extends storage {\n    constructor(options, data = {}) {\n      super(options);\n      this._upsert(this.constructor.parse(data));\n    }\n    _parsedData() {\n      return this._table;\n    }\n    get store() {\n      return this._table;\n    }\n    get table() {\n      return this._table || {};\n    }\n    set table(value) {\n      this._table = value;\n    }\n    static get type() {\n      return 'jsonstorage';\n    }\n  }\n  var jsonstorage = JsonStorage;\n\n  let storages = {};\n  storages[indexeddb.type] = indexeddb;\n  storages[websql.type] = websql;\n  storages[localstorage.type] = localstorage;\n  storages[cookies.type] = cookies;\n  storages[jsonstorage.type] = jsonstorage;\n  var storages_1 = storages;\n\n  class SifrrStorage {\n    constructor(options) {\n      if (typeof options == 'string') options = { priority: [options] };else options = options || {};\n      this._options = Object.assign(this.constructor.defaultOptions, options);\n      return this.storage;\n    }\n    get storage() {\n      let storage = this.supportedStore();\n      if (typeof storage == 'undefined') throw new Error('No available storage supported in this browser');\n      let matchingInstance = this.constructor._matchingInstance(this._options, storage.type);\n      if (matchingInstance) {\n        return matchingInstance;\n      } else {\n        let storageInstance = new storage(this._options);\n        this.constructor._add(storageInstance);\n        return storageInstance;\n      }\n    }\n    get priority() {\n      return this._options.priority.concat(['indexeddb', 'websql', 'localstorage', 'cookies', 'jsonstorage']);\n    }\n    supportedStore() {\n      for (let i = 0; i < this.priority.length; i++) {\n        let store = this.constructor.availableStores[this.priority[i]];\n        if (store && new store(this._options).isSupported()) return store;\n      }\n    }\n    static _matchingInstance(options, type) {\n      let allInstances = this.all,\n          i;\n      let length = allInstances.length;\n      for (i = 0; i < length; i++) {\n        if (allInstances[i]._isEqual(options, type)) return allInstances[i];\n      }\n      return false;\n    }\n    static _add(instance) {\n      this._all = this._all || [];\n      this._all.push(instance);\n    }\n    static get availableStores() {\n      return storages_1;\n    }\n    static get defaultOptions() {\n      return {\n        priority: [],\n        name: 'SifrrStorage',\n        version: 1,\n        description: 'Sifrr Storage',\n        size: 5 * 1024 * 1024\n      };\n    }\n    static get all() {\n      return this._all || [];\n    }\n    static json(data) {\n      return new jsonstorage({}, data);\n    }\n  }\n  var sifrr_storage = SifrrStorage;\n\n  return sifrr_storage;\n\n})));\n/*! (c) @aadityataparia */\n","window.Sifrr = window.Sifrr || {};\nwindow.Sifrr.Dom = require('@sifrr/dom');\nwindow.Sifrr.Storage = require('@sifrr/storage');\n\nconst Sifrr = window.Sifrr;\n\nconst location = window.location.href.split('/');\nlocation.pop();\n\nSifrr.Dom.setup({\n  baseUrl: location.join('/') + '/'\n});\nSifrr.Dom.Event.add('click')\nSifrr.Dom.load('sifrr-stater');\nSifrr.Dom.load('sifrr-tabs');\n"],"names":["request","module","type","url","options","_options","_url","window","fetch","this","then","resp","contentType","headers","get","includes","json","ok","error","Error","statusText","response","params","Object","keys","length","map","k","encodeURIComponent","join","assign","accept","hasOwnProperty","base","relative","stack","split","parts","pop","i","push","qIndex","indexOf","substring","Json","data","ans","JSON","parse","e","Array","isArray","forEach","v","stringify","a","b","key","deepClone","clone","temp","document","createElement","sfn","constants","cloneNode","update","element","name","newValue","fromValue","className","getAttribute","setAttribute","removeAttribute","nodeName","value","updateAttribute$1","shallowEqual","TEXT_NODE","COMMENT_NODE","makeChildrenEqual","parent","newChildren","oldL","childNodes","newL","removeChild","lastChild","appendChild","l","Math","min","item","head","firstChild","makeEqual","nextSibling","oldNode","newNode","state","replaceWith","nodeType","attr","oldAttrs","attributes","newAttrs","j","hasAttribute","specified","makeequal","TREE_WALKER","createTreeWalker","NodeFilter","SHOW_ALL","roll","n","filter","node","currentNode","parentNode","nextNode","Ref","idx","ref","stateMap","refs","x","fxn","indices","makeChildrenEqual$1","updateAttribute$2","collect$1","create$1","TEXT_NODE$1","COMMENT_NODE$1","ELEMENT_NODE","TEMPLATE","isHtml","el","dataset","sifrrHtml","contentEditable","sifrrRepeat","creator","nodeValue","trim","sm","innerHTML","html","text","replace","attrs","attrStateMap","attribute","events","Parser","_refs","constructor","dom","event","evaluateString","val","undefined","children","toString","prototype","slice","call","content","textContent","target","path","sifrrBind","root","_root","isSifrr","host","string","match","replacer","f","Function","bind","parser","TEMPLATE$1","Loader","elemName","config","all","instance","elementName","urls","htmlUrl","me","file","_all","template","querySelector","add","js","jsUrl","baseUrl","querySelectorAll","script","body","catch","console","warn","log","loader","collect$2","create$2","TEMPLATE$2","creator$1","from","ret","avalue","nodeData","updateState","simpleEl","doms","newState","oldState","_oldState","simpleelement","defaultState","oldDisplay","firstElementChild","style","display","remove","defineProperty","_state","sifrrClone","deep","elementClassFactory","baseClass","htmlElementClass","concat","observedAttrs","_ctemp","_stateMap","createStateMap","ctemp","toLowerCase","useSR","useShadowRoot","collectRefs","attachShadow","shadowRoot","addEventListener","twoWayBind","__content","onConnect","removeEventListener","onDisconnect","attrName","oldVal","newVal","onAttributeChange","onStateChange","args","sr","_arrayToDom","_domL","domArray","HTMLElement","SYNTHETIC_EVENTS","cssMatchEvent","callEach","fxns","css","matches","Promise","resolve","composedPath","eventHandler","nativeToSyntheticEvent","splice","dispatchEvent","Event","TEMPLATE$3","SifrrDom","Element","SimpleElement","str","extra","tmp","String","raw","s","register","customElements","define","elements","setup","addListener","load","executeScripts","Url","relativeTo","relativeUrl","absolute","factory","require$$0","storage","jsonConstructor","table","tableName","version","description","store","_parsedData","_select","_parseKeyValue","_upsert","_delete","_clear","indexeddb","_tx","result","promises","r","promise","oldResult","scope","fn","createStore","db","reject","tx","transaction","objectStore","onsuccess","onerror","indexedDB","open","onupgradeneeded","createObjectStore","keyPath","row","websql","executeSql","txn","results","q","execSql","openDatabase","size","query","len","rows","localstorage","getItem","setItem","localStorage","cookies","cookie","jsonstorage","_table","storages","storages_1","priority","defaultOptions","supportedStore","matchingInstance","_matchingInstance","storageInstance","_add","availableStores","isSupported","allInstances","_isEqual","Sifrr","Dom","Storage","require$$1","location","href"],"mappings":"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"}